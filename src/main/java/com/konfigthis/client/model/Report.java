/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.16.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.AnalyticsReportConstraintsOut;
import com.konfigthis.client.model.BusinessDetails;
import com.konfigthis.client.model.CashFlowCashFlowBalanceSummary;
import com.konfigthis.client.model.CashFlowCashFlowCharacteristicsSummary;
import com.konfigthis.client.model.CashFlowCashFlowCreditSummary;
import com.konfigthis.client.model.CashFlowCashFlowDebitSummary;
import com.konfigthis.client.model.CashFlowPossibleLoanDeposits;
import com.konfigthis.client.model.CustomerAnalytics;
import com.konfigthis.client.model.ErrorMessage;
import com.konfigthis.client.model.PayrollEmploymentHistoryVOIE;
import com.konfigthis.client.model.PrequalificationReportAssetSummary;
import com.konfigthis.client.model.ReportIncomeStreamSummary;
import com.konfigthis.client.model.ReportInstitution;
import com.konfigthis.client.model.VOIEPaystubWithStatementPayStatement;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * A report
 */
@ApiModel(description = "A report")@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class Report {
  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_CUSTOMER_TYPE = "customerType";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_TYPE)
  private String customerType;

  public static final String SERIALIZED_NAME_CUSTOMER_ID = "customerId";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_ID)
  private Long customerId;

  public static final String SERIALIZED_NAME_REQUEST_ID = "requestId";
  @SerializedName(SERIALIZED_NAME_REQUEST_ID)
  private String requestId;

  public static final String SERIALIZED_NAME_REQUESTER_NAME = "requesterName";
  @SerializedName(SERIALIZED_NAME_REQUESTER_NAME)
  private String requesterName;

  public static final String SERIALIZED_NAME_CREATED_DATE = "createdDate";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE)
  private Long createdDate;

  public static final String SERIALIZED_NAME_CONSUMER_ID = "consumerId";
  @SerializedName(SERIALIZED_NAME_CONSUMER_ID)
  private String consumerId;

  public static final String SERIALIZED_NAME_CONSUMER_SSN = "consumerSsn";
  @SerializedName(SERIALIZED_NAME_CONSUMER_SSN)
  private String consumerSsn;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_ERRORS = "errors";
  @SerializedName(SERIALIZED_NAME_ERRORS)
  private List<ErrorMessage> errors = null;

  public static final String SERIALIZED_NAME_BUSINESS_DETAILS = "businessDetails";
  @SerializedName(SERIALIZED_NAME_BUSINESS_DETAILS)
  private BusinessDetails businessDetails;

  public static final String SERIALIZED_NAME_REPORT_PIN = "reportPin";
  @SerializedName(SERIALIZED_NAME_REPORT_PIN)
  private String reportPin;

  public static final String SERIALIZED_NAME_CONSTRAINTS = "constraints";
  @SerializedName(SERIALIZED_NAME_CONSTRAINTS)
  private AnalyticsReportConstraintsOut constraints;

  public static final String SERIALIZED_NAME_START_DATE = "startDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private Long startDate;

  public static final String SERIALIZED_NAME_END_DATE = "endDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private Long endDate;

  public static final String SERIALIZED_NAME_DAYS = "days";
  @SerializedName(SERIALIZED_NAME_DAYS)
  private Long days;

  public static final String SERIALIZED_NAME_SEASONED = "seasoned";
  @SerializedName(SERIALIZED_NAME_SEASONED)
  private Boolean seasoned;

  public static final String SERIALIZED_NAME_INSTITUTIONS = "institutions";
  @SerializedName(SERIALIZED_NAME_INSTITUTIONS)
  private List<ReportInstitution> institutions = null;

  public static final String SERIALIZED_NAME_CUSTOMER_ANALYTICS = "customerAnalytics";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_ANALYTICS)
  private CustomerAnalytics customerAnalytics;

  public static final String SERIALIZED_NAME_PORTFOLIO_ID = "portfolioId";
  @SerializedName(SERIALIZED_NAME_PORTFOLIO_ID)
  private String portfolioId;

  public static final String SERIALIZED_NAME_CASH_FLOW_BALANCE_SUMMARY = "cashFlowBalanceSummary";
  @SerializedName(SERIALIZED_NAME_CASH_FLOW_BALANCE_SUMMARY)
  private CashFlowCashFlowBalanceSummary cashFlowBalanceSummary;

  public static final String SERIALIZED_NAME_CASH_FLOW_CREDIT_SUMMARY = "cashFlowCreditSummary";
  @SerializedName(SERIALIZED_NAME_CASH_FLOW_CREDIT_SUMMARY)
  private CashFlowCashFlowCreditSummary cashFlowCreditSummary;

  public static final String SERIALIZED_NAME_CASH_FLOW_DEBIT_SUMMARY = "cashFlowDebitSummary";
  @SerializedName(SERIALIZED_NAME_CASH_FLOW_DEBIT_SUMMARY)
  private CashFlowCashFlowDebitSummary cashFlowDebitSummary;

  public static final String SERIALIZED_NAME_CASH_FLOW_CHARACTERISTICS_SUMMARY = "cashFlowCharacteristicsSummary";
  @SerializedName(SERIALIZED_NAME_CASH_FLOW_CHARACTERISTICS_SUMMARY)
  private CashFlowCashFlowCharacteristicsSummary cashFlowCharacteristicsSummary;

  public static final String SERIALIZED_NAME_POSSIBLE_LOAN_DEPOSITS = "possibleLoanDeposits";
  @SerializedName(SERIALIZED_NAME_POSSIBLE_LOAN_DEPOSITS)
  private List<CashFlowPossibleLoanDeposits> possibleLoanDeposits = null;

  public static final String SERIALIZED_NAME_CONSOLIDATED_AVAILABLE_BALANCE = "consolidatedAvailableBalance";
  @SerializedName(SERIALIZED_NAME_CONSOLIDATED_AVAILABLE_BALANCE)
  private Double consolidatedAvailableBalance;

  public static final String SERIALIZED_NAME_ASSETS = "assets";
  @SerializedName(SERIALIZED_NAME_ASSETS)
  private PrequalificationReportAssetSummary assets;

  public static final String SERIALIZED_NAME_REPORT_STYLE = "reportStyle";
  @SerializedName(SERIALIZED_NAME_REPORT_STYLE)
  private String reportStyle;

  public static final String SERIALIZED_NAME_NUMBER_OF_BILLABLE_ASSETS = "numberOfBillableAssets";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_BILLABLE_ASSETS)
  private Integer numberOfBillableAssets;

  public static final String SERIALIZED_NAME_ASSET_IDS = "assetIds";
  @SerializedName(SERIALIZED_NAME_ASSET_IDS)
  private List<String> assetIds = null;

  public static final String SERIALIZED_NAME_PAY_STATEMENTS = "payStatements";
  @SerializedName(SERIALIZED_NAME_PAY_STATEMENTS)
  private List<VOIEPaystubWithStatementPayStatement> payStatements = null;

  public static final String SERIALIZED_NAME_ASSET_ID = "assetId";
  @SerializedName(SERIALIZED_NAME_ASSET_ID)
  private String assetId;

  public static final String SERIALIZED_NAME_EMPLOYMENT_HISTORY = "employmentHistory";
  @SerializedName(SERIALIZED_NAME_EMPLOYMENT_HISTORY)
  private List<PayrollEmploymentHistoryVOIE> employmentHistory = null;

  public static final String SERIALIZED_NAME_GSE_ENABLED = "gseEnabled";
  @SerializedName(SERIALIZED_NAME_GSE_ENABLED)
  private Boolean gseEnabled;

  public static final String SERIALIZED_NAME_INCOME = "income";
  @SerializedName(SERIALIZED_NAME_INCOME)
  private List<ReportIncomeStreamSummary> income = null;

  public Report() {
  }

  public Report title(String title) {
    
    
    
    
    this.title = title;
    return this;
  }

   /**
   * Title of the report
   * @return title
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "Finicity Asset Ready Report (CRA)", required = true, value = "Title of the report")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    
    
    
    this.title = title;
  }


  public Report id(String id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * A report ID
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "u4hstnnak45g", required = true, value = "A report ID")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    
    
    
    this.id = id;
  }


  public Report customerType(String customerType) {
    
    
    
    
    this.customerType = customerType;
    return this;
  }

   /**
   * The type of customer (\&quot;active\&quot; or \&quot;testing\&quot; or \&quot;\&quot; for all types)
   * @return customerType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "active", required = true, value = "The type of customer (\"active\" or \"testing\" or \"\" for all types)")

  public String getCustomerType() {
    return customerType;
  }


  public void setCustomerType(String customerType) {
    
    
    
    this.customerType = customerType;
  }


  public Report customerId(Long customerId) {
    
    
    
    
    this.customerId = customerId;
    return this;
  }

   /**
   * A customer ID represented as a number. See Add Customer API for how to create a customer ID.
   * @return customerId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "1005061234", required = true, value = "A customer ID represented as a number. See Add Customer API for how to create a customer ID.")

  public Long getCustomerId() {
    return customerId;
  }


  public void setCustomerId(Long customerId) {
    
    
    
    this.customerId = customerId;
  }


  public Report requestId(String requestId) {
    
    
    
    
    this.requestId = requestId;
    return this;
  }

   /**
   * Finicity indicator to track all activity associated with this report
   * @return requestId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "cjqm4wtdcn", required = true, value = "Finicity indicator to track all activity associated with this report")

  public String getRequestId() {
    return requestId;
  }


  public void setRequestId(String requestId) {
    
    
    
    this.requestId = requestId;
  }


  public Report requesterName(String requesterName) {
    
    
    
    
    this.requesterName = requesterName;
    return this;
  }

   /**
   * Name of a Finicity partner
   * @return requesterName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "Finicity Test API", required = true, value = "Name of a Finicity partner")

  public String getRequesterName() {
    return requesterName;
  }


  public void setRequesterName(String requesterName) {
    
    
    
    this.requesterName = requesterName;
  }


  public Report createdDate(Long createdDate) {
    
    
    
    
    this.createdDate = createdDate;
    return this;
  }

   /**
   * A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/). Note: If the report is retrieved on a day other than the day it was generated, on the header of the PDF version of the report there will be a \&quot;Retrieved Date\&quot; populated.
   * @return createdDate
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "1607450357", required = true, value = "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/). Note: If the report is retrieved on a day other than the day it was generated, on the header of the PDF version of the report there will be a \"Retrieved Date\" populated.")

  public Long getCreatedDate() {
    return createdDate;
  }


  public void setCreatedDate(Long createdDate) {
    
    
    
    this.createdDate = createdDate;
  }


  public Report consumerId(String consumerId) {
    
    
    
    
    this.consumerId = consumerId;
    return this;
  }

   /**
   * A consumer ID. See Create Consumer API for how to create a consumer ID.
   * @return consumerId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0bf46322c167b562e6cbed9d40e19a4c", value = "A consumer ID. See Create Consumer API for how to create a consumer ID.")

  public String getConsumerId() {
    return consumerId;
  }


  public void setConsumerId(String consumerId) {
    
    
    
    this.consumerId = consumerId;
  }


  public Report consumerSsn(String consumerSsn) {
    
    
    
    
    this.consumerSsn = consumerSsn;
    return this;
  }

   /**
   * Last 4 digits of a SSN
   * @return consumerSsn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "9999", value = "Last 4 digits of a SSN")

  public String getConsumerSsn() {
    return consumerSsn;
  }


  public void setConsumerSsn(String consumerSsn) {
    
    
    
    this.consumerSsn = consumerSsn;
  }


  public Report type(String type) {
    
    
    
    
    this.type = type;
    return this;
  }

   /**
   * A report type. Possible values:  * &#x60;voi&#x60;  * &#x60;voa&#x60;  * &#x60;voaHistory&#x60;  * &#x60;history&#x60;  * &#x60;voieTxVerify&#x60;  * &#x60;voieWithReport&#x60;  * &#x60;voieWithInterview&#x60;  * &#x60;paystatement&#x60;  * &#x60;preQualVoa&#x60;  * &#x60;assetSummary&#x60;  * &#x60;voie&#x60;  * &#x60;transactions&#x60;  * &#x60;statement&#x60;  * &#x60;voiePayroll&#x60;  * &#x60;voeTransactions&#x60;  * &#x60;voePayroll&#x60;  * &#x60;cfrp&#x60;  * &#x60;cfrb&#x60;  * &#x60;barpcra&#x60;  * &#x60;barpnoncra&#x60;  * &#x60;barbcra&#x60;  * &#x60;barbftc&#x60;  * &#x60;barbnoncra&#x60; 
   * @return type
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "voi", required = true, value = "A report type. Possible values:  * `voi`  * `voa`  * `voaHistory`  * `history`  * `voieTxVerify`  * `voieWithReport`  * `voieWithInterview`  * `paystatement`  * `preQualVoa`  * `assetSummary`  * `voie`  * `transactions`  * `statement`  * `voiePayroll`  * `voeTransactions`  * `voePayroll`  * `cfrp`  * `cfrb`  * `barpcra`  * `barpnoncra`  * `barbcra`  * `barbftc`  * `barbnoncra` ")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    
    
    
    this.type = type;
  }


  public Report status(String status) {
    
    
    
    
    this.status = status;
    return this;
  }

   /**
   * A report generation status. Possible values:  * &#x60;inProgress&#x60;  * &#x60;success&#x60;  * &#x60;failure&#x60; 
   * @return status
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "inProgress", required = true, value = "A report generation status. Possible values:  * `inProgress`  * `success`  * `failure` ")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    
    
    
    this.status = status;
  }


  public Report errors(List<ErrorMessage> errors) {
    
    
    
    
    this.errors = errors;
    return this;
  }

  public Report addErrorsItem(ErrorMessage errorsItem) {
    if (this.errors == null) {
      this.errors = new ArrayList<>();
    }
    this.errors.add(errorsItem);
    return this;
  }

   /**
   * In case errors occurred during the report generation
   * @return errors
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "In case errors occurred during the report generation")

  public List<ErrorMessage> getErrors() {
    return errors;
  }


  public void setErrors(List<ErrorMessage> errors) {
    
    
    
    this.errors = errors;
  }


  public Report businessDetails(BusinessDetails businessDetails) {
    
    
    
    
    this.businessDetails = businessDetails;
    return this;
  }

   /**
   * Get businessDetails
   * @return businessDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BusinessDetails getBusinessDetails() {
    return businessDetails;
  }


  public void setBusinessDetails(BusinessDetails businessDetails) {
    
    
    
    this.businessDetails = businessDetails;
  }


  public Report reportPin(String reportPin) {
    
    
    
    
    this.reportPin = reportPin;
    return this;
  }

   /**
   * A unique key returned per report for consumer Portal
   * @return reportPin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2398jk", value = "A unique key returned per report for consumer Portal")

  public String getReportPin() {
    return reportPin;
  }


  public void setReportPin(String reportPin) {
    
    
    
    this.reportPin = reportPin;
  }


  public Report constraints(AnalyticsReportConstraintsOut constraints) {
    
    
    
    
    this.constraints = constraints;
    return this;
  }

   /**
   * Get constraints
   * @return constraints
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public AnalyticsReportConstraintsOut getConstraints() {
    return constraints;
  }


  public void setConstraints(AnalyticsReportConstraintsOut constraints) {
    
    
    
    this.constraints = constraints;
  }


  public Report startDate(Long startDate) {
    
    
    
    
    this.startDate = startDate;
    return this;
  }

   /**
   * The &#x60;postedDate&#x60; of the earliest transaction analyzed for the report. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return startDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1607450357", value = "The `postedDate` of the earliest transaction analyzed for the report. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).")

  public Long getStartDate() {
    return startDate;
  }


  public void setStartDate(Long startDate) {
    
    
    
    this.startDate = startDate;
  }


  public Report endDate(Long endDate) {
    
    
    
    
    this.endDate = endDate;
    return this;
  }

   /**
   * The &#x60;postedDate&#x60; of the latest transaction analyzed for the report. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return endDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1607450357", value = "The `postedDate` of the latest transaction analyzed for the report. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).")

  public Long getEndDate() {
    return endDate;
  }


  public void setEndDate(Long endDate) {
    
    
    
    this.endDate = endDate;
  }


  public Report days(Long days) {
    
    
    
    
    this.days = days;
    return this;
  }

   /**
   * Number of days covered by the report
   * @return days
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "200", value = "Number of days covered by the report")

  public Long getDays() {
    return days;
  }


  public void setDays(Long days) {
    
    
    
    this.days = days;
  }


  public Report seasoned(Boolean seasoned) {
    
    
    
    
    this.seasoned = seasoned;
    return this;
  }

   /**
   * \&quot;true\&quot; if the report covers more than 180 days
   * @return seasoned
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "\"true\" if the report covers more than 180 days")

  public Boolean getSeasoned() {
    return seasoned;
  }


  public void setSeasoned(Boolean seasoned) {
    
    
    
    this.seasoned = seasoned;
  }


  public Report institutions(List<ReportInstitution> institutions) {
    
    
    
    
    this.institutions = institutions;
    return this;
  }

  public Report addInstitutionsItem(ReportInstitution institutionsItem) {
    if (this.institutions == null) {
      this.institutions = new ArrayList<>();
    }
    this.institutions.add(institutionsItem);
    return this;
  }

   /**
   * The details of the financial institution accounts included in the report.
   * @return institutions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The details of the financial institution accounts included in the report.")

  public List<ReportInstitution> getInstitutions() {
    return institutions;
  }


  public void setInstitutions(List<ReportInstitution> institutions) {
    
    
    
    this.institutions = institutions;
  }


  public Report customerAnalytics(CustomerAnalytics customerAnalytics) {
    
    
    
    
    this.customerAnalytics = customerAnalytics;
    return this;
  }

   /**
   * Get customerAnalytics
   * @return customerAnalytics
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CustomerAnalytics getCustomerAnalytics() {
    return customerAnalytics;
  }


  public void setCustomerAnalytics(CustomerAnalytics customerAnalytics) {
    
    
    
    this.customerAnalytics = customerAnalytics;
  }


  public Report portfolioId(String portfolioId) {
    
    
    
    
    this.portfolioId = portfolioId;
    return this;
  }

   /**
   * A unique identifier that will be consistent across all reports created for the same customer
   * @return portfolioId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "y4zsgccj4xpw-6-port", value = "A unique identifier that will be consistent across all reports created for the same customer")

  public String getPortfolioId() {
    return portfolioId;
  }


  public void setPortfolioId(String portfolioId) {
    
    
    
    this.portfolioId = portfolioId;
  }


  public Report cashFlowBalanceSummary(CashFlowCashFlowBalanceSummary cashFlowBalanceSummary) {
    
    
    
    
    this.cashFlowBalanceSummary = cashFlowBalanceSummary;
    return this;
  }

   /**
   * Get cashFlowBalanceSummary
   * @return cashFlowBalanceSummary
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CashFlowCashFlowBalanceSummary getCashFlowBalanceSummary() {
    return cashFlowBalanceSummary;
  }


  public void setCashFlowBalanceSummary(CashFlowCashFlowBalanceSummary cashFlowBalanceSummary) {
    
    
    
    this.cashFlowBalanceSummary = cashFlowBalanceSummary;
  }


  public Report cashFlowCreditSummary(CashFlowCashFlowCreditSummary cashFlowCreditSummary) {
    
    
    
    
    this.cashFlowCreditSummary = cashFlowCreditSummary;
    return this;
  }

   /**
   * Get cashFlowCreditSummary
   * @return cashFlowCreditSummary
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CashFlowCashFlowCreditSummary getCashFlowCreditSummary() {
    return cashFlowCreditSummary;
  }


  public void setCashFlowCreditSummary(CashFlowCashFlowCreditSummary cashFlowCreditSummary) {
    
    
    
    this.cashFlowCreditSummary = cashFlowCreditSummary;
  }


  public Report cashFlowDebitSummary(CashFlowCashFlowDebitSummary cashFlowDebitSummary) {
    
    
    
    
    this.cashFlowDebitSummary = cashFlowDebitSummary;
    return this;
  }

   /**
   * Get cashFlowDebitSummary
   * @return cashFlowDebitSummary
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CashFlowCashFlowDebitSummary getCashFlowDebitSummary() {
    return cashFlowDebitSummary;
  }


  public void setCashFlowDebitSummary(CashFlowCashFlowDebitSummary cashFlowDebitSummary) {
    
    
    
    this.cashFlowDebitSummary = cashFlowDebitSummary;
  }


  public Report cashFlowCharacteristicsSummary(CashFlowCashFlowCharacteristicsSummary cashFlowCharacteristicsSummary) {
    
    
    
    
    this.cashFlowCharacteristicsSummary = cashFlowCharacteristicsSummary;
    return this;
  }

   /**
   * Get cashFlowCharacteristicsSummary
   * @return cashFlowCharacteristicsSummary
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CashFlowCashFlowCharacteristicsSummary getCashFlowCharacteristicsSummary() {
    return cashFlowCharacteristicsSummary;
  }


  public void setCashFlowCharacteristicsSummary(CashFlowCashFlowCharacteristicsSummary cashFlowCharacteristicsSummary) {
    
    
    
    this.cashFlowCharacteristicsSummary = cashFlowCharacteristicsSummary;
  }


  public Report possibleLoanDeposits(List<CashFlowPossibleLoanDeposits> possibleLoanDeposits) {
    
    
    
    
    this.possibleLoanDeposits = possibleLoanDeposits;
    return this;
  }

  public Report addPossibleLoanDepositsItem(CashFlowPossibleLoanDeposits possibleLoanDepositsItem) {
    if (this.possibleLoanDeposits == null) {
      this.possibleLoanDeposits = new ArrayList<>();
    }
    this.possibleLoanDeposits.add(possibleLoanDepositsItem);
    return this;
  }

   /**
   * A possible loan deposits record
   * @return possibleLoanDeposits
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A possible loan deposits record")

  public List<CashFlowPossibleLoanDeposits> getPossibleLoanDeposits() {
    return possibleLoanDeposits;
  }


  public void setPossibleLoanDeposits(List<CashFlowPossibleLoanDeposits> possibleLoanDeposits) {
    
    
    
    this.possibleLoanDeposits = possibleLoanDeposits;
  }


  public Report consolidatedAvailableBalance(Double consolidatedAvailableBalance) {
    
    
    
    
    this.consolidatedAvailableBalance = consolidatedAvailableBalance;
    return this;
  }

  public Report consolidatedAvailableBalance(Integer consolidatedAvailableBalance) {
    
    
    
    
    this.consolidatedAvailableBalance = consolidatedAvailableBalance.doubleValue();
    return this;
  }

   /**
   * The sum of available balance for all of the accounts included in the report
   * @return consolidatedAvailableBalance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1929.57", value = "The sum of available balance for all of the accounts included in the report")

  public Double getConsolidatedAvailableBalance() {
    return consolidatedAvailableBalance;
  }


  public void setConsolidatedAvailableBalance(Double consolidatedAvailableBalance) {
    
    
    
    this.consolidatedAvailableBalance = consolidatedAvailableBalance;
  }


  public Report assets(PrequalificationReportAssetSummary assets) {
    
    
    
    
    this.assets = assets;
    return this;
  }

   /**
   * Get assets
   * @return assets
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PrequalificationReportAssetSummary getAssets() {
    return assets;
  }


  public void setAssets(PrequalificationReportAssetSummary assets) {
    
    
    
    this.assets = assets;
  }


  public Report reportStyle(String reportStyle) {
    
    
    
    
    this.reportStyle = reportStyle;
    return this;
  }

   /**
   * A report style. Possible values are directAPIPayroll, credentialedPayroll, paystatement, voieWithInterview, voieWithStatement, voieWithReport
   * @return reportStyle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "credentialedPayroll", value = "A report style. Possible values are directAPIPayroll, credentialedPayroll, paystatement, voieWithInterview, voieWithStatement, voieWithReport")

  public String getReportStyle() {
    return reportStyle;
  }


  public void setReportStyle(String reportStyle) {
    
    
    
    this.reportStyle = reportStyle;
  }


  public Report numberOfBillableAssets(Integer numberOfBillableAssets) {
    
    
    
    
    this.numberOfBillableAssets = numberOfBillableAssets;
    return this;
  }

   /**
   * Total number of billable pay statements included in the report
   * @return numberOfBillableAssets
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "Total number of billable pay statements included in the report")

  public Integer getNumberOfBillableAssets() {
    return numberOfBillableAssets;
  }


  public void setNumberOfBillableAssets(Integer numberOfBillableAssets) {
    
    
    
    this.numberOfBillableAssets = numberOfBillableAssets;
  }


  public Report assetIds(List<String> assetIds) {
    
    
    
    
    this.assetIds = assetIds;
    return this;
  }

  public Report addAssetIdsItem(String assetIdsItem) {
    if (this.assetIds == null) {
      this.assetIds = new ArrayList<>();
    }
    this.assetIds.add(assetIdsItem);
    return this;
  }

   /**
   * The pay statements included in the report
   * @return assetIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The pay statements included in the report")

  public List<String> getAssetIds() {
    return assetIds;
  }


  public void setAssetIds(List<String> assetIds) {
    
    
    
    this.assetIds = assetIds;
  }


  public Report payStatements(List<VOIEPaystubWithStatementPayStatement> payStatements) {
    
    
    
    
    this.payStatements = payStatements;
    return this;
  }

  public Report addPayStatementsItem(VOIEPaystubWithStatementPayStatement payStatementsItem) {
    if (this.payStatements == null) {
      this.payStatements = new ArrayList<>();
    }
    this.payStatements.add(payStatementsItem);
    return this;
  }

   /**
   * Extracted pay statement details, and the transaction matching summary
   * @return payStatements
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Extracted pay statement details, and the transaction matching summary")

  public List<VOIEPaystubWithStatementPayStatement> getPayStatements() {
    return payStatements;
  }


  public void setPayStatements(List<VOIEPaystubWithStatementPayStatement> payStatements) {
    
    
    
    this.payStatements = payStatements;
  }


  public Report assetId(String assetId) {
    
    
    
    
    this.assetId = assetId;
    return this;
  }

   /**
   * An asset ID. Generated by Connect or by using the Store Customer Pay Statement API.
   * @return assetId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "097545c5-1c2a-4f20-a5ef-77f0820344c9-2018601178", value = "An asset ID. Generated by Connect or by using the Store Customer Pay Statement API.")

  public String getAssetId() {
    return assetId;
  }


  public void setAssetId(String assetId) {
    
    
    
    this.assetId = assetId;
  }


  public Report employmentHistory(List<PayrollEmploymentHistoryVOIE> employmentHistory) {
    
    
    
    
    this.employmentHistory = employmentHistory;
    return this;
  }

  public Report addEmploymentHistoryItem(PayrollEmploymentHistoryVOIE employmentHistoryItem) {
    if (this.employmentHistory == null) {
      this.employmentHistory = new ArrayList<>();
    }
    this.employmentHistory.add(employmentHistoryItem);
    return this;
  }

   /**
   * An array of employment histories, one for each of the consumer&#39;s verified employers
   * @return employmentHistory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array of employment histories, one for each of the consumer's verified employers")

  public List<PayrollEmploymentHistoryVOIE> getEmploymentHistory() {
    return employmentHistory;
  }


  public void setEmploymentHistory(List<PayrollEmploymentHistoryVOIE> employmentHistory) {
    
    
    
    this.employmentHistory = employmentHistory;
  }


  public Report gseEnabled(Boolean gseEnabled) {
    
    
    
    
    this.gseEnabled = gseEnabled;
    return this;
  }

   /**
   * Mastercard Open Banking internal use only to flag reports that should not be retrieved by the GSE&#39;s (Government-Sponsored Enterprise).  This is a mandatory field for VOE-payroll and VOIE-payroll report types.
   * @return gseEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Mastercard Open Banking internal use only to flag reports that should not be retrieved by the GSE's (Government-Sponsored Enterprise).  This is a mandatory field for VOE-payroll and VOIE-payroll report types.")

  public Boolean getGseEnabled() {
    return gseEnabled;
  }


  public void setGseEnabled(Boolean gseEnabled) {
    
    
    
    this.gseEnabled = gseEnabled;
  }


  public Report income(List<ReportIncomeStreamSummary> income) {
    
    
    
    
    this.income = income;
    return this;
  }

  public Report addIncomeItem(ReportIncomeStreamSummary incomeItem) {
    if (this.income == null) {
      this.income = new ArrayList<>();
    }
    this.income.add(incomeItem);
    return this;
  }

   /**
   * Income details
   * @return income
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Income details")

  public List<ReportIncomeStreamSummary> getIncome() {
    return income;
  }


  public void setIncome(List<ReportIncomeStreamSummary> income) {
    
    
    
    this.income = income;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the Report instance itself
   */
  public Report putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Report report = (Report) o;
    return Objects.equals(this.title, report.title) &&
        Objects.equals(this.id, report.id) &&
        Objects.equals(this.customerType, report.customerType) &&
        Objects.equals(this.customerId, report.customerId) &&
        Objects.equals(this.requestId, report.requestId) &&
        Objects.equals(this.requesterName, report.requesterName) &&
        Objects.equals(this.createdDate, report.createdDate) &&
        Objects.equals(this.consumerId, report.consumerId) &&
        Objects.equals(this.consumerSsn, report.consumerSsn) &&
        Objects.equals(this.type, report.type) &&
        Objects.equals(this.status, report.status) &&
        Objects.equals(this.errors, report.errors) &&
        Objects.equals(this.businessDetails, report.businessDetails) &&
        Objects.equals(this.reportPin, report.reportPin) &&
        Objects.equals(this.constraints, report.constraints) &&
        Objects.equals(this.startDate, report.startDate) &&
        Objects.equals(this.endDate, report.endDate) &&
        Objects.equals(this.days, report.days) &&
        Objects.equals(this.seasoned, report.seasoned) &&
        Objects.equals(this.institutions, report.institutions) &&
        Objects.equals(this.customerAnalytics, report.customerAnalytics) &&
        Objects.equals(this.portfolioId, report.portfolioId) &&
        Objects.equals(this.cashFlowBalanceSummary, report.cashFlowBalanceSummary) &&
        Objects.equals(this.cashFlowCreditSummary, report.cashFlowCreditSummary) &&
        Objects.equals(this.cashFlowDebitSummary, report.cashFlowDebitSummary) &&
        Objects.equals(this.cashFlowCharacteristicsSummary, report.cashFlowCharacteristicsSummary) &&
        Objects.equals(this.possibleLoanDeposits, report.possibleLoanDeposits) &&
        Objects.equals(this.consolidatedAvailableBalance, report.consolidatedAvailableBalance) &&
        Objects.equals(this.assets, report.assets) &&
        Objects.equals(this.reportStyle, report.reportStyle) &&
        Objects.equals(this.numberOfBillableAssets, report.numberOfBillableAssets) &&
        Objects.equals(this.assetIds, report.assetIds) &&
        Objects.equals(this.payStatements, report.payStatements) &&
        Objects.equals(this.assetId, report.assetId) &&
        Objects.equals(this.employmentHistory, report.employmentHistory) &&
        Objects.equals(this.gseEnabled, report.gseEnabled) &&
        Objects.equals(this.income, report.income)&&
        Objects.equals(this.additionalProperties, report.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, id, customerType, customerId, requestId, requesterName, createdDate, consumerId, consumerSsn, type, status, errors, businessDetails, reportPin, constraints, startDate, endDate, days, seasoned, institutions, customerAnalytics, portfolioId, cashFlowBalanceSummary, cashFlowCreditSummary, cashFlowDebitSummary, cashFlowCharacteristicsSummary, possibleLoanDeposits, consolidatedAvailableBalance, assets, reportStyle, numberOfBillableAssets, assetIds, payStatements, assetId, employmentHistory, gseEnabled, income, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Report {\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    customerType: ").append(toIndentedString(customerType)).append("\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    requesterName: ").append(toIndentedString(requesterName)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    consumerId: ").append(toIndentedString(consumerId)).append("\n");
    sb.append("    consumerSsn: ").append(toIndentedString(consumerSsn)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("    businessDetails: ").append(toIndentedString(businessDetails)).append("\n");
    sb.append("    reportPin: ").append(toIndentedString(reportPin)).append("\n");
    sb.append("    constraints: ").append(toIndentedString(constraints)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    days: ").append(toIndentedString(days)).append("\n");
    sb.append("    seasoned: ").append(toIndentedString(seasoned)).append("\n");
    sb.append("    institutions: ").append(toIndentedString(institutions)).append("\n");
    sb.append("    customerAnalytics: ").append(toIndentedString(customerAnalytics)).append("\n");
    sb.append("    portfolioId: ").append(toIndentedString(portfolioId)).append("\n");
    sb.append("    cashFlowBalanceSummary: ").append(toIndentedString(cashFlowBalanceSummary)).append("\n");
    sb.append("    cashFlowCreditSummary: ").append(toIndentedString(cashFlowCreditSummary)).append("\n");
    sb.append("    cashFlowDebitSummary: ").append(toIndentedString(cashFlowDebitSummary)).append("\n");
    sb.append("    cashFlowCharacteristicsSummary: ").append(toIndentedString(cashFlowCharacteristicsSummary)).append("\n");
    sb.append("    possibleLoanDeposits: ").append(toIndentedString(possibleLoanDeposits)).append("\n");
    sb.append("    consolidatedAvailableBalance: ").append(toIndentedString(consolidatedAvailableBalance)).append("\n");
    sb.append("    assets: ").append(toIndentedString(assets)).append("\n");
    sb.append("    reportStyle: ").append(toIndentedString(reportStyle)).append("\n");
    sb.append("    numberOfBillableAssets: ").append(toIndentedString(numberOfBillableAssets)).append("\n");
    sb.append("    assetIds: ").append(toIndentedString(assetIds)).append("\n");
    sb.append("    payStatements: ").append(toIndentedString(payStatements)).append("\n");
    sb.append("    assetId: ").append(toIndentedString(assetId)).append("\n");
    sb.append("    employmentHistory: ").append(toIndentedString(employmentHistory)).append("\n");
    sb.append("    gseEnabled: ").append(toIndentedString(gseEnabled)).append("\n");
    sb.append("    income: ").append(toIndentedString(income)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("title");
    openapiFields.add("id");
    openapiFields.add("customerType");
    openapiFields.add("customerId");
    openapiFields.add("requestId");
    openapiFields.add("requesterName");
    openapiFields.add("createdDate");
    openapiFields.add("consumerId");
    openapiFields.add("consumerSsn");
    openapiFields.add("type");
    openapiFields.add("status");
    openapiFields.add("errors");
    openapiFields.add("businessDetails");
    openapiFields.add("reportPin");
    openapiFields.add("constraints");
    openapiFields.add("startDate");
    openapiFields.add("endDate");
    openapiFields.add("days");
    openapiFields.add("seasoned");
    openapiFields.add("institutions");
    openapiFields.add("customerAnalytics");
    openapiFields.add("portfolioId");
    openapiFields.add("cashFlowBalanceSummary");
    openapiFields.add("cashFlowCreditSummary");
    openapiFields.add("cashFlowDebitSummary");
    openapiFields.add("cashFlowCharacteristicsSummary");
    openapiFields.add("possibleLoanDeposits");
    openapiFields.add("consolidatedAvailableBalance");
    openapiFields.add("assets");
    openapiFields.add("reportStyle");
    openapiFields.add("numberOfBillableAssets");
    openapiFields.add("assetIds");
    openapiFields.add("payStatements");
    openapiFields.add("assetId");
    openapiFields.add("employmentHistory");
    openapiFields.add("gseEnabled");
    openapiFields.add("income");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("title");
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("customerType");
    openapiRequiredFields.add("customerId");
    openapiRequiredFields.add("requestId");
    openapiRequiredFields.add("requesterName");
    openapiRequiredFields.add("createdDate");
    openapiRequiredFields.add("type");
    openapiRequiredFields.add("status");
    openapiRequiredFields.add("constraints");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to Report
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!Report.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Report is not found in the empty JSON string", Report.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : Report.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      if (!jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if (!jsonObj.get("customerType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerType").toString()));
      }
      if (!jsonObj.get("requestId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `requestId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("requestId").toString()));
      }
      if (!jsonObj.get("requesterName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `requesterName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("requesterName").toString()));
      }
      if ((jsonObj.get("consumerId") != null && !jsonObj.get("consumerId").isJsonNull()) && !jsonObj.get("consumerId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `consumerId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("consumerId").toString()));
      }
      if ((jsonObj.get("consumerSsn") != null && !jsonObj.get("consumerSsn").isJsonNull()) && !jsonObj.get("consumerSsn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `consumerSsn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("consumerSsn").toString()));
      }
      if (!jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      if (!jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if (jsonObj.get("errors") != null && !jsonObj.get("errors").isJsonNull()) {
        JsonArray jsonArrayerrors = jsonObj.getAsJsonArray("errors");
        if (jsonArrayerrors != null) {
          // ensure the json data is an array
          if (!jsonObj.get("errors").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `errors` to be an array in the JSON string but got `%s`", jsonObj.get("errors").toString()));
          }

          // validate the optional field `errors` (array)
          for (int i = 0; i < jsonArrayerrors.size(); i++) {
            ErrorMessage.validateJsonObject(jsonArrayerrors.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `businessDetails`
      if (jsonObj.get("businessDetails") != null && !jsonObj.get("businessDetails").isJsonNull()) {
        BusinessDetails.validateJsonObject(jsonObj.getAsJsonObject("businessDetails"));
      }
      if ((jsonObj.get("reportPin") != null && !jsonObj.get("reportPin").isJsonNull()) && !jsonObj.get("reportPin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reportPin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reportPin").toString()));
      }
      // validate the required field `constraints`
      AnalyticsReportConstraintsOut.validateJsonObject(jsonObj.getAsJsonObject("constraints"));
      if (jsonObj.get("institutions") != null && !jsonObj.get("institutions").isJsonNull()) {
        JsonArray jsonArrayinstitutions = jsonObj.getAsJsonArray("institutions");
        if (jsonArrayinstitutions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("institutions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `institutions` to be an array in the JSON string but got `%s`", jsonObj.get("institutions").toString()));
          }

          // validate the optional field `institutions` (array)
          for (int i = 0; i < jsonArrayinstitutions.size(); i++) {
            ReportInstitution.validateJsonObject(jsonArrayinstitutions.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `customerAnalytics`
      if (jsonObj.get("customerAnalytics") != null && !jsonObj.get("customerAnalytics").isJsonNull()) {
        CustomerAnalytics.validateJsonObject(jsonObj.getAsJsonObject("customerAnalytics"));
      }
      if ((jsonObj.get("portfolioId") != null && !jsonObj.get("portfolioId").isJsonNull()) && !jsonObj.get("portfolioId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `portfolioId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("portfolioId").toString()));
      }
      // validate the optional field `cashFlowBalanceSummary`
      if (jsonObj.get("cashFlowBalanceSummary") != null && !jsonObj.get("cashFlowBalanceSummary").isJsonNull()) {
        CashFlowCashFlowBalanceSummary.validateJsonObject(jsonObj.getAsJsonObject("cashFlowBalanceSummary"));
      }
      // validate the optional field `cashFlowCreditSummary`
      if (jsonObj.get("cashFlowCreditSummary") != null && !jsonObj.get("cashFlowCreditSummary").isJsonNull()) {
        CashFlowCashFlowCreditSummary.validateJsonObject(jsonObj.getAsJsonObject("cashFlowCreditSummary"));
      }
      // validate the optional field `cashFlowDebitSummary`
      if (jsonObj.get("cashFlowDebitSummary") != null && !jsonObj.get("cashFlowDebitSummary").isJsonNull()) {
        CashFlowCashFlowDebitSummary.validateJsonObject(jsonObj.getAsJsonObject("cashFlowDebitSummary"));
      }
      // validate the optional field `cashFlowCharacteristicsSummary`
      if (jsonObj.get("cashFlowCharacteristicsSummary") != null && !jsonObj.get("cashFlowCharacteristicsSummary").isJsonNull()) {
        CashFlowCashFlowCharacteristicsSummary.validateJsonObject(jsonObj.getAsJsonObject("cashFlowCharacteristicsSummary"));
      }
      if (jsonObj.get("possibleLoanDeposits") != null && !jsonObj.get("possibleLoanDeposits").isJsonNull()) {
        JsonArray jsonArraypossibleLoanDeposits = jsonObj.getAsJsonArray("possibleLoanDeposits");
        if (jsonArraypossibleLoanDeposits != null) {
          // ensure the json data is an array
          if (!jsonObj.get("possibleLoanDeposits").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `possibleLoanDeposits` to be an array in the JSON string but got `%s`", jsonObj.get("possibleLoanDeposits").toString()));
          }

          // validate the optional field `possibleLoanDeposits` (array)
          for (int i = 0; i < jsonArraypossibleLoanDeposits.size(); i++) {
            CashFlowPossibleLoanDeposits.validateJsonObject(jsonArraypossibleLoanDeposits.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `assets`
      if (jsonObj.get("assets") != null && !jsonObj.get("assets").isJsonNull()) {
        PrequalificationReportAssetSummary.validateJsonObject(jsonObj.getAsJsonObject("assets"));
      }
      if ((jsonObj.get("reportStyle") != null && !jsonObj.get("reportStyle").isJsonNull()) && !jsonObj.get("reportStyle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reportStyle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reportStyle").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("assetIds") != null && !jsonObj.get("assetIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `assetIds` to be an array in the JSON string but got `%s`", jsonObj.get("assetIds").toString()));
      }
      if (jsonObj.get("payStatements") != null && !jsonObj.get("payStatements").isJsonNull()) {
        JsonArray jsonArraypayStatements = jsonObj.getAsJsonArray("payStatements");
        if (jsonArraypayStatements != null) {
          // ensure the json data is an array
          if (!jsonObj.get("payStatements").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `payStatements` to be an array in the JSON string but got `%s`", jsonObj.get("payStatements").toString()));
          }

          // validate the optional field `payStatements` (array)
          for (int i = 0; i < jsonArraypayStatements.size(); i++) {
            VOIEPaystubWithStatementPayStatement.validateJsonObject(jsonArraypayStatements.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("assetId") != null && !jsonObj.get("assetId").isJsonNull()) && !jsonObj.get("assetId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `assetId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("assetId").toString()));
      }
      if (jsonObj.get("employmentHistory") != null && !jsonObj.get("employmentHistory").isJsonNull()) {
        JsonArray jsonArrayemploymentHistory = jsonObj.getAsJsonArray("employmentHistory");
        if (jsonArrayemploymentHistory != null) {
          // ensure the json data is an array
          if (!jsonObj.get("employmentHistory").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `employmentHistory` to be an array in the JSON string but got `%s`", jsonObj.get("employmentHistory").toString()));
          }

          // validate the optional field `employmentHistory` (array)
          for (int i = 0; i < jsonArrayemploymentHistory.size(); i++) {
            PayrollEmploymentHistoryVOIE.validateJsonObject(jsonArrayemploymentHistory.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("income") != null && !jsonObj.get("income").isJsonNull()) {
        JsonArray jsonArrayincome = jsonObj.getAsJsonArray("income");
        if (jsonArrayincome != null) {
          // ensure the json data is an array
          if (!jsonObj.get("income").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `income` to be an array in the JSON string but got `%s`", jsonObj.get("income").toString()));
          }

          // validate the optional field `income` (array)
          for (int i = 0; i < jsonArrayincome.size(); i++) {
            ReportIncomeStreamSummary.validateJsonObject(jsonArrayincome.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Report.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Report' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Report> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Report.class));

       return (TypeAdapter<T>) new TypeAdapter<Report>() {
           @Override
           public void write(JsonWriter out, Report value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public Report read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             Report instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Report given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Report
  * @throws IOException if the JSON string is invalid with respect to Report
  */
  public static Report fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Report.class);
  }

 /**
  * Convert an instance of Report to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

