/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.16.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.PayrollEmployerAddress;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * PayrollEmploymentRecord
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class PayrollEmploymentRecord {
  public static final String SERIALIZED_NAME_EMPLOYER_NAME = "employerName";
  @SerializedName(SERIALIZED_NAME_EMPLOYER_NAME)
  private String employerName;

  public static final String SERIALIZED_NAME_LEGAL_ENTITY_ID = "legalEntityId";
  @SerializedName(SERIALIZED_NAME_LEGAL_ENTITY_ID)
  private String legalEntityId;

  public static final String SERIALIZED_NAME_ORIGINAL_HIRE_DATE = "originalHireDate";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_HIRE_DATE)
  private Long originalHireDate;

  public static final String SERIALIZED_NAME_LATEST_HIRE_DATE = "latestHireDate";
  @SerializedName(SERIALIZED_NAME_LATEST_HIRE_DATE)
  private Long latestHireDate;

  public static final String SERIALIZED_NAME_LATEST_PAY_PERIOD_END_DATE = "latestPayPeriodEndDate";
  @SerializedName(SERIALIZED_NAME_LATEST_PAY_PERIOD_END_DATE)
  private Long latestPayPeriodEndDate;

  public static final String SERIALIZED_NAME_LATEST_PAY_DATE = "latestPayDate";
  @SerializedName(SERIALIZED_NAME_LATEST_PAY_DATE)
  private Long latestPayDate;

  public static final String SERIALIZED_NAME_DAYS_SINCE_LAST_PAY = "daysSinceLastPay";
  @SerializedName(SERIALIZED_NAME_DAYS_SINCE_LAST_PAY)
  private Integer daysSinceLastPay;

  public static final String SERIALIZED_NAME_NUMBER_PAY_CADENCE_WITHOUT_PAY = "numberPayCadenceWithoutPay";
  @SerializedName(SERIALIZED_NAME_NUMBER_PAY_CADENCE_WITHOUT_PAY)
  private Integer numberPayCadenceWithoutPay;

  public static final String SERIALIZED_NAME_EMPLOYMENT_END_DATE = "employmentEndDate";
  @SerializedName(SERIALIZED_NAME_EMPLOYMENT_END_DATE)
  private Long employmentEndDate;

  public static final String SERIALIZED_NAME_EMPLOYMENT_DURATION = "employmentDuration";
  @SerializedName(SERIALIZED_NAME_EMPLOYMENT_DURATION)
  private String employmentDuration;

  public static final String SERIALIZED_NAME_EMPLOYER_ADDRESS = "employerAddress";
  @SerializedName(SERIALIZED_NAME_EMPLOYER_ADDRESS)
  private List<PayrollEmployerAddress> employerAddress = null;

  public static final String SERIALIZED_NAME_EMPLOYMENT_STATUS_CODE = "employmentStatusCode";
  @SerializedName(SERIALIZED_NAME_EMPLOYMENT_STATUS_CODE)
  private String employmentStatusCode;

  public static final String SERIALIZED_NAME_EMPLOYMENT_STATUS_NAME = "employmentStatusName";
  @SerializedName(SERIALIZED_NAME_EMPLOYMENT_STATUS_NAME)
  private String employmentStatusName;

  public static final String SERIALIZED_NAME_DERIVED_EMPLOYMENT_STATUS = "derivedEmploymentStatus";
  @SerializedName(SERIALIZED_NAME_DERIVED_EMPLOYMENT_STATUS)
  private Boolean derivedEmploymentStatus;

  public static final String SERIALIZED_NAME_WORK_LEVEL_CODE = "workLevelCode";
  @SerializedName(SERIALIZED_NAME_WORK_LEVEL_CODE)
  private String workLevelCode;

  public static final String SERIALIZED_NAME_WORK_LEVEL_NAME = "workLevelName";
  @SerializedName(SERIALIZED_NAME_WORK_LEVEL_NAME)
  private String workLevelName;

  public static final String SERIALIZED_NAME_WORK_LEVEL_STATUS = "workLevelStatus";
  @SerializedName(SERIALIZED_NAME_WORK_LEVEL_STATUS)
  private String workLevelStatus;

  public static final String SERIALIZED_NAME_POSITION_TITLE = "positionTitle";
  @SerializedName(SERIALIZED_NAME_POSITION_TITLE)
  private String positionTitle;

  public static final String SERIALIZED_NAME_POSITION_DURATION = "positionDuration";
  @SerializedName(SERIALIZED_NAME_POSITION_DURATION)
  private String positionDuration;

  public PayrollEmploymentRecord() {
  }

  public PayrollEmploymentRecord employerName(String employerName) {
    
    
    
    
    this.employerName = employerName;
    return this;
  }

   /**
   * Name of the employer as stated by the employer in the payroll system
   * @return employerName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "ACME INC", required = true, value = "Name of the employer as stated by the employer in the payroll system")

  public String getEmployerName() {
    return employerName;
  }


  public void setEmployerName(String employerName) {
    
    
    
    this.employerName = employerName;
  }


  public PayrollEmploymentRecord legalEntityId(String legalEntityId) {
    
    
    
    
    this.legalEntityId = legalEntityId;
    return this;
  }

   /**
   * Employer identification number (EIN)
   * @return legalEntityId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "752760000", value = "Employer identification number (EIN)")

  public String getLegalEntityId() {
    return legalEntityId;
  }


  public void setLegalEntityId(String legalEntityId) {
    
    
    
    this.legalEntityId = legalEntityId;
  }


  public PayrollEmploymentRecord originalHireDate(Long originalHireDate) {
    
    
    
    
    this.originalHireDate = originalHireDate;
    return this;
  }

   /**
   * The original hired date of an employee at the company
   * @return originalHireDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1527832800", value = "The original hired date of an employee at the company")

  public Long getOriginalHireDate() {
    return originalHireDate;
  }


  public void setOriginalHireDate(Long originalHireDate) {
    
    
    
    this.originalHireDate = originalHireDate;
  }


  public PayrollEmploymentRecord latestHireDate(Long latestHireDate) {
    
    
    
    
    this.latestHireDate = latestHireDate;
    return this;
  }

   /**
   * If an employee leaves the company and returns later, then the employer states the latest hire date at the company
   * @return latestHireDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1527832800", value = "If an employee leaves the company and returns later, then the employer states the latest hire date at the company")

  public Long getLatestHireDate() {
    return latestHireDate;
  }


  public void setLatestHireDate(Long latestHireDate) {
    
    
    
    this.latestHireDate = latestHireDate;
  }


  public PayrollEmploymentRecord latestPayPeriodEndDate(Long latestPayPeriodEndDate) {
    
    
    
    
    this.latestPayPeriodEndDate = latestPayPeriodEndDate;
    return this;
  }

   /**
   * The most recent pay period’s end date.
   * @return latestPayPeriodEndDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1596175201", value = "The most recent pay period’s end date.")

  public Long getLatestPayPeriodEndDate() {
    return latestPayPeriodEndDate;
  }


  public void setLatestPayPeriodEndDate(Long latestPayPeriodEndDate) {
    
    
    
    this.latestPayPeriodEndDate = latestPayPeriodEndDate;
  }


  public PayrollEmploymentRecord latestPayDate(Long latestPayDate) {
    
    
    
    
    this.latestPayDate = latestPayDate;
    return this;
  }

   /**
   * The most recent pay date from an employer
   * @return latestPayDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1596175200", value = "The most recent pay date from an employer")

  public Long getLatestPayDate() {
    return latestPayDate;
  }


  public void setLatestPayDate(Long latestPayDate) {
    
    
    
    this.latestPayDate = latestPayDate;
  }


  public PayrollEmploymentRecord daysSinceLastPay(Integer daysSinceLastPay) {
    
    
    
    
    this.daysSinceLastPay = daysSinceLastPay;
    return this;
  }

   /**
   * The number of days since an employee was last paid
   * @return daysSinceLastPay
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "10", value = "The number of days since an employee was last paid")

  public Integer getDaysSinceLastPay() {
    return daysSinceLastPay;
  }


  public void setDaysSinceLastPay(Integer daysSinceLastPay) {
    
    
    
    this.daysSinceLastPay = daysSinceLastPay;
  }


  public PayrollEmploymentRecord numberPayCadenceWithoutPay(Integer numberPayCadenceWithoutPay) {
    
    
    
    
    this.numberPayCadenceWithoutPay = numberPayCadenceWithoutPay;
    return this;
  }

   /**
   * The number of pay cadences an employee has not been paid; determined by the pay frequency
   * @return numberPayCadenceWithoutPay
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "The number of pay cadences an employee has not been paid; determined by the pay frequency")

  public Integer getNumberPayCadenceWithoutPay() {
    return numberPayCadenceWithoutPay;
  }


  public void setNumberPayCadenceWithoutPay(Integer numberPayCadenceWithoutPay) {
    
    
    
    this.numberPayCadenceWithoutPay = numberPayCadenceWithoutPay;
  }


  public PayrollEmploymentRecord employmentEndDate(Long employmentEndDate) {
    
    
    
    
    this.employmentEndDate = employmentEndDate;
    return this;
  }

   /**
   * The date an employee ended their employment at the company
   * @return employmentEndDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1527832800", value = "The date an employee ended their employment at the company")

  public Long getEmploymentEndDate() {
    return employmentEndDate;
  }


  public void setEmploymentEndDate(Long employmentEndDate) {
    
    
    
    this.employmentEndDate = employmentEndDate;
  }


  public PayrollEmploymentRecord employmentDuration(String employmentDuration) {
    
    
    
    
    this.employmentDuration = employmentDuration;
    return this;
  }

   /**
   * The length of time an employee has been employed with that employer in ISO 8601 format (e.g. P1Y6M0D)
   * @return employmentDuration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "P1Y6M0D", value = "The length of time an employee has been employed with that employer in ISO 8601 format (e.g. P1Y6M0D)")

  public String getEmploymentDuration() {
    return employmentDuration;
  }


  public void setEmploymentDuration(String employmentDuration) {
    
    
    
    this.employmentDuration = employmentDuration;
  }


  public PayrollEmploymentRecord employerAddress(List<PayrollEmployerAddress> employerAddress) {
    
    
    
    
    this.employerAddress = employerAddress;
    return this;
  }

  public PayrollEmploymentRecord addEmployerAddressItem(PayrollEmployerAddress employerAddressItem) {
    if (this.employerAddress == null) {
      this.employerAddress = new ArrayList<>();
    }
    this.employerAddress.add(employerAddressItem);
    return this;
  }

   /**
   * Array of addresses
   * @return employerAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Array of addresses")

  public List<PayrollEmployerAddress> getEmployerAddress() {
    return employerAddress;
  }


  public void setEmployerAddress(List<PayrollEmployerAddress> employerAddress) {
    
    
    
    this.employerAddress = employerAddress;
  }


  public PayrollEmploymentRecord employmentStatusCode(String employmentStatusCode) {
    
    
    
    
    this.employmentStatusCode = employmentStatusCode;
    return this;
  }

   /**
   * &#39;Status codes: &#x60;A&#x60; - Active, &#x60;NLE&#x60; - No Longer Employed, &#x60;L&#x60; - Leave, &#x60;O&#x60; - Other&#39;, &#x60;I&#x60; - Inactive, &#x60;U&#x60; - Unknown&#39;
   * @return employmentStatusCode
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "A", required = true, value = "'Status codes: `A` - Active, `NLE` - No Longer Employed, `L` - Leave, `O` - Other', `I` - Inactive, `U` - Unknown'")

  public String getEmploymentStatusCode() {
    return employmentStatusCode;
  }


  public void setEmploymentStatusCode(String employmentStatusCode) {
    
    
    
    this.employmentStatusCode = employmentStatusCode;
  }


  public PayrollEmploymentRecord employmentStatusName(String employmentStatusName) {
    
    
    
    
    this.employmentStatusName = employmentStatusName;
    return this;
  }

   /**
   * &#39;Status name: &#x60;Active&#x60;, &#x60;No Longer Employed&#x60;, &#x60;Leave&#x60; or &#x60;Other&#x60;, &#x60;Inactive&#x60;, or &#x60;Unknown&#x60;&#39;
   * @return employmentStatusName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "Active", required = true, value = "'Status name: `Active`, `No Longer Employed`, `Leave` or `Other`, `Inactive`, or `Unknown`'")

  public String getEmploymentStatusName() {
    return employmentStatusName;
  }


  public void setEmploymentStatusName(String employmentStatusName) {
    
    
    
    this.employmentStatusName = employmentStatusName;
  }


  public PayrollEmploymentRecord derivedEmploymentStatus(Boolean derivedEmploymentStatus) {
    
    
    
    
    this.derivedEmploymentStatus = derivedEmploymentStatus;
    return this;
  }

   /**
   * Describes the employment status - it will be true if it is not directly stated by the employer, and false otherwise
   * @return derivedEmploymentStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Describes the employment status - it will be true if it is not directly stated by the employer, and false otherwise")

  public Boolean getDerivedEmploymentStatus() {
    return derivedEmploymentStatus;
  }


  public void setDerivedEmploymentStatus(Boolean derivedEmploymentStatus) {
    
    
    
    this.derivedEmploymentStatus = derivedEmploymentStatus;
  }


  public PayrollEmploymentRecord workLevelCode(String workLevelCode) {
    
    
    
    
    this.workLevelCode = workLevelCode;
    return this;
  }

   /**
   * The abbreviate code for the employment level names (workLevelName) that we receive from the employer
   * @return workLevelCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "FT", value = "The abbreviate code for the employment level names (workLevelName) that we receive from the employer")

  public String getWorkLevelCode() {
    return workLevelCode;
  }


  public void setWorkLevelCode(String workLevelCode) {
    
    
    
    this.workLevelCode = workLevelCode;
  }


  public PayrollEmploymentRecord workLevelName(String workLevelName) {
    
    
    
    
    this.workLevelName = workLevelName;
    return this;
  }

   /**
   * The employment level name is whatever we receive from the employer, such as full time, part time, temp, contractor, and more
   * @return workLevelName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Full Time-Regular", value = "The employment level name is whatever we receive from the employer, such as full time, part time, temp, contractor, and more")

  public String getWorkLevelName() {
    return workLevelName;
  }


  public void setWorkLevelName(String workLevelName) {
    
    
    
    this.workLevelName = workLevelName;
  }


  public PayrollEmploymentRecord workLevelStatus(String workLevelStatus) {
    
    
    
    
    this.workLevelStatus = workLevelStatus;
    return this;
  }

   /**
   * The categorized work level status. Enumerations are:  * &#x60;Temporary&#x60;  * &#x60;Seasonal&#x60;  * &#x60;Retired&#x60;  * &#x60;Student&#x60;  * &#x60;Full Time&#x60;  * &#x60;Part Time&#x60;  * &#x60;Unspecified&#x60;  This is a new field, currently enabled only for testing reports. It will be added for all reports in August 2021. 
   * @return workLevelStatus
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "Full Time", required = true, value = "The categorized work level status. Enumerations are:  * `Temporary`  * `Seasonal`  * `Retired`  * `Student`  * `Full Time`  * `Part Time`  * `Unspecified`  This is a new field, currently enabled only for testing reports. It will be added for all reports in August 2021. ")

  public String getWorkLevelStatus() {
    return workLevelStatus;
  }


  public void setWorkLevelStatus(String workLevelStatus) {
    
    
    
    this.workLevelStatus = workLevelStatus;
  }


  public PayrollEmploymentRecord positionTitle(String positionTitle) {
    
    
    
    
    this.positionTitle = positionTitle;
    return this;
  }

   /**
   * Employee job title
   * @return positionTitle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Shift Supervisor", value = "Employee job title")

  public String getPositionTitle() {
    return positionTitle;
  }


  public void setPositionTitle(String positionTitle) {
    
    
    
    this.positionTitle = positionTitle;
  }


  public PayrollEmploymentRecord positionDuration(String positionDuration) {
    
    
    
    
    this.positionDuration = positionDuration;
    return this;
  }

   /**
   * The length of time an employee has been employed at their current or latest position for this employment in ISO 8601 format (eg P1Y6M0D)
   * @return positionDuration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "P1Y6M0D", value = "The length of time an employee has been employed at their current or latest position for this employment in ISO 8601 format (eg P1Y6M0D)")

  public String getPositionDuration() {
    return positionDuration;
  }


  public void setPositionDuration(String positionDuration) {
    
    
    
    this.positionDuration = positionDuration;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the PayrollEmploymentRecord instance itself
   */
  public PayrollEmploymentRecord putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PayrollEmploymentRecord payrollEmploymentRecord = (PayrollEmploymentRecord) o;
    return Objects.equals(this.employerName, payrollEmploymentRecord.employerName) &&
        Objects.equals(this.legalEntityId, payrollEmploymentRecord.legalEntityId) &&
        Objects.equals(this.originalHireDate, payrollEmploymentRecord.originalHireDate) &&
        Objects.equals(this.latestHireDate, payrollEmploymentRecord.latestHireDate) &&
        Objects.equals(this.latestPayPeriodEndDate, payrollEmploymentRecord.latestPayPeriodEndDate) &&
        Objects.equals(this.latestPayDate, payrollEmploymentRecord.latestPayDate) &&
        Objects.equals(this.daysSinceLastPay, payrollEmploymentRecord.daysSinceLastPay) &&
        Objects.equals(this.numberPayCadenceWithoutPay, payrollEmploymentRecord.numberPayCadenceWithoutPay) &&
        Objects.equals(this.employmentEndDate, payrollEmploymentRecord.employmentEndDate) &&
        Objects.equals(this.employmentDuration, payrollEmploymentRecord.employmentDuration) &&
        Objects.equals(this.employerAddress, payrollEmploymentRecord.employerAddress) &&
        Objects.equals(this.employmentStatusCode, payrollEmploymentRecord.employmentStatusCode) &&
        Objects.equals(this.employmentStatusName, payrollEmploymentRecord.employmentStatusName) &&
        Objects.equals(this.derivedEmploymentStatus, payrollEmploymentRecord.derivedEmploymentStatus) &&
        Objects.equals(this.workLevelCode, payrollEmploymentRecord.workLevelCode) &&
        Objects.equals(this.workLevelName, payrollEmploymentRecord.workLevelName) &&
        Objects.equals(this.workLevelStatus, payrollEmploymentRecord.workLevelStatus) &&
        Objects.equals(this.positionTitle, payrollEmploymentRecord.positionTitle) &&
        Objects.equals(this.positionDuration, payrollEmploymentRecord.positionDuration)&&
        Objects.equals(this.additionalProperties, payrollEmploymentRecord.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(employerName, legalEntityId, originalHireDate, latestHireDate, latestPayPeriodEndDate, latestPayDate, daysSinceLastPay, numberPayCadenceWithoutPay, employmentEndDate, employmentDuration, employerAddress, employmentStatusCode, employmentStatusName, derivedEmploymentStatus, workLevelCode, workLevelName, workLevelStatus, positionTitle, positionDuration, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PayrollEmploymentRecord {\n");
    sb.append("    employerName: ").append(toIndentedString(employerName)).append("\n");
    sb.append("    legalEntityId: ").append(toIndentedString(legalEntityId)).append("\n");
    sb.append("    originalHireDate: ").append(toIndentedString(originalHireDate)).append("\n");
    sb.append("    latestHireDate: ").append(toIndentedString(latestHireDate)).append("\n");
    sb.append("    latestPayPeriodEndDate: ").append(toIndentedString(latestPayPeriodEndDate)).append("\n");
    sb.append("    latestPayDate: ").append(toIndentedString(latestPayDate)).append("\n");
    sb.append("    daysSinceLastPay: ").append(toIndentedString(daysSinceLastPay)).append("\n");
    sb.append("    numberPayCadenceWithoutPay: ").append(toIndentedString(numberPayCadenceWithoutPay)).append("\n");
    sb.append("    employmentEndDate: ").append(toIndentedString(employmentEndDate)).append("\n");
    sb.append("    employmentDuration: ").append(toIndentedString(employmentDuration)).append("\n");
    sb.append("    employerAddress: ").append(toIndentedString(employerAddress)).append("\n");
    sb.append("    employmentStatusCode: ").append(toIndentedString(employmentStatusCode)).append("\n");
    sb.append("    employmentStatusName: ").append(toIndentedString(employmentStatusName)).append("\n");
    sb.append("    derivedEmploymentStatus: ").append(toIndentedString(derivedEmploymentStatus)).append("\n");
    sb.append("    workLevelCode: ").append(toIndentedString(workLevelCode)).append("\n");
    sb.append("    workLevelName: ").append(toIndentedString(workLevelName)).append("\n");
    sb.append("    workLevelStatus: ").append(toIndentedString(workLevelStatus)).append("\n");
    sb.append("    positionTitle: ").append(toIndentedString(positionTitle)).append("\n");
    sb.append("    positionDuration: ").append(toIndentedString(positionDuration)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("employerName");
    openapiFields.add("legalEntityId");
    openapiFields.add("originalHireDate");
    openapiFields.add("latestHireDate");
    openapiFields.add("latestPayPeriodEndDate");
    openapiFields.add("latestPayDate");
    openapiFields.add("daysSinceLastPay");
    openapiFields.add("numberPayCadenceWithoutPay");
    openapiFields.add("employmentEndDate");
    openapiFields.add("employmentDuration");
    openapiFields.add("employerAddress");
    openapiFields.add("employmentStatusCode");
    openapiFields.add("employmentStatusName");
    openapiFields.add("derivedEmploymentStatus");
    openapiFields.add("workLevelCode");
    openapiFields.add("workLevelName");
    openapiFields.add("workLevelStatus");
    openapiFields.add("positionTitle");
    openapiFields.add("positionDuration");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("employerName");
    openapiRequiredFields.add("employmentStatusCode");
    openapiRequiredFields.add("employmentStatusName");
    openapiRequiredFields.add("workLevelStatus");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to PayrollEmploymentRecord
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!PayrollEmploymentRecord.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PayrollEmploymentRecord is not found in the empty JSON string", PayrollEmploymentRecord.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : PayrollEmploymentRecord.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("employerName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employerName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employerName").toString()));
      }
      if ((jsonObj.get("legalEntityId") != null && !jsonObj.get("legalEntityId").isJsonNull()) && !jsonObj.get("legalEntityId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `legalEntityId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("legalEntityId").toString()));
      }
      if ((jsonObj.get("employmentDuration") != null && !jsonObj.get("employmentDuration").isJsonNull()) && !jsonObj.get("employmentDuration").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employmentDuration` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employmentDuration").toString()));
      }
      if (jsonObj.get("employerAddress") != null && !jsonObj.get("employerAddress").isJsonNull()) {
        JsonArray jsonArrayemployerAddress = jsonObj.getAsJsonArray("employerAddress");
        if (jsonArrayemployerAddress != null) {
          // ensure the json data is an array
          if (!jsonObj.get("employerAddress").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `employerAddress` to be an array in the JSON string but got `%s`", jsonObj.get("employerAddress").toString()));
          }

          // validate the optional field `employerAddress` (array)
          for (int i = 0; i < jsonArrayemployerAddress.size(); i++) {
            PayrollEmployerAddress.validateJsonObject(jsonArrayemployerAddress.get(i).getAsJsonObject());
          };
        }
      }
      if (!jsonObj.get("employmentStatusCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employmentStatusCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employmentStatusCode").toString()));
      }
      if (!jsonObj.get("employmentStatusName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employmentStatusName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employmentStatusName").toString()));
      }
      if ((jsonObj.get("workLevelCode") != null && !jsonObj.get("workLevelCode").isJsonNull()) && !jsonObj.get("workLevelCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workLevelCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workLevelCode").toString()));
      }
      if ((jsonObj.get("workLevelName") != null && !jsonObj.get("workLevelName").isJsonNull()) && !jsonObj.get("workLevelName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workLevelName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workLevelName").toString()));
      }
      if (!jsonObj.get("workLevelStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workLevelStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workLevelStatus").toString()));
      }
      if ((jsonObj.get("positionTitle") != null && !jsonObj.get("positionTitle").isJsonNull()) && !jsonObj.get("positionTitle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `positionTitle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("positionTitle").toString()));
      }
      if ((jsonObj.get("positionDuration") != null && !jsonObj.get("positionDuration").isJsonNull()) && !jsonObj.get("positionDuration").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `positionDuration` to be a primitive type in the JSON string but got `%s`", jsonObj.get("positionDuration").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PayrollEmploymentRecord.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PayrollEmploymentRecord' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PayrollEmploymentRecord> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PayrollEmploymentRecord.class));

       return (TypeAdapter<T>) new TypeAdapter<PayrollEmploymentRecord>() {
           @Override
           public void write(JsonWriter out, PayrollEmploymentRecord value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public PayrollEmploymentRecord read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             PayrollEmploymentRecord instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PayrollEmploymentRecord given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PayrollEmploymentRecord
  * @throws IOException if the JSON string is invalid with respect to PayrollEmploymentRecord
  */
  public static PayrollEmploymentRecord fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PayrollEmploymentRecord.class);
  }

 /**
  * Convert an instance of PayrollEmploymentRecord to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

