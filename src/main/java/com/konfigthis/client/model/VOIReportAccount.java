/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.16.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.ReportTransaction;
import com.konfigthis.client.model.VOIReportIncomeStream;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * VOIReportAccount
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class VOIReportAccount {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Long id;

  public static final String SERIALIZED_NAME_NUMBER = "number";
  @SerializedName(SERIALIZED_NAME_NUMBER)
  private String number;

  public static final String SERIALIZED_NAME_OWNER_NAME = "ownerName";
  @SerializedName(SERIALIZED_NAME_OWNER_NAME)
  private String ownerName;

  public static final String SERIALIZED_NAME_OWNER_ADDRESS = "ownerAddress";
  @SerializedName(SERIALIZED_NAME_OWNER_ADDRESS)
  private String ownerAddress;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_AGGREGATION_STATUS_CODE = "aggregationStatusCode";
  @SerializedName(SERIALIZED_NAME_AGGREGATION_STATUS_CODE)
  private Integer aggregationStatusCode;

  public static final String SERIALIZED_NAME_INCOME_STREAMS = "incomeStreams";
  @SerializedName(SERIALIZED_NAME_INCOME_STREAMS)
  private List<VOIReportIncomeStream> incomeStreams = null;

  public static final String SERIALIZED_NAME_BALANCE = "balance";
  @SerializedName(SERIALIZED_NAME_BALANCE)
  private Double balance;

  public static final String SERIALIZED_NAME_AVERAGE_MONTHLY_BALANCE = "averageMonthlyBalance";
  @SerializedName(SERIALIZED_NAME_AVERAGE_MONTHLY_BALANCE)
  private Double averageMonthlyBalance;

  public static final String SERIALIZED_NAME_TRANSACTIONS = "transactions";
  @SerializedName(SERIALIZED_NAME_TRANSACTIONS)
  private List<ReportTransaction> transactions = null;

  public static final String SERIALIZED_NAME_AVAILABLE_BALANCE = "availableBalance";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_BALANCE)
  private Double availableBalance;

  public static final String SERIALIZED_NAME_CURRENT_BALANCE = "currentBalance";
  @SerializedName(SERIALIZED_NAME_CURRENT_BALANCE)
  private Double currentBalance;

  public static final String SERIALIZED_NAME_BEGINNING_BALANCE = "beginningBalance";
  @SerializedName(SERIALIZED_NAME_BEGINNING_BALANCE)
  private Double beginningBalance;

  public static final String SERIALIZED_NAME_MISC_DEPOSITS = "miscDeposits";
  @SerializedName(SERIALIZED_NAME_MISC_DEPOSITS)
  private List<ReportTransaction> miscDeposits = null;

  public VOIReportAccount() {
  }

  public VOIReportAccount id(Long id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * The ID of the account
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1000023996", value = "The ID of the account")

  public Long getId() {
    return id;
  }


  public void setId(Long id) {
    
    
    
    this.id = id;
  }


  public VOIReportAccount number(String number) {
    
    
    
    
    this.number = number;
    return this;
  }

   /**
   * The account number from the institution (all digits except the last four are obfuscated)
   * @return number
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1111", value = "The account number from the institution (all digits except the last four are obfuscated)")

  public String getNumber() {
    return number;
  }


  public void setNumber(String number) {
    
    
    
    this.number = number;
  }


  public VOIReportAccount ownerName(String ownerName) {
    
    
    
    
    this.ownerName = ownerName;
    return this;
  }

   /**
   * The name(s) of the account owner(s). This field is optional. If no owner information is available, this field will not appear in the report.
   * @return ownerName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "JOHN DOE", value = "The name(s) of the account owner(s). This field is optional. If no owner information is available, this field will not appear in the report.")

  public String getOwnerName() {
    return ownerName;
  }


  public void setOwnerName(String ownerName) {
    
    
    
    this.ownerName = ownerName;
  }


  public VOIReportAccount ownerAddress(String ownerAddress) {
    
    
    
    
    this.ownerAddress = ownerAddress;
    return this;
  }

   /**
   * The mailing address of the account owner(s). This field is optional. If no owner information is available, this field will not appear in the report.
   * @return ownerAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "924 GAINSVILLE HIGHWAY SUITE 130 BUFORD, GA 30518", value = "The mailing address of the account owner(s). This field is optional. If no owner information is available, this field will not appear in the report.")

  public String getOwnerAddress() {
    return ownerAddress;
  }


  public void setOwnerAddress(String ownerAddress) {
    
    
    
    this.ownerAddress = ownerAddress;
  }


  public VOIReportAccount name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * The account name from the institution
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Checking", value = "The account name from the institution")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public VOIReportAccount type(String type) {
    
    
    
    
    this.type = type;
    return this;
  }

   /**
   * One of the values from account types
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "checking", value = "One of the values from account types")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    
    
    
    this.type = type;
  }


  public VOIReportAccount aggregationStatusCode(Integer aggregationStatusCode) {
    
    
    
    
    this.aggregationStatusCode = aggregationStatusCode;
    return this;
  }

   /**
   * The status of the most recent aggregation attempt
   * @return aggregationStatusCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "The status of the most recent aggregation attempt")

  public Integer getAggregationStatusCode() {
    return aggregationStatusCode;
  }


  public void setAggregationStatusCode(Integer aggregationStatusCode) {
    
    
    
    this.aggregationStatusCode = aggregationStatusCode;
  }


  public VOIReportAccount incomeStreams(List<VOIReportIncomeStream> incomeStreams) {
    
    
    
    
    this.incomeStreams = incomeStreams;
    return this;
  }

  public VOIReportAccount addIncomeStreamsItem(VOIReportIncomeStream incomeStreamsItem) {
    if (this.incomeStreams == null) {
      this.incomeStreams = new ArrayList<>();
    }
    this.incomeStreams.add(incomeStreamsItem);
    return this;
  }

   /**
   * A list of income stream records
   * @return incomeStreams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of income stream records")

  public List<VOIReportIncomeStream> getIncomeStreams() {
    return incomeStreams;
  }


  public void setIncomeStreams(List<VOIReportIncomeStream> incomeStreams) {
    
    
    
    this.incomeStreams = incomeStreams;
  }


  public VOIReportAccount balance(Double balance) {
    
    
    
    
    this.balance = balance;
    return this;
  }

  public VOIReportAccount balance(Integer balance) {
    
    
    
    
    this.balance = balance.doubleValue();
    return this;
  }

   /**
   * The cleared balance of the account as-of &#x60;balanceDate&#x60;
   * @return balance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "714.16", value = "The cleared balance of the account as-of `balanceDate`")

  public Double getBalance() {
    return balance;
  }


  public void setBalance(Double balance) {
    
    
    
    this.balance = balance;
  }


  public VOIReportAccount averageMonthlyBalance(Double averageMonthlyBalance) {
    
    
    
    
    this.averageMonthlyBalance = averageMonthlyBalance;
    return this;
  }

  public VOIReportAccount averageMonthlyBalance(Integer averageMonthlyBalance) {
    
    
    
    
    this.averageMonthlyBalance = averageMonthlyBalance.doubleValue();
    return this;
  }

   /**
   * The average monthly balance of this account
   * @return averageMonthlyBalance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "720.75", value = "The average monthly balance of this account")

  public Double getAverageMonthlyBalance() {
    return averageMonthlyBalance;
  }


  public void setAverageMonthlyBalance(Double averageMonthlyBalance) {
    
    
    
    this.averageMonthlyBalance = averageMonthlyBalance;
  }


  public VOIReportAccount transactions(List<ReportTransaction> transactions) {
    
    
    
    
    this.transactions = transactions;
    return this;
  }

  public VOIReportAccount addTransactionsItem(ReportTransaction transactionsItem) {
    if (this.transactions == null) {
      this.transactions = new ArrayList<>();
    }
    this.transactions.add(transactionsItem);
    return this;
  }

   /**
   * a list of transaction records
   * @return transactions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "a list of transaction records")

  public List<ReportTransaction> getTransactions() {
    return transactions;
  }


  public void setTransactions(List<ReportTransaction> transactions) {
    
    
    
    this.transactions = transactions;
  }


  public VOIReportAccount availableBalance(Double availableBalance) {
    
    
    
    
    this.availableBalance = availableBalance;
    return this;
  }

  public VOIReportAccount availableBalance(Integer availableBalance) {
    
    
    
    
    this.availableBalance = availableBalance.doubleValue();
    return this;
  }

   /**
   * The available balance for the account
   * @return availableBalance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "714.16", value = "The available balance for the account")

  public Double getAvailableBalance() {
    return availableBalance;
  }


  public void setAvailableBalance(Double availableBalance) {
    
    
    
    this.availableBalance = availableBalance;
  }


  public VOIReportAccount currentBalance(Double currentBalance) {
    
    
    
    
    this.currentBalance = currentBalance;
    return this;
  }

  public VOIReportAccount currentBalance(Integer currentBalance) {
    
    
    
    
    this.currentBalance = currentBalance.doubleValue();
    return this;
  }

   /**
   * Current balance of the account
   * @return currentBalance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "714.16", value = "Current balance of the account")

  public Double getCurrentBalance() {
    return currentBalance;
  }


  public void setCurrentBalance(Double currentBalance) {
    
    
    
    this.currentBalance = currentBalance;
  }


  public VOIReportAccount beginningBalance(Double beginningBalance) {
    
    
    
    
    this.beginningBalance = beginningBalance;
    return this;
  }

  public VOIReportAccount beginningBalance(Integer beginningBalance) {
    
    
    
    
    this.beginningBalance = beginningBalance.doubleValue();
    return this;
  }

   /**
   * Beginning balance of account per the time period in the report
   * @return beginningBalance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "714.77", value = "Beginning balance of account per the time period in the report")

  public Double getBeginningBalance() {
    return beginningBalance;
  }


  public void setBeginningBalance(Double beginningBalance) {
    
    
    
    this.beginningBalance = beginningBalance;
  }


  public VOIReportAccount miscDeposits(List<ReportTransaction> miscDeposits) {
    
    
    
    
    this.miscDeposits = miscDeposits;
    return this;
  }

  public VOIReportAccount addMiscDepositsItem(ReportTransaction miscDepositsItem) {
    if (this.miscDeposits == null) {
      this.miscDeposits = new ArrayList<>();
    }
    this.miscDeposits.add(miscDepositsItem);
    return this;
  }

   /**
   * A list of miscellaneous deposits
   * @return miscDeposits
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of miscellaneous deposits")

  public List<ReportTransaction> getMiscDeposits() {
    return miscDeposits;
  }


  public void setMiscDeposits(List<ReportTransaction> miscDeposits) {
    
    
    
    this.miscDeposits = miscDeposits;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the VOIReportAccount instance itself
   */
  public VOIReportAccount putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VOIReportAccount voIReportAccount = (VOIReportAccount) o;
    return Objects.equals(this.id, voIReportAccount.id) &&
        Objects.equals(this.number, voIReportAccount.number) &&
        Objects.equals(this.ownerName, voIReportAccount.ownerName) &&
        Objects.equals(this.ownerAddress, voIReportAccount.ownerAddress) &&
        Objects.equals(this.name, voIReportAccount.name) &&
        Objects.equals(this.type, voIReportAccount.type) &&
        Objects.equals(this.aggregationStatusCode, voIReportAccount.aggregationStatusCode) &&
        Objects.equals(this.incomeStreams, voIReportAccount.incomeStreams) &&
        Objects.equals(this.balance, voIReportAccount.balance) &&
        Objects.equals(this.averageMonthlyBalance, voIReportAccount.averageMonthlyBalance) &&
        Objects.equals(this.transactions, voIReportAccount.transactions) &&
        Objects.equals(this.availableBalance, voIReportAccount.availableBalance) &&
        Objects.equals(this.currentBalance, voIReportAccount.currentBalance) &&
        Objects.equals(this.beginningBalance, voIReportAccount.beginningBalance) &&
        Objects.equals(this.miscDeposits, voIReportAccount.miscDeposits)&&
        Objects.equals(this.additionalProperties, voIReportAccount.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, number, ownerName, ownerAddress, name, type, aggregationStatusCode, incomeStreams, balance, averageMonthlyBalance, transactions, availableBalance, currentBalance, beginningBalance, miscDeposits, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VOIReportAccount {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    ownerName: ").append(toIndentedString(ownerName)).append("\n");
    sb.append("    ownerAddress: ").append(toIndentedString(ownerAddress)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    aggregationStatusCode: ").append(toIndentedString(aggregationStatusCode)).append("\n");
    sb.append("    incomeStreams: ").append(toIndentedString(incomeStreams)).append("\n");
    sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
    sb.append("    averageMonthlyBalance: ").append(toIndentedString(averageMonthlyBalance)).append("\n");
    sb.append("    transactions: ").append(toIndentedString(transactions)).append("\n");
    sb.append("    availableBalance: ").append(toIndentedString(availableBalance)).append("\n");
    sb.append("    currentBalance: ").append(toIndentedString(currentBalance)).append("\n");
    sb.append("    beginningBalance: ").append(toIndentedString(beginningBalance)).append("\n");
    sb.append("    miscDeposits: ").append(toIndentedString(miscDeposits)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("number");
    openapiFields.add("ownerName");
    openapiFields.add("ownerAddress");
    openapiFields.add("name");
    openapiFields.add("type");
    openapiFields.add("aggregationStatusCode");
    openapiFields.add("incomeStreams");
    openapiFields.add("balance");
    openapiFields.add("averageMonthlyBalance");
    openapiFields.add("transactions");
    openapiFields.add("availableBalance");
    openapiFields.add("currentBalance");
    openapiFields.add("beginningBalance");
    openapiFields.add("miscDeposits");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to VOIReportAccount
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!VOIReportAccount.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in VOIReportAccount is not found in the empty JSON string", VOIReportAccount.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("number") != null && !jsonObj.get("number").isJsonNull()) && !jsonObj.get("number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("number").toString()));
      }
      if ((jsonObj.get("ownerName") != null && !jsonObj.get("ownerName").isJsonNull()) && !jsonObj.get("ownerName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ownerName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ownerName").toString()));
      }
      if ((jsonObj.get("ownerAddress") != null && !jsonObj.get("ownerAddress").isJsonNull()) && !jsonObj.get("ownerAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ownerAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ownerAddress").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      if (jsonObj.get("incomeStreams") != null && !jsonObj.get("incomeStreams").isJsonNull()) {
        JsonArray jsonArrayincomeStreams = jsonObj.getAsJsonArray("incomeStreams");
        if (jsonArrayincomeStreams != null) {
          // ensure the json data is an array
          if (!jsonObj.get("incomeStreams").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `incomeStreams` to be an array in the JSON string but got `%s`", jsonObj.get("incomeStreams").toString()));
          }

          // validate the optional field `incomeStreams` (array)
          for (int i = 0; i < jsonArrayincomeStreams.size(); i++) {
            VOIReportIncomeStream.validateJsonObject(jsonArrayincomeStreams.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("transactions") != null && !jsonObj.get("transactions").isJsonNull()) {
        JsonArray jsonArraytransactions = jsonObj.getAsJsonArray("transactions");
        if (jsonArraytransactions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("transactions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `transactions` to be an array in the JSON string but got `%s`", jsonObj.get("transactions").toString()));
          }

          // validate the optional field `transactions` (array)
          for (int i = 0; i < jsonArraytransactions.size(); i++) {
            ReportTransaction.validateJsonObject(jsonArraytransactions.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("miscDeposits") != null && !jsonObj.get("miscDeposits").isJsonNull()) {
        JsonArray jsonArraymiscDeposits = jsonObj.getAsJsonArray("miscDeposits");
        if (jsonArraymiscDeposits != null) {
          // ensure the json data is an array
          if (!jsonObj.get("miscDeposits").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `miscDeposits` to be an array in the JSON string but got `%s`", jsonObj.get("miscDeposits").toString()));
          }

          // validate the optional field `miscDeposits` (array)
          for (int i = 0; i < jsonArraymiscDeposits.size(); i++) {
            ReportTransaction.validateJsonObject(jsonArraymiscDeposits.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!VOIReportAccount.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'VOIReportAccount' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<VOIReportAccount> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(VOIReportAccount.class));

       return (TypeAdapter<T>) new TypeAdapter<VOIReportAccount>() {
           @Override
           public void write(JsonWriter out, VOIReportAccount value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public VOIReportAccount read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             VOIReportAccount instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of VOIReportAccount given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of VOIReportAccount
  * @throws IOException if the JSON string is invalid with respect to VOIReportAccount
  */
  public static VOIReportAccount fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, VOIReportAccount.class);
  }

 /**
  * Convert an instance of VOIReportAccount to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

