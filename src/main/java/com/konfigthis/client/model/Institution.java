/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.16.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.Branding;
import com.konfigthis.client.model.InstitutionAddress;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * A financial institution
 */
@ApiModel(description = "A financial institution")@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class Institution {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Long id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_TRANS_AGG = "transAgg";
  @SerializedName(SERIALIZED_NAME_TRANS_AGG)
  private Boolean transAgg;

  public static final String SERIALIZED_NAME_ACH = "ach";
  @SerializedName(SERIALIZED_NAME_ACH)
  private Boolean ach;

  public static final String SERIALIZED_NAME_STATE_AGG = "stateAgg";
  @SerializedName(SERIALIZED_NAME_STATE_AGG)
  private Boolean stateAgg;

  public static final String SERIALIZED_NAME_VOI = "voi";
  @SerializedName(SERIALIZED_NAME_VOI)
  private Boolean voi;

  public static final String SERIALIZED_NAME_VOA = "voa";
  @SerializedName(SERIALIZED_NAME_VOA)
  private Boolean voa;

  public static final String SERIALIZED_NAME_AHA = "aha";
  @SerializedName(SERIALIZED_NAME_AHA)
  private Boolean aha;

  public static final String SERIALIZED_NAME_AVAIL_BALANCE = "availBalance";
  @SerializedName(SERIALIZED_NAME_AVAIL_BALANCE)
  private Boolean availBalance;

  public static final String SERIALIZED_NAME_ACCOUNT_OWNER = "accountOwner";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_OWNER)
  private Boolean accountOwner;

  public static final String SERIALIZED_NAME_STUDENT_LOAN_DATA = "studentLoanData";
  @SerializedName(SERIALIZED_NAME_STUDENT_LOAN_DATA)
  private Boolean studentLoanData;

  public static final String SERIALIZED_NAME_LOAN_PAYMENT_DETAILS = "loanPaymentDetails";
  @SerializedName(SERIALIZED_NAME_LOAN_PAYMENT_DETAILS)
  private Boolean loanPaymentDetails;

  public static final String SERIALIZED_NAME_ACCOUNT_TYPE_DESCRIPTION = "accountTypeDescription";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_TYPE_DESCRIPTION)
  private String accountTypeDescription;

  public static final String SERIALIZED_NAME_PHONE = "phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  private String phone;

  public static final String SERIALIZED_NAME_URL_HOME_APP = "urlHomeApp";
  @SerializedName(SERIALIZED_NAME_URL_HOME_APP)
  private String urlHomeApp;

  public static final String SERIALIZED_NAME_URL_LOGON_APP = "urlLogonApp";
  @SerializedName(SERIALIZED_NAME_URL_LOGON_APP)
  private String urlLogonApp;

  public static final String SERIALIZED_NAME_OAUTH_ENABLED = "oauthEnabled";
  @SerializedName(SERIALIZED_NAME_OAUTH_ENABLED)
  private Boolean oauthEnabled;

  public static final String SERIALIZED_NAME_URL_FORGOT_PASSWORD = "urlForgotPassword";
  @SerializedName(SERIALIZED_NAME_URL_FORGOT_PASSWORD)
  private String urlForgotPassword;

  public static final String SERIALIZED_NAME_URL_ONLINE_REGISTRATION = "urlOnlineRegistration";
  @SerializedName(SERIALIZED_NAME_URL_ONLINE_REGISTRATION)
  private String urlOnlineRegistration;

  public static final String SERIALIZED_NAME_PROPERTY_CLASS = "class";
  @SerializedName(SERIALIZED_NAME_PROPERTY_CLASS)
  private String propertyClass;

  public static final String SERIALIZED_NAME_SPECIAL_TEXT = "specialText";
  @SerializedName(SERIALIZED_NAME_SPECIAL_TEXT)
  private String specialText;

  public static final String SERIALIZED_NAME_TIME_ZONE = "timeZone";
  @SerializedName(SERIALIZED_NAME_TIME_ZONE)
  private String timeZone;

  public static final String SERIALIZED_NAME_SPECIAL_INSTRUCTIONS = "specialInstructions";
  @SerializedName(SERIALIZED_NAME_SPECIAL_INSTRUCTIONS)
  private List<String> specialInstructions = null;

  public static final String SERIALIZED_NAME_SPECIAL_INSTUTIONS_TITLE = "specialInstutionsTitle";
  @SerializedName(SERIALIZED_NAME_SPECIAL_INSTUTIONS_TITLE)
  private String specialInstutionsTitle;

  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private InstitutionAddress address;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private String currency;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_NEW_INSTITUTION_ID = "newInstitutionId";
  @SerializedName(SERIALIZED_NAME_NEW_INSTITUTION_ID)
  private Long newInstitutionId;

  public static final String SERIALIZED_NAME_BRANDING = "branding";
  @SerializedName(SERIALIZED_NAME_BRANDING)
  private Branding branding;

  public static final String SERIALIZED_NAME_OAUTH_INSTITUTION_ID = "oauthInstitutionId";
  @SerializedName(SERIALIZED_NAME_OAUTH_INSTITUTION_ID)
  private Long oauthInstitutionId;

  public Institution() {
  }

  public Institution id(Long id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * The ID of a financial institution, represented as a number
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "4222", required = true, value = "The ID of a financial institution, represented as a number")

  public Long getId() {
    return id;
  }


  public void setId(Long id) {
    
    
    
    this.id = id;
  }


  public Institution name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * The name of the institution
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "FinBank", value = "The name of the institution")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public Institution transAgg(Boolean transAgg) {
    
    
    
    
    this.transAgg = transAgg;
    return this;
  }

   /**
   * \&quot;true\&quot;: The institution is certified for the Transaction Aggregation product \&quot;false\&quot;: The institution is decertified for the Transaction Aggregation product
   * @return transAgg
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "true", required = true, value = "\"true\": The institution is certified for the Transaction Aggregation product \"false\": The institution is decertified for the Transaction Aggregation product")

  public Boolean getTransAgg() {
    return transAgg;
  }


  public void setTransAgg(Boolean transAgg) {
    
    
    
    this.transAgg = transAgg;
  }


  public Institution ach(Boolean ach) {
    
    
    
    
    this.ach = ach;
    return this;
  }

   /**
   * \&quot;true\&quot;: The institution is certified for the ACH product \&quot;false\&quot;: The institution is decertified for the ACH product
   * @return ach
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "true", required = true, value = "\"true\": The institution is certified for the ACH product \"false\": The institution is decertified for the ACH product")

  public Boolean getAch() {
    return ach;
  }


  public void setAch(Boolean ach) {
    
    
    
    this.ach = ach;
  }


  public Institution stateAgg(Boolean stateAgg) {
    
    
    
    
    this.stateAgg = stateAgg;
    return this;
  }

   /**
   * \&quot;true\&quot;: The institution is certified for the Statement Aggregation product \&quot;false\&quot;: The institution is decertified for the Statement Aggregation product
   * @return stateAgg
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "false", required = true, value = "\"true\": The institution is certified for the Statement Aggregation product \"false\": The institution is decertified for the Statement Aggregation product")

  public Boolean getStateAgg() {
    return stateAgg;
  }


  public void setStateAgg(Boolean stateAgg) {
    
    
    
    this.stateAgg = stateAgg;
  }


  public Institution voi(Boolean voi) {
    
    
    
    
    this.voi = voi;
    return this;
  }

   /**
   * \&quot;true\&quot;: The institution is certified for the VOI product \&quot;false\&quot;: The institution is decertified for the VOI product
   * @return voi
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "true", required = true, value = "\"true\": The institution is certified for the VOI product \"false\": The institution is decertified for the VOI product")

  public Boolean getVoi() {
    return voi;
  }


  public void setVoi(Boolean voi) {
    
    
    
    this.voi = voi;
  }


  public Institution voa(Boolean voa) {
    
    
    
    
    this.voa = voa;
    return this;
  }

   /**
   * \&quot;true\&quot;: The institution is certified for the VOA product \&quot;false\&quot;: The institution is decertified for the VOA product
   * @return voa
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "true", required = true, value = "\"true\": The institution is certified for the VOA product \"false\": The institution is decertified for the VOA product")

  public Boolean getVoa() {
    return voa;
  }


  public void setVoa(Boolean voa) {
    
    
    
    this.voa = voa;
  }


  public Institution aha(Boolean aha) {
    
    
    
    
    this.aha = aha;
    return this;
  }

   /**
   * \&quot;true\&quot;: The institution is certified for the Account History Aggregation product \&quot;false\&quot;: The institution is decertified for the Account History Aggregation product
   * @return aha
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "false", required = true, value = "\"true\": The institution is certified for the Account History Aggregation product \"false\": The institution is decertified for the Account History Aggregation product")

  public Boolean getAha() {
    return aha;
  }


  public void setAha(Boolean aha) {
    
    
    
    this.aha = aha;
  }


  public Institution availBalance(Boolean availBalance) {
    
    
    
    
    this.availBalance = availBalance;
    return this;
  }

   /**
   * \&quot;true\&quot;: The institution is certified for the Account Balance Check (ABC) product \&quot;false\&quot;: The institution is decertified for the Account Balance Check (ABC) product
   * @return availBalance
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "false", required = true, value = "\"true\": The institution is certified for the Account Balance Check (ABC) product \"false\": The institution is decertified for the Account Balance Check (ABC) product")

  public Boolean getAvailBalance() {
    return availBalance;
  }


  public void setAvailBalance(Boolean availBalance) {
    
    
    
    this.availBalance = availBalance;
  }


  public Institution accountOwner(Boolean accountOwner) {
    
    
    
    
    this.accountOwner = accountOwner;
    return this;
  }

   /**
   * \&quot;true\&quot;: The institution is certified for the Account Owner product \&quot;false\&quot;: The institution is decertified for the Account Owner product
   * @return accountOwner
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "true", required = true, value = "\"true\": The institution is certified for the Account Owner product \"false\": The institution is decertified for the Account Owner product")

  public Boolean getAccountOwner() {
    return accountOwner;
  }


  public void setAccountOwner(Boolean accountOwner) {
    
    
    
    this.accountOwner = accountOwner;
  }


  public Institution studentLoanData(Boolean studentLoanData) {
    
    
    
    
    this.studentLoanData = studentLoanData;
    return this;
  }

   /**
   * \&quot;true\&quot;: The institution is certified for the Student Loan Data product  \&quot;false\&quot;: The institution is decertified for the Student Loan Data product
   * @return studentLoanData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "\"true\": The institution is certified for the Student Loan Data product  \"false\": The institution is decertified for the Student Loan Data product")

  public Boolean getStudentLoanData() {
    return studentLoanData;
  }


  public void setStudentLoanData(Boolean studentLoanData) {
    
    
    
    this.studentLoanData = studentLoanData;
  }


  public Institution loanPaymentDetails(Boolean loanPaymentDetails) {
    
    
    
    
    this.loanPaymentDetails = loanPaymentDetails;
    return this;
  }

   /**
   * \&quot;true\&quot;: The institution is certified for the Loan Payment Detail product  \&quot;false\&quot;: The institution is decertified for the Loan Payment Detail product
   * @return loanPaymentDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "\"true\": The institution is certified for the Loan Payment Detail product  \"false\": The institution is decertified for the Loan Payment Detail product")

  public Boolean getLoanPaymentDetails() {
    return loanPaymentDetails;
  }


  public void setLoanPaymentDetails(Boolean loanPaymentDetails) {
    
    
    
    this.loanPaymentDetails = loanPaymentDetails;
  }


  public Institution accountTypeDescription(String accountTypeDescription) {
    
    
    
    
    this.accountTypeDescription = accountTypeDescription;
    return this;
  }

   /**
   * Values: Banking, Investments, Credit Cards/Accounts, Workplace Retirement, Mortgages and Loans, Insurance
   * @return accountTypeDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Workplace Retirement", value = "Values: Banking, Investments, Credit Cards/Accounts, Workplace Retirement, Mortgages and Loans, Insurance")

  public String getAccountTypeDescription() {
    return accountTypeDescription;
  }


  public void setAccountTypeDescription(String accountTypeDescription) {
    
    
    
    this.accountTypeDescription = accountTypeDescription;
  }


  public Institution phone(String phone) {
    
    
    
    
    this.phone = phone;
    return this;
  }

   /**
   * A phone number (max length 15).
   * @return phone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1-801-984-4200", value = "A phone number (max length 15).")

  public String getPhone() {
    return phone;
  }


  public void setPhone(String phone) {
    
    
    
    this.phone = phone;
  }


  public Institution urlHomeApp(String urlHomeApp) {
    
    
    
    
    this.urlHomeApp = urlHomeApp;
    return this;
  }

   /**
   * The URL of the institution&#39;s primary home page
   * @return urlHomeApp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://www.example.com/home", value = "The URL of the institution's primary home page")

  public String getUrlHomeApp() {
    return urlHomeApp;
  }


  public void setUrlHomeApp(String urlHomeApp) {
    
    
    
    this.urlHomeApp = urlHomeApp;
  }


  public Institution urlLogonApp(String urlLogonApp) {
    
    
    
    
    this.urlLogonApp = urlLogonApp;
    return this;
  }

   /**
   * The URL of the institution&#39;s login page
   * @return urlLogonApp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://www.example.com/login", value = "The URL of the institution's login page")

  public String getUrlLogonApp() {
    return urlLogonApp;
  }


  public void setUrlLogonApp(String urlLogonApp) {
    
    
    
    this.urlLogonApp = urlLogonApp;
  }


  public Institution oauthEnabled(Boolean oauthEnabled) {
    
    
    
    
    this.oauthEnabled = oauthEnabled;
    return this;
  }

   /**
   * \&quot;true\&quot;: The institution is an OAuth connection  \&quot;false\&quot;: The institution isn&#39;t an OAuth connection
   * @return oauthEnabled
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "true", required = true, value = "\"true\": The institution is an OAuth connection  \"false\": The institution isn't an OAuth connection")

  public Boolean getOauthEnabled() {
    return oauthEnabled;
  }


  public void setOauthEnabled(Boolean oauthEnabled) {
    
    
    
    this.oauthEnabled = oauthEnabled;
  }


  public Institution urlForgotPassword(String urlForgotPassword) {
    
    
    
    
    this.urlForgotPassword = urlForgotPassword;
    return this;
  }

   /**
   * Institution&#39;s forgot password page
   * @return urlForgotPassword
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://www.example.com/forgotPassword.do", value = "Institution's forgot password page")

  public String getUrlForgotPassword() {
    return urlForgotPassword;
  }


  public void setUrlForgotPassword(String urlForgotPassword) {
    
    
    
    this.urlForgotPassword = urlForgotPassword;
  }


  public Institution urlOnlineRegistration(String urlOnlineRegistration) {
    
    
    
    
    this.urlOnlineRegistration = urlOnlineRegistration;
    return this;
  }

   /**
   * Institution&#39;s signup page
   * @return urlOnlineRegistration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://www.example.com/signup", value = "Institution's signup page")

  public String getUrlOnlineRegistration() {
    return urlOnlineRegistration;
  }


  public void setUrlOnlineRegistration(String urlOnlineRegistration) {
    
    
    
    this.urlOnlineRegistration = urlOnlineRegistration;
  }


  public Institution propertyClass(String propertyClass) {
    
    
    
    
    this.propertyClass = propertyClass;
    return this;
  }

   /**
   * Institution&#39;s class
   * @return propertyClass
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "retirement", value = "Institution's class")

  public String getPropertyClass() {
    return propertyClass;
  }


  public void setPropertyClass(String propertyClass) {
    
    
    
    this.propertyClass = propertyClass;
  }


  public Institution specialText(String specialText) {
    
    
    
    
    this.specialText = specialText;
    return this;
  }

   /**
   * Special instructions given to customers for login
   * @return specialText
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Please enter your Principal Financial - Retirement (Personal) Username and Password.", value = "Special instructions given to customers for login")

  public String getSpecialText() {
    return specialText;
  }


  public void setSpecialText(String specialText) {
    
    
    
    this.specialText = specialText;
  }


  public Institution timeZone(String timeZone) {
    
    
    
    
    this.timeZone = timeZone;
    return this;
  }

   /**
   * The time zone of the institution.
   * @return timeZone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "America/Denver", value = "The time zone of the institution.")

  public String getTimeZone() {
    return timeZone;
  }


  public void setTimeZone(String timeZone) {
    
    
    
    this.timeZone = timeZone;
  }


  public Institution specialInstructions(List<String> specialInstructions) {
    
    
    
    
    this.specialInstructions = specialInstructions;
    return this;
  }

  public Institution addSpecialInstructionsItem(String specialInstructionsItem) {
    if (this.specialInstructions == null) {
      this.specialInstructions = new ArrayList<>();
    }
    this.specialInstructions.add(specialInstructionsItem);
    return this;
  }

   /**
   * Instructions given to the customer before they are sent to the institution website to login for OAuth institutions.  Note: this helps the customer to provide the proper permission for data needed for the application.
   * @return specialInstructions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[\"Account details\",\"Balances and transactions\",\"Personal and account ownership info\"]", value = "Instructions given to the customer before they are sent to the institution website to login for OAuth institutions.  Note: this helps the customer to provide the proper permission for data needed for the application.")

  public List<String> getSpecialInstructions() {
    return specialInstructions;
  }


  public void setSpecialInstructions(List<String> specialInstructions) {
    
    
    
    this.specialInstructions = specialInstructions;
  }


  public Institution specialInstutionsTitle(String specialInstutionsTitle) {
    
    
    
    
    this.specialInstutionsTitle = specialInstutionsTitle;
    return this;
  }

   /**
   * The title of the special instructions, if one exists or is required.
   * @return specialInstutionsTitle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Special OAuth Login Instructions", value = "The title of the special instructions, if one exists or is required.")

  public String getSpecialInstutionsTitle() {
    return specialInstutionsTitle;
  }


  public void setSpecialInstutionsTitle(String specialInstutionsTitle) {
    
    
    
    this.specialInstutionsTitle = specialInstutionsTitle;
  }


  public Institution address(InstitutionAddress address) {
    
    
    
    
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public InstitutionAddress getAddress() {
    return address;
  }


  public void setAddress(InstitutionAddress address) {
    
    
    
    this.address = address;
  }


  public Institution currency(String currency) {
    
    
    
    
    this.currency = currency;
    return this;
  }

   /**
   * A currency code
   * @return currency
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "USD", required = true, value = "A currency code")

  public String getCurrency() {
    return currency;
  }


  public void setCurrency(String currency) {
    
    
    
    this.currency = currency;
  }


  public Institution email(String email) {
    
    
    
    
    this.email = email;
    return this;
  }

   /**
   * An email address
   * @return email
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "myname@mycompany.com", value = "An email address")

  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    
    
    
    this.email = email;
  }


  public Institution status(String status) {
    
    
    
    
    this.status = status;
    return this;
  }

   /**
   * Status for the institution: \&quot;online\&quot;, \&quot;offline\&quot;, \&quot;maintenance\&quot;, \&quot;testing\&quot;
   * @return status
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "online", required = true, value = "Status for the institution: \"online\", \"offline\", \"maintenance\", \"testing\"")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    
    
    
    this.status = status;
  }


  public Institution newInstitutionId(Long newInstitutionId) {
    
    
    
    
    this.newInstitutionId = newInstitutionId;
    return this;
  }

   /**
   * The ID of a financial institution, represented as a number
   * @return newInstitutionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "4222", value = "The ID of a financial institution, represented as a number")

  public Long getNewInstitutionId() {
    return newInstitutionId;
  }


  public void setNewInstitutionId(Long newInstitutionId) {
    
    
    
    this.newInstitutionId = newInstitutionId;
  }


  public Institution branding(Branding branding) {
    
    
    
    
    this.branding = branding;
    return this;
  }

   /**
   * Get branding
   * @return branding
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Branding getBranding() {
    return branding;
  }


  public void setBranding(Branding branding) {
    
    
    
    this.branding = branding;
  }


  public Institution oauthInstitutionId(Long oauthInstitutionId) {
    
    
    
    
    this.oauthInstitutionId = oauthInstitutionId;
    return this;
  }

   /**
   * The ID of a financial institution, represented as a number
   * @return oauthInstitutionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "4222", value = "The ID of a financial institution, represented as a number")

  public Long getOauthInstitutionId() {
    return oauthInstitutionId;
  }


  public void setOauthInstitutionId(Long oauthInstitutionId) {
    
    
    
    this.oauthInstitutionId = oauthInstitutionId;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the Institution instance itself
   */
  public Institution putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Institution institution = (Institution) o;
    return Objects.equals(this.id, institution.id) &&
        Objects.equals(this.name, institution.name) &&
        Objects.equals(this.transAgg, institution.transAgg) &&
        Objects.equals(this.ach, institution.ach) &&
        Objects.equals(this.stateAgg, institution.stateAgg) &&
        Objects.equals(this.voi, institution.voi) &&
        Objects.equals(this.voa, institution.voa) &&
        Objects.equals(this.aha, institution.aha) &&
        Objects.equals(this.availBalance, institution.availBalance) &&
        Objects.equals(this.accountOwner, institution.accountOwner) &&
        Objects.equals(this.studentLoanData, institution.studentLoanData) &&
        Objects.equals(this.loanPaymentDetails, institution.loanPaymentDetails) &&
        Objects.equals(this.accountTypeDescription, institution.accountTypeDescription) &&
        Objects.equals(this.phone, institution.phone) &&
        Objects.equals(this.urlHomeApp, institution.urlHomeApp) &&
        Objects.equals(this.urlLogonApp, institution.urlLogonApp) &&
        Objects.equals(this.oauthEnabled, institution.oauthEnabled) &&
        Objects.equals(this.urlForgotPassword, institution.urlForgotPassword) &&
        Objects.equals(this.urlOnlineRegistration, institution.urlOnlineRegistration) &&
        Objects.equals(this.propertyClass, institution.propertyClass) &&
        Objects.equals(this.specialText, institution.specialText) &&
        Objects.equals(this.timeZone, institution.timeZone) &&
        Objects.equals(this.specialInstructions, institution.specialInstructions) &&
        Objects.equals(this.specialInstutionsTitle, institution.specialInstutionsTitle) &&
        Objects.equals(this.address, institution.address) &&
        Objects.equals(this.currency, institution.currency) &&
        Objects.equals(this.email, institution.email) &&
        Objects.equals(this.status, institution.status) &&
        Objects.equals(this.newInstitutionId, institution.newInstitutionId) &&
        Objects.equals(this.branding, institution.branding) &&
        Objects.equals(this.oauthInstitutionId, institution.oauthInstitutionId)&&
        Objects.equals(this.additionalProperties, institution.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, transAgg, ach, stateAgg, voi, voa, aha, availBalance, accountOwner, studentLoanData, loanPaymentDetails, accountTypeDescription, phone, urlHomeApp, urlLogonApp, oauthEnabled, urlForgotPassword, urlOnlineRegistration, propertyClass, specialText, timeZone, specialInstructions, specialInstutionsTitle, address, currency, email, status, newInstitutionId, branding, oauthInstitutionId, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Institution {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    transAgg: ").append(toIndentedString(transAgg)).append("\n");
    sb.append("    ach: ").append(toIndentedString(ach)).append("\n");
    sb.append("    stateAgg: ").append(toIndentedString(stateAgg)).append("\n");
    sb.append("    voi: ").append(toIndentedString(voi)).append("\n");
    sb.append("    voa: ").append(toIndentedString(voa)).append("\n");
    sb.append("    aha: ").append(toIndentedString(aha)).append("\n");
    sb.append("    availBalance: ").append(toIndentedString(availBalance)).append("\n");
    sb.append("    accountOwner: ").append(toIndentedString(accountOwner)).append("\n");
    sb.append("    studentLoanData: ").append(toIndentedString(studentLoanData)).append("\n");
    sb.append("    loanPaymentDetails: ").append(toIndentedString(loanPaymentDetails)).append("\n");
    sb.append("    accountTypeDescription: ").append(toIndentedString(accountTypeDescription)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    urlHomeApp: ").append(toIndentedString(urlHomeApp)).append("\n");
    sb.append("    urlLogonApp: ").append(toIndentedString(urlLogonApp)).append("\n");
    sb.append("    oauthEnabled: ").append(toIndentedString(oauthEnabled)).append("\n");
    sb.append("    urlForgotPassword: ").append(toIndentedString(urlForgotPassword)).append("\n");
    sb.append("    urlOnlineRegistration: ").append(toIndentedString(urlOnlineRegistration)).append("\n");
    sb.append("    propertyClass: ").append(toIndentedString(propertyClass)).append("\n");
    sb.append("    specialText: ").append(toIndentedString(specialText)).append("\n");
    sb.append("    timeZone: ").append(toIndentedString(timeZone)).append("\n");
    sb.append("    specialInstructions: ").append(toIndentedString(specialInstructions)).append("\n");
    sb.append("    specialInstutionsTitle: ").append(toIndentedString(specialInstutionsTitle)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    newInstitutionId: ").append(toIndentedString(newInstitutionId)).append("\n");
    sb.append("    branding: ").append(toIndentedString(branding)).append("\n");
    sb.append("    oauthInstitutionId: ").append(toIndentedString(oauthInstitutionId)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("name");
    openapiFields.add("transAgg");
    openapiFields.add("ach");
    openapiFields.add("stateAgg");
    openapiFields.add("voi");
    openapiFields.add("voa");
    openapiFields.add("aha");
    openapiFields.add("availBalance");
    openapiFields.add("accountOwner");
    openapiFields.add("studentLoanData");
    openapiFields.add("loanPaymentDetails");
    openapiFields.add("accountTypeDescription");
    openapiFields.add("phone");
    openapiFields.add("urlHomeApp");
    openapiFields.add("urlLogonApp");
    openapiFields.add("oauthEnabled");
    openapiFields.add("urlForgotPassword");
    openapiFields.add("urlOnlineRegistration");
    openapiFields.add("class");
    openapiFields.add("specialText");
    openapiFields.add("timeZone");
    openapiFields.add("specialInstructions");
    openapiFields.add("specialInstutionsTitle");
    openapiFields.add("address");
    openapiFields.add("currency");
    openapiFields.add("email");
    openapiFields.add("status");
    openapiFields.add("newInstitutionId");
    openapiFields.add("branding");
    openapiFields.add("oauthInstitutionId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("transAgg");
    openapiRequiredFields.add("ach");
    openapiRequiredFields.add("stateAgg");
    openapiRequiredFields.add("voi");
    openapiRequiredFields.add("voa");
    openapiRequiredFields.add("aha");
    openapiRequiredFields.add("availBalance");
    openapiRequiredFields.add("accountOwner");
    openapiRequiredFields.add("oauthEnabled");
    openapiRequiredFields.add("currency");
    openapiRequiredFields.add("status");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to Institution
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!Institution.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Institution is not found in the empty JSON string", Institution.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : Institution.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("accountTypeDescription") != null && !jsonObj.get("accountTypeDescription").isJsonNull()) && !jsonObj.get("accountTypeDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accountTypeDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accountTypeDescription").toString()));
      }
      if ((jsonObj.get("phone") != null && !jsonObj.get("phone").isJsonNull()) && !jsonObj.get("phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phone").toString()));
      }
      if ((jsonObj.get("urlHomeApp") != null && !jsonObj.get("urlHomeApp").isJsonNull()) && !jsonObj.get("urlHomeApp").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `urlHomeApp` to be a primitive type in the JSON string but got `%s`", jsonObj.get("urlHomeApp").toString()));
      }
      if ((jsonObj.get("urlLogonApp") != null && !jsonObj.get("urlLogonApp").isJsonNull()) && !jsonObj.get("urlLogonApp").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `urlLogonApp` to be a primitive type in the JSON string but got `%s`", jsonObj.get("urlLogonApp").toString()));
      }
      if ((jsonObj.get("urlForgotPassword") != null && !jsonObj.get("urlForgotPassword").isJsonNull()) && !jsonObj.get("urlForgotPassword").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `urlForgotPassword` to be a primitive type in the JSON string but got `%s`", jsonObj.get("urlForgotPassword").toString()));
      }
      if ((jsonObj.get("urlOnlineRegistration") != null && !jsonObj.get("urlOnlineRegistration").isJsonNull()) && !jsonObj.get("urlOnlineRegistration").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `urlOnlineRegistration` to be a primitive type in the JSON string but got `%s`", jsonObj.get("urlOnlineRegistration").toString()));
      }
      if ((jsonObj.get("class") != null && !jsonObj.get("class").isJsonNull()) && !jsonObj.get("class").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `class` to be a primitive type in the JSON string but got `%s`", jsonObj.get("class").toString()));
      }
      if ((jsonObj.get("specialText") != null && !jsonObj.get("specialText").isJsonNull()) && !jsonObj.get("specialText").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `specialText` to be a primitive type in the JSON string but got `%s`", jsonObj.get("specialText").toString()));
      }
      if ((jsonObj.get("timeZone") != null && !jsonObj.get("timeZone").isJsonNull()) && !jsonObj.get("timeZone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timeZone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timeZone").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("specialInstructions") != null && !jsonObj.get("specialInstructions").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `specialInstructions` to be an array in the JSON string but got `%s`", jsonObj.get("specialInstructions").toString()));
      }
      if ((jsonObj.get("specialInstutionsTitle") != null && !jsonObj.get("specialInstutionsTitle").isJsonNull()) && !jsonObj.get("specialInstutionsTitle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `specialInstutionsTitle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("specialInstutionsTitle").toString()));
      }
      // validate the optional field `address`
      if (jsonObj.get("address") != null && !jsonObj.get("address").isJsonNull()) {
        InstitutionAddress.validateJsonObject(jsonObj.getAsJsonObject("address"));
      }
      if (!jsonObj.get("currency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currency").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if (!jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      // validate the optional field `branding`
      if (jsonObj.get("branding") != null && !jsonObj.get("branding").isJsonNull()) {
        Branding.validateJsonObject(jsonObj.getAsJsonObject("branding"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Institution.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Institution' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Institution> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Institution.class));

       return (TypeAdapter<T>) new TypeAdapter<Institution>() {
           @Override
           public void write(JsonWriter out, Institution value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public Institution read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             Institution instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Institution given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Institution
  * @throws IOException if the JSON string is invalid with respect to Institution
  */
  public static Institution fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Institution.class);
  }

 /**
  * Convert an instance of Institution to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

