/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.16.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.ChildInstitution;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * CertifiedInstitution
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class CertifiedInstitution {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Long id;

  public static final String SERIALIZED_NAME_RSSD = "rssd";
  @SerializedName(SERIALIZED_NAME_RSSD)
  private Long rssd;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_TRANS_AGG = "transAgg";
  @SerializedName(SERIALIZED_NAME_TRANS_AGG)
  private Boolean transAgg;

  public static final String SERIALIZED_NAME_ACH = "ach";
  @SerializedName(SERIALIZED_NAME_ACH)
  private Boolean ach;

  public static final String SERIALIZED_NAME_STATE_AGG = "stateAgg";
  @SerializedName(SERIALIZED_NAME_STATE_AGG)
  private Boolean stateAgg;

  public static final String SERIALIZED_NAME_VOI = "voi";
  @SerializedName(SERIALIZED_NAME_VOI)
  private Boolean voi;

  public static final String SERIALIZED_NAME_VOA = "voa";
  @SerializedName(SERIALIZED_NAME_VOA)
  private Boolean voa;

  public static final String SERIALIZED_NAME_AHA = "aha";
  @SerializedName(SERIALIZED_NAME_AHA)
  private Boolean aha;

  public static final String SERIALIZED_NAME_AVAIL_BALANCE = "availBalance";
  @SerializedName(SERIALIZED_NAME_AVAIL_BALANCE)
  private Boolean availBalance;

  public static final String SERIALIZED_NAME_ACCOUNT_OWNER = "accountOwner";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_OWNER)
  private Boolean accountOwner;

  public static final String SERIALIZED_NAME_STUDENT_LOAN_DATA = "studentLoanData";
  @SerializedName(SERIALIZED_NAME_STUDENT_LOAN_DATA)
  private Boolean studentLoanData;

  public static final String SERIALIZED_NAME_LOAN_PAYMENT_DETAILS = "loanPaymentDetails";
  @SerializedName(SERIALIZED_NAME_LOAN_PAYMENT_DETAILS)
  private Boolean loanPaymentDetails;

  public static final String SERIALIZED_NAME_CHILD_INSTITUTIONS = "childInstitutions";
  @SerializedName(SERIALIZED_NAME_CHILD_INSTITUTIONS)
  private List<ChildInstitution> childInstitutions = null;

  public CertifiedInstitution() {
  }

  public CertifiedInstitution id(Long id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * The ID of a financial institution, represented as a number
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "4222", required = true, value = "The ID of a financial institution, represented as a number")

  public Long getId() {
    return id;
  }


  public void setId(Long id) {
    
    
    
    this.id = id;
  }


  public CertifiedInstitution rssd(Long rssd) {
    
    
    
    
    this.rssd = rssd;
    return this;
  }

   /**
   * The RSSD ID is a unique identifier assigned to financial institutions by the Federal Reserve. While the length of the RSSD ID varies by institution, it cannot exceed 10 numerical digits.
   * @return rssd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "490535", value = "The RSSD ID is a unique identifier assigned to financial institutions by the Federal Reserve. While the length of the RSSD ID varies by institution, it cannot exceed 10 numerical digits.")

  public Long getRssd() {
    return rssd;
  }


  public void setRssd(Long rssd) {
    
    
    
    this.rssd = rssd;
  }


  public CertifiedInstitution name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * The name of the institution
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "FinBank", required = true, value = "The name of the institution")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public CertifiedInstitution transAgg(Boolean transAgg) {
    
    
    
    
    this.transAgg = transAgg;
    return this;
  }

   /**
   * \&quot;true\&quot;: The institution is certified for the Transaction Aggregation product \&quot;false\&quot;: The institution is decertified for the Transaction Aggregation product
   * @return transAgg
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "true", required = true, value = "\"true\": The institution is certified for the Transaction Aggregation product \"false\": The institution is decertified for the Transaction Aggregation product")

  public Boolean getTransAgg() {
    return transAgg;
  }


  public void setTransAgg(Boolean transAgg) {
    
    
    
    this.transAgg = transAgg;
  }


  public CertifiedInstitution ach(Boolean ach) {
    
    
    
    
    this.ach = ach;
    return this;
  }

   /**
   * \&quot;true\&quot;: The institution is certified for the ACH product \&quot;false\&quot;: The institution is decertified for the ACH product
   * @return ach
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "true", required = true, value = "\"true\": The institution is certified for the ACH product \"false\": The institution is decertified for the ACH product")

  public Boolean getAch() {
    return ach;
  }


  public void setAch(Boolean ach) {
    
    
    
    this.ach = ach;
  }


  public CertifiedInstitution stateAgg(Boolean stateAgg) {
    
    
    
    
    this.stateAgg = stateAgg;
    return this;
  }

   /**
   * \&quot;true\&quot;: The institution is certified for the Statement Aggregation product \&quot;false\&quot;: The institution is decertified for the Statement Aggregation product
   * @return stateAgg
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "false", required = true, value = "\"true\": The institution is certified for the Statement Aggregation product \"false\": The institution is decertified for the Statement Aggregation product")

  public Boolean getStateAgg() {
    return stateAgg;
  }


  public void setStateAgg(Boolean stateAgg) {
    
    
    
    this.stateAgg = stateAgg;
  }


  public CertifiedInstitution voi(Boolean voi) {
    
    
    
    
    this.voi = voi;
    return this;
  }

   /**
   * \&quot;true\&quot;: The institution is certified for the VOI product \&quot;false\&quot;: The institution is decertified for the VOI product
   * @return voi
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "true", required = true, value = "\"true\": The institution is certified for the VOI product \"false\": The institution is decertified for the VOI product")

  public Boolean getVoi() {
    return voi;
  }


  public void setVoi(Boolean voi) {
    
    
    
    this.voi = voi;
  }


  public CertifiedInstitution voa(Boolean voa) {
    
    
    
    
    this.voa = voa;
    return this;
  }

   /**
   * \&quot;true\&quot;: The institution is certified for the VOA product \&quot;false\&quot;: The institution is decertified for the VOA product
   * @return voa
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "true", required = true, value = "\"true\": The institution is certified for the VOA product \"false\": The institution is decertified for the VOA product")

  public Boolean getVoa() {
    return voa;
  }


  public void setVoa(Boolean voa) {
    
    
    
    this.voa = voa;
  }


  public CertifiedInstitution aha(Boolean aha) {
    
    
    
    
    this.aha = aha;
    return this;
  }

   /**
   * \&quot;true\&quot;: The institution is certified for the Account History Aggregation product \&quot;false\&quot;: The institution is decertified for the Account History Aggregation product
   * @return aha
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "false", required = true, value = "\"true\": The institution is certified for the Account History Aggregation product \"false\": The institution is decertified for the Account History Aggregation product")

  public Boolean getAha() {
    return aha;
  }


  public void setAha(Boolean aha) {
    
    
    
    this.aha = aha;
  }


  public CertifiedInstitution availBalance(Boolean availBalance) {
    
    
    
    
    this.availBalance = availBalance;
    return this;
  }

   /**
   * \&quot;true\&quot;: The institution is certified for the Account Balance Check (ABC) product \&quot;false\&quot;: The institution is decertified for the Account Balance Check (ABC) product
   * @return availBalance
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "false", required = true, value = "\"true\": The institution is certified for the Account Balance Check (ABC) product \"false\": The institution is decertified for the Account Balance Check (ABC) product")

  public Boolean getAvailBalance() {
    return availBalance;
  }


  public void setAvailBalance(Boolean availBalance) {
    
    
    
    this.availBalance = availBalance;
  }


  public CertifiedInstitution accountOwner(Boolean accountOwner) {
    
    
    
    
    this.accountOwner = accountOwner;
    return this;
  }

   /**
   * \&quot;true\&quot;: The institution is certified for the Account Owner product \&quot;false\&quot;: The institution is decertified for the Account Owner product
   * @return accountOwner
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "true", required = true, value = "\"true\": The institution is certified for the Account Owner product \"false\": The institution is decertified for the Account Owner product")

  public Boolean getAccountOwner() {
    return accountOwner;
  }


  public void setAccountOwner(Boolean accountOwner) {
    
    
    
    this.accountOwner = accountOwner;
  }


  public CertifiedInstitution studentLoanData(Boolean studentLoanData) {
    
    
    
    
    this.studentLoanData = studentLoanData;
    return this;
  }

   /**
   * \&quot;true\&quot;: The institution is certified for the Student Loan Data product  \&quot;false\&quot;: The institution is decertified for the Student Loan Data product
   * @return studentLoanData
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "true", required = true, value = "\"true\": The institution is certified for the Student Loan Data product  \"false\": The institution is decertified for the Student Loan Data product")

  public Boolean getStudentLoanData() {
    return studentLoanData;
  }


  public void setStudentLoanData(Boolean studentLoanData) {
    
    
    
    this.studentLoanData = studentLoanData;
  }


  public CertifiedInstitution loanPaymentDetails(Boolean loanPaymentDetails) {
    
    
    
    
    this.loanPaymentDetails = loanPaymentDetails;
    return this;
  }

   /**
   * \&quot;true\&quot;: The institution is certified for the Loan Payment Detail product  \&quot;false\&quot;: The institution is decertified for the Loan Payment Detail product
   * @return loanPaymentDetails
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "true", required = true, value = "\"true\": The institution is certified for the Loan Payment Detail product  \"false\": The institution is decertified for the Loan Payment Detail product")

  public Boolean getLoanPaymentDetails() {
    return loanPaymentDetails;
  }


  public void setLoanPaymentDetails(Boolean loanPaymentDetails) {
    
    
    
    this.loanPaymentDetails = loanPaymentDetails;
  }


  public CertifiedInstitution childInstitutions(List<ChildInstitution> childInstitutions) {
    
    
    
    
    this.childInstitutions = childInstitutions;
    return this;
  }

  public CertifiedInstitution addChildInstitutionsItem(ChildInstitution childInstitutionsItem) {
    if (this.childInstitutions == null) {
      this.childInstitutions = new ArrayList<>();
    }
    this.childInstitutions.add(childInstitutionsItem);
    return this;
  }

   /**
   * An array of child financial institutions
   * @return childInstitutions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array of child financial institutions")

  public List<ChildInstitution> getChildInstitutions() {
    return childInstitutions;
  }


  public void setChildInstitutions(List<ChildInstitution> childInstitutions) {
    
    
    
    this.childInstitutions = childInstitutions;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the CertifiedInstitution instance itself
   */
  public CertifiedInstitution putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CertifiedInstitution certifiedInstitution = (CertifiedInstitution) o;
    return Objects.equals(this.id, certifiedInstitution.id) &&
        Objects.equals(this.rssd, certifiedInstitution.rssd) &&
        Objects.equals(this.name, certifiedInstitution.name) &&
        Objects.equals(this.transAgg, certifiedInstitution.transAgg) &&
        Objects.equals(this.ach, certifiedInstitution.ach) &&
        Objects.equals(this.stateAgg, certifiedInstitution.stateAgg) &&
        Objects.equals(this.voi, certifiedInstitution.voi) &&
        Objects.equals(this.voa, certifiedInstitution.voa) &&
        Objects.equals(this.aha, certifiedInstitution.aha) &&
        Objects.equals(this.availBalance, certifiedInstitution.availBalance) &&
        Objects.equals(this.accountOwner, certifiedInstitution.accountOwner) &&
        Objects.equals(this.studentLoanData, certifiedInstitution.studentLoanData) &&
        Objects.equals(this.loanPaymentDetails, certifiedInstitution.loanPaymentDetails) &&
        Objects.equals(this.childInstitutions, certifiedInstitution.childInstitutions)&&
        Objects.equals(this.additionalProperties, certifiedInstitution.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, rssd, name, transAgg, ach, stateAgg, voi, voa, aha, availBalance, accountOwner, studentLoanData, loanPaymentDetails, childInstitutions, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CertifiedInstitution {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    rssd: ").append(toIndentedString(rssd)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    transAgg: ").append(toIndentedString(transAgg)).append("\n");
    sb.append("    ach: ").append(toIndentedString(ach)).append("\n");
    sb.append("    stateAgg: ").append(toIndentedString(stateAgg)).append("\n");
    sb.append("    voi: ").append(toIndentedString(voi)).append("\n");
    sb.append("    voa: ").append(toIndentedString(voa)).append("\n");
    sb.append("    aha: ").append(toIndentedString(aha)).append("\n");
    sb.append("    availBalance: ").append(toIndentedString(availBalance)).append("\n");
    sb.append("    accountOwner: ").append(toIndentedString(accountOwner)).append("\n");
    sb.append("    studentLoanData: ").append(toIndentedString(studentLoanData)).append("\n");
    sb.append("    loanPaymentDetails: ").append(toIndentedString(loanPaymentDetails)).append("\n");
    sb.append("    childInstitutions: ").append(toIndentedString(childInstitutions)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("rssd");
    openapiFields.add("name");
    openapiFields.add("transAgg");
    openapiFields.add("ach");
    openapiFields.add("stateAgg");
    openapiFields.add("voi");
    openapiFields.add("voa");
    openapiFields.add("aha");
    openapiFields.add("availBalance");
    openapiFields.add("accountOwner");
    openapiFields.add("studentLoanData");
    openapiFields.add("loanPaymentDetails");
    openapiFields.add("childInstitutions");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("transAgg");
    openapiRequiredFields.add("ach");
    openapiRequiredFields.add("stateAgg");
    openapiRequiredFields.add("voi");
    openapiRequiredFields.add("voa");
    openapiRequiredFields.add("aha");
    openapiRequiredFields.add("availBalance");
    openapiRequiredFields.add("accountOwner");
    openapiRequiredFields.add("studentLoanData");
    openapiRequiredFields.add("loanPaymentDetails");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CertifiedInstitution
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CertifiedInstitution.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CertifiedInstitution is not found in the empty JSON string", CertifiedInstitution.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CertifiedInstitution.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (jsonObj.get("childInstitutions") != null && !jsonObj.get("childInstitutions").isJsonNull()) {
        JsonArray jsonArraychildInstitutions = jsonObj.getAsJsonArray("childInstitutions");
        if (jsonArraychildInstitutions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("childInstitutions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `childInstitutions` to be an array in the JSON string but got `%s`", jsonObj.get("childInstitutions").toString()));
          }

          // validate the optional field `childInstitutions` (array)
          for (int i = 0; i < jsonArraychildInstitutions.size(); i++) {
            ChildInstitution.validateJsonObject(jsonArraychildInstitutions.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CertifiedInstitution.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CertifiedInstitution' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CertifiedInstitution> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CertifiedInstitution.class));

       return (TypeAdapter<T>) new TypeAdapter<CertifiedInstitution>() {
           @Override
           public void write(JsonWriter out, CertifiedInstitution value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public CertifiedInstitution read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             CertifiedInstitution instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CertifiedInstitution given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CertifiedInstitution
  * @throws IOException if the JSON string is invalid with respect to CertifiedInstitution
  */
  public static CertifiedInstitution fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CertifiedInstitution.class);
  }

 /**
  * Convert an instance of CertifiedInstitution to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

