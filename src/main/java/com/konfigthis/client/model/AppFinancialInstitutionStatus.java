/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.16.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * The registration status fields for each specific OAuth financial institution
 */
@ApiModel(description = "The registration status fields for each specific OAuth financial institution")@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class AppFinancialInstitutionStatus {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Long id;

  public static final String SERIALIZED_NAME_ABBRV_NAME = "abbrvName";
  @SerializedName(SERIALIZED_NAME_ABBRV_NAME)
  private String abbrvName;

  public static final String SERIALIZED_NAME_LOGO_URL = "logoUrl";
  @SerializedName(SERIALIZED_NAME_LOGO_URL)
  private String logoUrl;

  public static final String SERIALIZED_NAME_DECRYPTION_KEY_ACTIVATED = "decryptionKeyActivated";
  @SerializedName(SERIALIZED_NAME_DECRYPTION_KEY_ACTIVATED)
  private Boolean decryptionKeyActivated;

  public static final String SERIALIZED_NAME_CREATED_DATE = "createdDate";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE)
  private Long createdDate;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_DATE = "lastModifiedDate";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_DATE)
  private Long lastModifiedDate;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private Boolean status;

  public AppFinancialInstitutionStatus() {
  }

  public AppFinancialInstitutionStatus id(Long id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * The ID of a financial institution, represented as a number
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "4222", required = true, value = "The ID of a financial institution, represented as a number")

  public Long getId() {
    return id;
  }


  public void setId(Long id) {
    
    
    
    this.id = id;
  }


  public AppFinancialInstitutionStatus abbrvName(String abbrvName) {
    
    
    
    
    this.abbrvName = abbrvName;
    return this;
  }

   /**
   * The application&#39;s abbreviated name
   * @return abbrvName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "VAEJ", value = "The application's abbreviated name")

  public String getAbbrvName() {
    return abbrvName;
  }


  public void setAbbrvName(String abbrvName) {
    
    
    
    this.abbrvName = abbrvName;
  }


  public AppFinancialInstitutionStatus logoUrl(String logoUrl) {
    
    
    
    
    this.logoUrl = logoUrl;
    return this;
  }

   /**
   * An URL to a logo file
   * @return logoUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://prod-direct-integration-client.s3.us-west-2.amazonaws.com/976521f99-7b36-4b3b-a3e0-faff9545836d/102224/90x90.png", value = "An URL to a logo file")

  public String getLogoUrl() {
    return logoUrl;
  }


  public void setLogoUrl(String logoUrl) {
    
    
    
    this.logoUrl = logoUrl;
  }


  public AppFinancialInstitutionStatus decryptionKeyActivated(Boolean decryptionKeyActivated) {
    
    
    
    
    this.decryptionKeyActivated = decryptionKeyActivated;
    return this;
  }

   /**
   * Status of decryption keys for financial institution app registration
   * @return decryptionKeyActivated
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "false", required = true, value = "Status of decryption keys for financial institution app registration")

  public Boolean getDecryptionKeyActivated() {
    return decryptionKeyActivated;
  }


  public void setDecryptionKeyActivated(Boolean decryptionKeyActivated) {
    
    
    
    this.decryptionKeyActivated = decryptionKeyActivated;
  }


  public AppFinancialInstitutionStatus createdDate(Long createdDate) {
    
    
    
    
    this.createdDate = createdDate;
    return this;
  }

   /**
   * A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return createdDate
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "1607450357", required = true, value = "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).")

  public Long getCreatedDate() {
    return createdDate;
  }


  public void setCreatedDate(Long createdDate) {
    
    
    
    this.createdDate = createdDate;
  }


  public AppFinancialInstitutionStatus lastModifiedDate(Long lastModifiedDate) {
    
    
    
    
    this.lastModifiedDate = lastModifiedDate;
    return this;
  }

   /**
   * A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return lastModifiedDate
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "1607450357", required = true, value = "A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).")

  public Long getLastModifiedDate() {
    return lastModifiedDate;
  }


  public void setLastModifiedDate(Long lastModifiedDate) {
    
    
    
    this.lastModifiedDate = lastModifiedDate;
  }


  public AppFinancialInstitutionStatus status(Boolean status) {
    
    
    
    
    this.status = status;
    return this;
  }

   /**
   * \&quot;false\&quot; indicates registration is still pending
   * @return status
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "true", required = true, value = "\"false\" indicates registration is still pending")

  public Boolean getStatus() {
    return status;
  }


  public void setStatus(Boolean status) {
    
    
    
    this.status = status;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the AppFinancialInstitutionStatus instance itself
   */
  public AppFinancialInstitutionStatus putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppFinancialInstitutionStatus appFinancialInstitutionStatus = (AppFinancialInstitutionStatus) o;
    return Objects.equals(this.id, appFinancialInstitutionStatus.id) &&
        Objects.equals(this.abbrvName, appFinancialInstitutionStatus.abbrvName) &&
        Objects.equals(this.logoUrl, appFinancialInstitutionStatus.logoUrl) &&
        Objects.equals(this.decryptionKeyActivated, appFinancialInstitutionStatus.decryptionKeyActivated) &&
        Objects.equals(this.createdDate, appFinancialInstitutionStatus.createdDate) &&
        Objects.equals(this.lastModifiedDate, appFinancialInstitutionStatus.lastModifiedDate) &&
        Objects.equals(this.status, appFinancialInstitutionStatus.status)&&
        Objects.equals(this.additionalProperties, appFinancialInstitutionStatus.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, abbrvName, logoUrl, decryptionKeyActivated, createdDate, lastModifiedDate, status, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppFinancialInstitutionStatus {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    abbrvName: ").append(toIndentedString(abbrvName)).append("\n");
    sb.append("    logoUrl: ").append(toIndentedString(logoUrl)).append("\n");
    sb.append("    decryptionKeyActivated: ").append(toIndentedString(decryptionKeyActivated)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    lastModifiedDate: ").append(toIndentedString(lastModifiedDate)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("abbrvName");
    openapiFields.add("logoUrl");
    openapiFields.add("decryptionKeyActivated");
    openapiFields.add("createdDate");
    openapiFields.add("lastModifiedDate");
    openapiFields.add("status");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("decryptionKeyActivated");
    openapiRequiredFields.add("createdDate");
    openapiRequiredFields.add("lastModifiedDate");
    openapiRequiredFields.add("status");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AppFinancialInstitutionStatus
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!AppFinancialInstitutionStatus.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AppFinancialInstitutionStatus is not found in the empty JSON string", AppFinancialInstitutionStatus.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AppFinancialInstitutionStatus.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if ((jsonObj.get("abbrvName") != null && !jsonObj.get("abbrvName").isJsonNull()) && !jsonObj.get("abbrvName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `abbrvName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("abbrvName").toString()));
      }
      if ((jsonObj.get("logoUrl") != null && !jsonObj.get("logoUrl").isJsonNull()) && !jsonObj.get("logoUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logoUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logoUrl").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AppFinancialInstitutionStatus.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AppFinancialInstitutionStatus' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AppFinancialInstitutionStatus> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AppFinancialInstitutionStatus.class));

       return (TypeAdapter<T>) new TypeAdapter<AppFinancialInstitutionStatus>() {
           @Override
           public void write(JsonWriter out, AppFinancialInstitutionStatus value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public AppFinancialInstitutionStatus read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             AppFinancialInstitutionStatus instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AppFinancialInstitutionStatus given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AppFinancialInstitutionStatus
  * @throws IOException if the JSON string is invalid with respect to AppFinancialInstitutionStatus
  */
  public static AppFinancialInstitutionStatus fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AppFinancialInstitutionStatus.class);
  }

 /**
  * Convert an instance of AppFinancialInstitutionStatus to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

