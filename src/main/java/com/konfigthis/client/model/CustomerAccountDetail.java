/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.16.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * Additional customer account details. Not all data points will return for each account type. You can see the account type that each data point will return for in descriptions. The data point are also subject to availability by the institution.
 */
@ApiModel(description = "Additional customer account details. Not all data points will return for each account type. You can see the account type that each data point will return for in descriptions. The data point are also subject to availability by the institution.")@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class CustomerAccountDetail {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DATE_AS_OF = "dateAsOf";
  @SerializedName(SERIALIZED_NAME_DATE_AS_OF)
  private Long dateAsOf;

  public static final String SERIALIZED_NAME_AVAILABLE_BALANCE_AMOUNT = "availableBalanceAmount";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_BALANCE_AMOUNT)
  private Double availableBalanceAmount;

  public static final String SERIALIZED_NAME_OPEN_DATE = "openDate";
  @SerializedName(SERIALIZED_NAME_OPEN_DATE)
  private Long openDate;

  public static final String SERIALIZED_NAME_PERIOD_START_DATE = "periodStartDate";
  @SerializedName(SERIALIZED_NAME_PERIOD_START_DATE)
  private Long periodStartDate;

  public static final String SERIALIZED_NAME_PERIOD_END_DATE = "periodEndDate";
  @SerializedName(SERIALIZED_NAME_PERIOD_END_DATE)
  private Long periodEndDate;

  public static final String SERIALIZED_NAME_PERIOD_INTEREST_RATE = "periodInterestRate";
  @SerializedName(SERIALIZED_NAME_PERIOD_INTEREST_RATE)
  private Double periodInterestRate;

  public static final String SERIALIZED_NAME_PERIOD_DEPOSIT_AMOUNT = "periodDepositAmount";
  @SerializedName(SERIALIZED_NAME_PERIOD_DEPOSIT_AMOUNT)
  private Double periodDepositAmount;

  public static final String SERIALIZED_NAME_PERIOD_INTEREST_AMOUNT = "periodInterestAmount";
  @SerializedName(SERIALIZED_NAME_PERIOD_INTEREST_AMOUNT)
  private Double periodInterestAmount;

  public static final String SERIALIZED_NAME_INTEREST_YTD_AMOUNT = "interestYtdAmount";
  @SerializedName(SERIALIZED_NAME_INTEREST_YTD_AMOUNT)
  private Double interestYtdAmount;

  public static final String SERIALIZED_NAME_INTEREST_PRIOR_YTD_AMOUNT = "interestPriorYtdAmount";
  @SerializedName(SERIALIZED_NAME_INTEREST_PRIOR_YTD_AMOUNT)
  private Double interestPriorYtdAmount;

  public static final String SERIALIZED_NAME_MATURITY_DATE = "maturityDate";
  @SerializedName(SERIALIZED_NAME_MATURITY_DATE)
  private Long maturityDate;

  public static final String SERIALIZED_NAME_INTEREST_RATE = "interestRate";
  @SerializedName(SERIALIZED_NAME_INTEREST_RATE)
  private String interestRate;

  public static final String SERIALIZED_NAME_CREDIT_AVAILABLE_AMOUNT = "creditAvailableAmount";
  @SerializedName(SERIALIZED_NAME_CREDIT_AVAILABLE_AMOUNT)
  private Double creditAvailableAmount;

  public static final String SERIALIZED_NAME_CREDIT_MAX_AMOUNT = "creditMaxAmount";
  @SerializedName(SERIALIZED_NAME_CREDIT_MAX_AMOUNT)
  private Double creditMaxAmount;

  public static final String SERIALIZED_NAME_CASH_ADVANCE_AVAILABLE_AMOUNT = "cashAdvanceAvailableAmount";
  @SerializedName(SERIALIZED_NAME_CASH_ADVANCE_AVAILABLE_AMOUNT)
  private Double cashAdvanceAvailableAmount;

  public static final String SERIALIZED_NAME_CASH_ADVANCE_MAX_AMOUNT = "cashAdvanceMaxAmount";
  @SerializedName(SERIALIZED_NAME_CASH_ADVANCE_MAX_AMOUNT)
  private Double cashAdvanceMaxAmount;

  public static final String SERIALIZED_NAME_CASH_ADVANCE_BALANCE = "cashAdvanceBalance";
  @SerializedName(SERIALIZED_NAME_CASH_ADVANCE_BALANCE)
  private Double cashAdvanceBalance;

  public static final String SERIALIZED_NAME_CASH_ADVANCE_INTEREST_RATE = "cashAdvanceInterestRate";
  @SerializedName(SERIALIZED_NAME_CASH_ADVANCE_INTEREST_RATE)
  private Double cashAdvanceInterestRate;

  public static final String SERIALIZED_NAME_CURRENT_BALANCE = "currentBalance";
  @SerializedName(SERIALIZED_NAME_CURRENT_BALANCE)
  private Double currentBalance;

  public static final String SERIALIZED_NAME_PAYMENT_MIN_AMOUNT = "paymentMinAmount";
  @SerializedName(SERIALIZED_NAME_PAYMENT_MIN_AMOUNT)
  private Double paymentMinAmount;

  public static final String SERIALIZED_NAME_PAYMENT_DUE_DATE = "paymentDueDate";
  @SerializedName(SERIALIZED_NAME_PAYMENT_DUE_DATE)
  private Long paymentDueDate;

  public static final String SERIALIZED_NAME_PREVIOUS_BALANCE = "previousBalance";
  @SerializedName(SERIALIZED_NAME_PREVIOUS_BALANCE)
  private Double previousBalance;

  public static final String SERIALIZED_NAME_STATEMENT_START_DATE = "statementStartDate";
  @SerializedName(SERIALIZED_NAME_STATEMENT_START_DATE)
  private Long statementStartDate;

  public static final String SERIALIZED_NAME_STATEMENT_END_DATE = "statementEndDate";
  @SerializedName(SERIALIZED_NAME_STATEMENT_END_DATE)
  private Long statementEndDate;

  public static final String SERIALIZED_NAME_STATEMENT_PURCHASE_AMOUNT = "statementPurchaseAmount";
  @SerializedName(SERIALIZED_NAME_STATEMENT_PURCHASE_AMOUNT)
  private Double statementPurchaseAmount;

  public static final String SERIALIZED_NAME_STATEMENT_FINANCE_AMOUNT = "statementFinanceAmount";
  @SerializedName(SERIALIZED_NAME_STATEMENT_FINANCE_AMOUNT)
  private Double statementFinanceAmount;

  public static final String SERIALIZED_NAME_STATEMENT_CREDIT_AMOUNT = "statementCreditAmount";
  @SerializedName(SERIALIZED_NAME_STATEMENT_CREDIT_AMOUNT)
  private Double statementCreditAmount;

  public static final String SERIALIZED_NAME_REWARD_EARNED_BALANCE = "rewardEarnedBalance";
  @SerializedName(SERIALIZED_NAME_REWARD_EARNED_BALANCE)
  private Integer rewardEarnedBalance;

  public static final String SERIALIZED_NAME_PAST_DUE_AMOUNT = "pastDueAmount";
  @SerializedName(SERIALIZED_NAME_PAST_DUE_AMOUNT)
  private Double pastDueAmount;

  public static final String SERIALIZED_NAME_LAST_PAYMENT_AMOUNT = "lastPaymentAmount";
  @SerializedName(SERIALIZED_NAME_LAST_PAYMENT_AMOUNT)
  private Double lastPaymentAmount;

  public static final String SERIALIZED_NAME_LAST_PAYMENT_DATE = "lastPaymentDate";
  @SerializedName(SERIALIZED_NAME_LAST_PAYMENT_DATE)
  private Long lastPaymentDate;

  public static final String SERIALIZED_NAME_STATEMENT_CLOSE_BALANCE = "statementCloseBalance";
  @SerializedName(SERIALIZED_NAME_STATEMENT_CLOSE_BALANCE)
  private Double statementCloseBalance;

  public static final String SERIALIZED_NAME_TERM_OF_ML = "termOfMl";
  @SerializedName(SERIALIZED_NAME_TERM_OF_ML)
  private String termOfMl;

  public static final String SERIALIZED_NAME_ML_HOLDER_NAME = "mlHolderName";
  @SerializedName(SERIALIZED_NAME_ML_HOLDER_NAME)
  private String mlHolderName;

  public static final String SERIALIZED_NAME_LATE_FEE_AMOUNT = "lateFeeAmount";
  @SerializedName(SERIALIZED_NAME_LATE_FEE_AMOUNT)
  private Double lateFeeAmount;

  public static final String SERIALIZED_NAME_PAYOFF_AMOUNT = "payoffAmount";
  @SerializedName(SERIALIZED_NAME_PAYOFF_AMOUNT)
  private Double payoffAmount;

  public static final String SERIALIZED_NAME_PAYOFF_AMOUNT_DATE = "payoffAmountDate";
  @SerializedName(SERIALIZED_NAME_PAYOFF_AMOUNT_DATE)
  private Long payoffAmountDate;

  public static final String SERIALIZED_NAME_ORIGINAL_MATURITY_DATE = "originalMaturityDate";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_MATURITY_DATE)
  private Long originalMaturityDate;

  public static final String SERIALIZED_NAME_PRINCIPAL_BALANCE = "principalBalance";
  @SerializedName(SERIALIZED_NAME_PRINCIPAL_BALANCE)
  private Double principalBalance;

  public static final String SERIALIZED_NAME_ESCROW_BALANCE = "escrowBalance";
  @SerializedName(SERIALIZED_NAME_ESCROW_BALANCE)
  private Double escrowBalance;

  public static final String SERIALIZED_NAME_INTEREST_PERIOD = "interestPeriod";
  @SerializedName(SERIALIZED_NAME_INTEREST_PERIOD)
  private String interestPeriod;

  public static final String SERIALIZED_NAME_INITIAL_ML_AMOUNT = "initialMlAmount";
  @SerializedName(SERIALIZED_NAME_INITIAL_ML_AMOUNT)
  private Double initialMlAmount;

  public static final String SERIALIZED_NAME_INITIAL_ML_DATE = "initialMlDate";
  @SerializedName(SERIALIZED_NAME_INITIAL_ML_DATE)
  private Long initialMlDate;

  public static final String SERIALIZED_NAME_NEXT_PAYMENT_PRINCIPAL_AMOUNT = "nextPaymentPrincipalAmount";
  @SerializedName(SERIALIZED_NAME_NEXT_PAYMENT_PRINCIPAL_AMOUNT)
  private Double nextPaymentPrincipalAmount;

  public static final String SERIALIZED_NAME_NEXT_PAYMENT_INTEREST_AMOUNT = "nextPaymentInterestAmount";
  @SerializedName(SERIALIZED_NAME_NEXT_PAYMENT_INTEREST_AMOUNT)
  private Double nextPaymentInterestAmount;

  public static final String SERIALIZED_NAME_NEXT_PAYMENT = "nextPayment";
  @SerializedName(SERIALIZED_NAME_NEXT_PAYMENT)
  private Double nextPayment;

  public static final String SERIALIZED_NAME_NEXT_PAYMENT_DATE = "nextPaymentDate";
  @SerializedName(SERIALIZED_NAME_NEXT_PAYMENT_DATE)
  private Long nextPaymentDate;

  public static final String SERIALIZED_NAME_LAST_PAYMENT_DUE_DATE = "lastPaymentDueDate";
  @SerializedName(SERIALIZED_NAME_LAST_PAYMENT_DUE_DATE)
  private Long lastPaymentDueDate;

  public static final String SERIALIZED_NAME_LAST_PAYMENT_RECEIVE_DATE = "lastPaymentReceiveDate";
  @SerializedName(SERIALIZED_NAME_LAST_PAYMENT_RECEIVE_DATE)
  private Long lastPaymentReceiveDate;

  public static final String SERIALIZED_NAME_LAST_PAYMENT_PRINCIPAL_AMOUNT = "lastPaymentPrincipalAmount";
  @SerializedName(SERIALIZED_NAME_LAST_PAYMENT_PRINCIPAL_AMOUNT)
  private Double lastPaymentPrincipalAmount;

  public static final String SERIALIZED_NAME_LAST_PAYMENT_INTEREST_AMOUNT = "lastPaymentInterestAmount";
  @SerializedName(SERIALIZED_NAME_LAST_PAYMENT_INTEREST_AMOUNT)
  private Double lastPaymentInterestAmount;

  public static final String SERIALIZED_NAME_LAST_PAYMENT_ESCROW_AMOUNT = "lastPaymentEscrowAmount";
  @SerializedName(SERIALIZED_NAME_LAST_PAYMENT_ESCROW_AMOUNT)
  private Double lastPaymentEscrowAmount;

  public static final String SERIALIZED_NAME_LAST_PAYMENT_LAST_FEE_AMOUNT = "lastPaymentLastFeeAmount";
  @SerializedName(SERIALIZED_NAME_LAST_PAYMENT_LAST_FEE_AMOUNT)
  private Double lastPaymentLastFeeAmount;

  public static final String SERIALIZED_NAME_LAST_PAYMENT_LATE_CHARGE = "lastPaymentLateCharge";
  @SerializedName(SERIALIZED_NAME_LAST_PAYMENT_LATE_CHARGE)
  private Double lastPaymentLateCharge;

  public static final String SERIALIZED_NAME_YTD_PRINCIPAL_PAID = "ytdPrincipalPaid";
  @SerializedName(SERIALIZED_NAME_YTD_PRINCIPAL_PAID)
  private Double ytdPrincipalPaid;

  public static final String SERIALIZED_NAME_YTD_INTEREST_PAID = "ytdInterestPaid";
  @SerializedName(SERIALIZED_NAME_YTD_INTEREST_PAID)
  private Double ytdInterestPaid;

  public static final String SERIALIZED_NAME_YTD_INSURANCE_PAID = "ytdInsurancePaid";
  @SerializedName(SERIALIZED_NAME_YTD_INSURANCE_PAID)
  private Double ytdInsurancePaid;

  public static final String SERIALIZED_NAME_YTD_TAX_PAID = "ytdTaxPaid";
  @SerializedName(SERIALIZED_NAME_YTD_TAX_PAID)
  private Double ytdTaxPaid;

  public static final String SERIALIZED_NAME_AUTO_PAY_ENROLLED = "autoPayEnrolled";
  @SerializedName(SERIALIZED_NAME_AUTO_PAY_ENROLLED)
  private Boolean autoPayEnrolled;

  public static final String SERIALIZED_NAME_MARGIN_ALLOWED = "marginAllowed";
  @SerializedName(SERIALIZED_NAME_MARGIN_ALLOWED)
  private Boolean marginAllowed;

  public static final String SERIALIZED_NAME_CASH_ACCOUNT_ALLOWED = "cashAccountAllowed";
  @SerializedName(SERIALIZED_NAME_CASH_ACCOUNT_ALLOWED)
  private Boolean cashAccountAllowed;

  public static final String SERIALIZED_NAME_COLLATERAL = "collateral";
  @SerializedName(SERIALIZED_NAME_COLLATERAL)
  private String collateral;

  public static final String SERIALIZED_NAME_CURRENT_SCHOOL = "currentSchool";
  @SerializedName(SERIALIZED_NAME_CURRENT_SCHOOL)
  private String currentSchool;

  public static final String SERIALIZED_NAME_FIRST_PAYMENT_DATE = "firstPaymentDate";
  @SerializedName(SERIALIZED_NAME_FIRST_PAYMENT_DATE)
  private Long firstPaymentDate;

  public static final String SERIALIZED_NAME_FIRST_MORTGAGE = "firstMortgage";
  @SerializedName(SERIALIZED_NAME_FIRST_MORTGAGE)
  private Boolean firstMortgage;

  public static final String SERIALIZED_NAME_LOAN_PAYMENT_FREQ = "loanPaymentFreq";
  @SerializedName(SERIALIZED_NAME_LOAN_PAYMENT_FREQ)
  private String loanPaymentFreq;

  public static final String SERIALIZED_NAME_ORIGINAL_SCHOOL = "originalSchool";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_SCHOOL)
  private String originalSchool;

  public static final String SERIALIZED_NAME_RECURRING_PAYMENT_AMOUNT = "recurringPaymentAmount";
  @SerializedName(SERIALIZED_NAME_RECURRING_PAYMENT_AMOUNT)
  private Double recurringPaymentAmount;

  public static final String SERIALIZED_NAME_LENDER = "lender";
  @SerializedName(SERIALIZED_NAME_LENDER)
  private String lender;

  public static final String SERIALIZED_NAME_ENDING_BALANCE_AMOUNT = "endingBalanceAmount";
  @SerializedName(SERIALIZED_NAME_ENDING_BALANCE_AMOUNT)
  private Double endingBalanceAmount;

  public static final String SERIALIZED_NAME_LOAN_TERM_TYPE = "loanTermType";
  @SerializedName(SERIALIZED_NAME_LOAN_TERM_TYPE)
  private String loanTermType;

  public static final String SERIALIZED_NAME_PAYMENTS_MADE = "paymentsMade";
  @SerializedName(SERIALIZED_NAME_PAYMENTS_MADE)
  private Integer paymentsMade;

  public static final String SERIALIZED_NAME_BALLOON_AMOUNT = "balloonAmount";
  @SerializedName(SERIALIZED_NAME_BALLOON_AMOUNT)
  private Double balloonAmount;

  public static final String SERIALIZED_NAME_PROJECTED_INTEREST = "projectedInterest";
  @SerializedName(SERIALIZED_NAME_PROJECTED_INTEREST)
  private Double projectedInterest;

  public static final String SERIALIZED_NAME_INTEREST_PAID_LTD = "interestPaidLtd";
  @SerializedName(SERIALIZED_NAME_INTEREST_PAID_LTD)
  private Double interestPaidLtd;

  public static final String SERIALIZED_NAME_INTEREST_RATE_TYPE = "interestRateType";
  @SerializedName(SERIALIZED_NAME_INTEREST_RATE_TYPE)
  private String interestRateType;

  public static final String SERIALIZED_NAME_LOAN_PAYMENT_TYPE = "loanPaymentType";
  @SerializedName(SERIALIZED_NAME_LOAN_PAYMENT_TYPE)
  private String loanPaymentType;

  public static final String SERIALIZED_NAME_REPAYMENT_PLAN = "repaymentPlan";
  @SerializedName(SERIALIZED_NAME_REPAYMENT_PLAN)
  private String repaymentPlan;

  public static final String SERIALIZED_NAME_PAYMENTS_REMAINING = "paymentsRemaining";
  @SerializedName(SERIALIZED_NAME_PAYMENTS_REMAINING)
  private Integer paymentsRemaining;

  public static final String SERIALIZED_NAME_MARGIN_BALANCE = "marginBalance";
  @SerializedName(SERIALIZED_NAME_MARGIN_BALANCE)
  private Double marginBalance;

  public static final String SERIALIZED_NAME_SHORT_BALANCE = "shortBalance";
  @SerializedName(SERIALIZED_NAME_SHORT_BALANCE)
  private Double shortBalance;

  public static final String SERIALIZED_NAME_AVAILABLE_CASH_BALANCE = "availableCashBalance";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_CASH_BALANCE)
  private Double availableCashBalance;

  public static final String SERIALIZED_NAME_MATURITY_VALUE_AMOUNT = "maturityValueAmount";
  @SerializedName(SERIALIZED_NAME_MATURITY_VALUE_AMOUNT)
  private Double maturityValueAmount;

  public static final String SERIALIZED_NAME_VESTED_BALANCE = "vestedBalance";
  @SerializedName(SERIALIZED_NAME_VESTED_BALANCE)
  private Double vestedBalance;

  public static final String SERIALIZED_NAME_EMP_MATCH_AMOUNT = "empMatchAmount";
  @SerializedName(SERIALIZED_NAME_EMP_MATCH_AMOUNT)
  private Double empMatchAmount;

  public static final String SERIALIZED_NAME_EMP_PRETAX_CONTRIB_AMOUNT = "empPretaxContribAmount";
  @SerializedName(SERIALIZED_NAME_EMP_PRETAX_CONTRIB_AMOUNT)
  private Double empPretaxContribAmount;

  public static final String SERIALIZED_NAME_EMP_PRETAX_CONTRIB_AMOUNT_YTD = "empPretaxContribAmountYtd";
  @SerializedName(SERIALIZED_NAME_EMP_PRETAX_CONTRIB_AMOUNT_YTD)
  private Double empPretaxContribAmountYtd;

  public static final String SERIALIZED_NAME_CONTRIB_TOTAL_YTD = "contribTotalYtd";
  @SerializedName(SERIALIZED_NAME_CONTRIB_TOTAL_YTD)
  private Double contribTotalYtd;

  public static final String SERIALIZED_NAME_CASH_BALANCE_AMOUNT = "cashBalanceAmount";
  @SerializedName(SERIALIZED_NAME_CASH_BALANCE_AMOUNT)
  private Double cashBalanceAmount;

  public static final String SERIALIZED_NAME_PRE_TAX_AMOUNT = "preTaxAmount";
  @SerializedName(SERIALIZED_NAME_PRE_TAX_AMOUNT)
  private Double preTaxAmount;

  public static final String SERIALIZED_NAME_AFTER_TAX_AMOUNT = "afterTaxAmount";
  @SerializedName(SERIALIZED_NAME_AFTER_TAX_AMOUNT)
  private Double afterTaxAmount;

  public static final String SERIALIZED_NAME_MATCH_AMOUNT = "matchAmount";
  @SerializedName(SERIALIZED_NAME_MATCH_AMOUNT)
  private Double matchAmount;

  public static final String SERIALIZED_NAME_PROFIT_SHARING_AMOUNT = "profitSharingAmount";
  @SerializedName(SERIALIZED_NAME_PROFIT_SHARING_AMOUNT)
  private Double profitSharingAmount;

  public static final String SERIALIZED_NAME_ROLLOVER_AMOUNT = "rolloverAmount";
  @SerializedName(SERIALIZED_NAME_ROLLOVER_AMOUNT)
  private Double rolloverAmount;

  public static final String SERIALIZED_NAME_OTHER_VEST_AMOUNT = "otherVestAmount";
  @SerializedName(SERIALIZED_NAME_OTHER_VEST_AMOUNT)
  private Double otherVestAmount;

  public static final String SERIALIZED_NAME_OTHER_NONVEST_AMOUNT = "otherNonvestAmount";
  @SerializedName(SERIALIZED_NAME_OTHER_NONVEST_AMOUNT)
  private Double otherNonvestAmount;

  public static final String SERIALIZED_NAME_CURRENT_LOAN_BALANCE = "currentLoanBalance";
  @SerializedName(SERIALIZED_NAME_CURRENT_LOAN_BALANCE)
  private Double currentLoanBalance;

  public static final String SERIALIZED_NAME_LOAN_RATE = "loanRate";
  @SerializedName(SERIALIZED_NAME_LOAN_RATE)
  private Double loanRate;

  public static final String SERIALIZED_NAME_BUY_POWER = "buyPower";
  @SerializedName(SERIALIZED_NAME_BUY_POWER)
  private Double buyPower;

  public static final String SERIALIZED_NAME_ROLLOVER_LTD = "rolloverLtd";
  @SerializedName(SERIALIZED_NAME_ROLLOVER_LTD)
  private Double rolloverLtd;

  public static final String SERIALIZED_NAME_LOAN_AWARD_ID = "loanAwardId";
  @SerializedName(SERIALIZED_NAME_LOAN_AWARD_ID)
  private String loanAwardId;

  public static final String SERIALIZED_NAME_ORIGINAL_INTEREST_RATE = "originalInterestRate";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_INTEREST_RATE)
  private Double originalInterestRate;

  public static final String SERIALIZED_NAME_GUARANTOR = "guarantor";
  @SerializedName(SERIALIZED_NAME_GUARANTOR)
  private String guarantor;

  public static final String SERIALIZED_NAME_OWNER = "owner";
  @SerializedName(SERIALIZED_NAME_OWNER)
  private String owner;

  public static final String SERIALIZED_NAME_INTEREST_SUBSIDY_TYPE = "interestSubsidyType";
  @SerializedName(SERIALIZED_NAME_INTEREST_SUBSIDY_TYPE)
  private String interestSubsidyType;

  public static final String SERIALIZED_NAME_INTEREST_BALANCE = "interestBalance";
  @SerializedName(SERIALIZED_NAME_INTEREST_BALANCE)
  private Double interestBalance;

  public static final String SERIALIZED_NAME_REMAINING_TERM_OF_ML = "remainingTermOfMl";
  @SerializedName(SERIALIZED_NAME_REMAINING_TERM_OF_ML)
  private Double remainingTermOfMl;

  public static final String SERIALIZED_NAME_INITIAL_INTEREST_RATE = "initialInterestRate";
  @SerializedName(SERIALIZED_NAME_INITIAL_INTEREST_RATE)
  private Double initialInterestRate;

  public static final String SERIALIZED_NAME_FEES_BALANCE = "feesBalance";
  @SerializedName(SERIALIZED_NAME_FEES_BALANCE)
  private Double feesBalance;

  public static final String SERIALIZED_NAME_LOAN_YTD_INTEREST_PAID = "loanYtdInterestPaid";
  @SerializedName(SERIALIZED_NAME_LOAN_YTD_INTEREST_PAID)
  private Double loanYtdInterestPaid;

  public static final String SERIALIZED_NAME_LOAN_YTD_FEES_PAID = "loanYtdFeesPaid";
  @SerializedName(SERIALIZED_NAME_LOAN_YTD_FEES_PAID)
  private Double loanYtdFeesPaid;

  public static final String SERIALIZED_NAME_LOAN_YTD_PRINCIPAL_PAID = "loanYtdPrincipalPaid";
  @SerializedName(SERIALIZED_NAME_LOAN_YTD_PRINCIPAL_PAID)
  private Double loanYtdPrincipalPaid;

  public static final String SERIALIZED_NAME_LOAN_STATUS = "loanStatus";
  @SerializedName(SERIALIZED_NAME_LOAN_STATUS)
  private String loanStatus;

  public static final String SERIALIZED_NAME_LOAN_STATUS_START_DATE = "loanStatusStartDate";
  @SerializedName(SERIALIZED_NAME_LOAN_STATUS_START_DATE)
  private Long loanStatusStartDate;

  public static final String SERIALIZED_NAME_LOAN_STATUS_END_DATE = "loanStatusEndDate";
  @SerializedName(SERIALIZED_NAME_LOAN_STATUS_END_DATE)
  private Long loanStatusEndDate;

  public static final String SERIALIZED_NAME_WEIGHTED_INTEREST_RATE = "weightedInterestRate";
  @SerializedName(SERIALIZED_NAME_WEIGHTED_INTEREST_RATE)
  private Double weightedInterestRate;

  public static final String SERIALIZED_NAME_REPAYMENT_PLAN_START_DATE = "repaymentPlanStartDate";
  @SerializedName(SERIALIZED_NAME_REPAYMENT_PLAN_START_DATE)
  private Long repaymentPlanStartDate;

  public static final String SERIALIZED_NAME_REPAYMENT_PLAN_END_DATE = "repaymentPlanEndDate";
  @SerializedName(SERIALIZED_NAME_REPAYMENT_PLAN_END_DATE)
  private Long repaymentPlanEndDate;

  public static final String SERIALIZED_NAME_EXPECTED_PAYOFF_DATE = "expectedPayoffDate";
  @SerializedName(SERIALIZED_NAME_EXPECTED_PAYOFF_DATE)
  private Long expectedPayoffDate;

  public static final String SERIALIZED_NAME_OUT_OF_SCHOOL_DATE = "outOfSchoolDate";
  @SerializedName(SERIALIZED_NAME_OUT_OF_SCHOOL_DATE)
  private Long outOfSchoolDate;

  public static final String SERIALIZED_NAME_CONVERT_TO_REPAYMENT = "convertToRepayment";
  @SerializedName(SERIALIZED_NAME_CONVERT_TO_REPAYMENT)
  private Long convertToRepayment;

  public static final String SERIALIZED_NAME_DAYS_DELINQUENT = "daysDelinquent";
  @SerializedName(SERIALIZED_NAME_DAYS_DELINQUENT)
  private Integer daysDelinquent;

  public static final String SERIALIZED_NAME_TOTAL_PRINCIPAL_PAID = "totalPrincipalPaid";
  @SerializedName(SERIALIZED_NAME_TOTAL_PRINCIPAL_PAID)
  private Double totalPrincipalPaid;

  public static final String SERIALIZED_NAME_TOTAL_INTEREST_PAID = "totalInterestPaid";
  @SerializedName(SERIALIZED_NAME_TOTAL_INTEREST_PAID)
  private Double totalInterestPaid;

  public static final String SERIALIZED_NAME_TOTAL_AMOUNT_PAID = "totalAmountPaid";
  @SerializedName(SERIALIZED_NAME_TOTAL_AMOUNT_PAID)
  private Double totalAmountPaid;

  public CustomerAccountDetail() {
  }

  public CustomerAccountDetail description(String description) {
    
    
    
    
    this.description = description;
    return this;
  }

   /**
   * (Mortgage/Loan) Description of loan
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "a description", value = "(Mortgage/Loan) Description of loan")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    
    
    
    this.description = description;
  }


  public CustomerAccountDetail dateAsOf(Long dateAsOf) {
    
    
    
    
    this.dateAsOf = dateAsOf;
    return this;
  }

   /**
   * (All Account Types) Most recent date of the following information. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return dateAsOf
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1607450357", value = "(All Account Types) Most recent date of the following information. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).")

  public Long getDateAsOf() {
    return dateAsOf;
  }


  public void setDateAsOf(Long dateAsOf) {
    
    
    
    this.dateAsOf = dateAsOf;
  }


  public CustomerAccountDetail availableBalanceAmount(Double availableBalanceAmount) {
    
    
    
    
    this.availableBalanceAmount = availableBalanceAmount;
    return this;
  }

  public CustomerAccountDetail availableBalanceAmount(Integer availableBalanceAmount) {
    
    
    
    
    this.availableBalanceAmount = availableBalanceAmount.doubleValue();
    return this;
  }

   /**
   * (Checking/Savings/CD/MoneyMarket) and (Mortgage/Loan) The available balance (typically the current balance with adjustments for any pending transactions)
   * @return availableBalanceAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "5678.78", value = "(Checking/Savings/CD/MoneyMarket) and (Mortgage/Loan) The available balance (typically the current balance with adjustments for any pending transactions)")

  public Double getAvailableBalanceAmount() {
    return availableBalanceAmount;
  }


  public void setAvailableBalanceAmount(Double availableBalanceAmount) {
    
    
    
    this.availableBalanceAmount = availableBalanceAmount;
  }


  public CustomerAccountDetail openDate(Long openDate) {
    
    
    
    
    this.openDate = openDate;
    return this;
  }

   /**
   * (Checking/Savings/CD/MoneyMarket) Date when account was opened. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return openDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1607450357", value = "(Checking/Savings/CD/MoneyMarket) Date when account was opened. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).")

  public Long getOpenDate() {
    return openDate;
  }


  public void setOpenDate(Long openDate) {
    
    
    
    this.openDate = openDate;
  }


  public CustomerAccountDetail periodStartDate(Long periodStartDate) {
    
    
    
    
    this.periodStartDate = periodStartDate;
    return this;
  }

   /**
   * (Checking/Savings/CD/MoneyMarket) Start date of period. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return periodStartDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1607450357", value = "(Checking/Savings/CD/MoneyMarket) Start date of period. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).")

  public Long getPeriodStartDate() {
    return periodStartDate;
  }


  public void setPeriodStartDate(Long periodStartDate) {
    
    
    
    this.periodStartDate = periodStartDate;
  }


  public CustomerAccountDetail periodEndDate(Long periodEndDate) {
    
    
    
    
    this.periodEndDate = periodEndDate;
    return this;
  }

   /**
   * End date of period. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return periodEndDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1607450357", value = "End date of period. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).")

  public Long getPeriodEndDate() {
    return periodEndDate;
  }


  public void setPeriodEndDate(Long periodEndDate) {
    
    
    
    this.periodEndDate = periodEndDate;
  }


  public CustomerAccountDetail periodInterestRate(Double periodInterestRate) {
    
    
    
    
    this.periodInterestRate = periodInterestRate;
    return this;
  }

  public CustomerAccountDetail periodInterestRate(Integer periodInterestRate) {
    
    
    
    
    this.periodInterestRate = periodInterestRate.doubleValue();
    return this;
  }

   /**
   * (Checking/Savings/CD/MoneyMarket) The APY for the current period interest rate
   * @return periodInterestRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "13.245", value = "(Checking/Savings/CD/MoneyMarket) The APY for the current period interest rate")

  public Double getPeriodInterestRate() {
    return periodInterestRate;
  }


  public void setPeriodInterestRate(Double periodInterestRate) {
    
    
    
    this.periodInterestRate = periodInterestRate;
  }


  public CustomerAccountDetail periodDepositAmount(Double periodDepositAmount) {
    
    
    
    
    this.periodDepositAmount = periodDepositAmount;
    return this;
  }

  public CustomerAccountDetail periodDepositAmount(Integer periodDepositAmount) {
    
    
    
    
    this.periodDepositAmount = periodDepositAmount.doubleValue();
    return this;
  }

   /**
   * (Checking/Savings/CD/MoneyMarket) Amount deposited in period
   * @return periodDepositAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2356.56", value = "(Checking/Savings/CD/MoneyMarket) Amount deposited in period")

  public Double getPeriodDepositAmount() {
    return periodDepositAmount;
  }


  public void setPeriodDepositAmount(Double periodDepositAmount) {
    
    
    
    this.periodDepositAmount = periodDepositAmount;
  }


  public CustomerAccountDetail periodInterestAmount(Double periodInterestAmount) {
    
    
    
    
    this.periodInterestAmount = periodInterestAmount;
    return this;
  }

  public CustomerAccountDetail periodInterestAmount(Integer periodInterestAmount) {
    
    
    
    
    this.periodInterestAmount = periodInterestAmount.doubleValue();
    return this;
  }

   /**
   * (Checking/Savings/CD/MoneyMarket) Interest accrued during the current period
   * @return periodInterestAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1234.56", value = "(Checking/Savings/CD/MoneyMarket) Interest accrued during the current period")

  public Double getPeriodInterestAmount() {
    return periodInterestAmount;
  }


  public void setPeriodInterestAmount(Double periodInterestAmount) {
    
    
    
    this.periodInterestAmount = periodInterestAmount;
  }


  public CustomerAccountDetail interestYtdAmount(Double interestYtdAmount) {
    
    
    
    
    this.interestYtdAmount = interestYtdAmount;
    return this;
  }

  public CustomerAccountDetail interestYtdAmount(Integer interestYtdAmount) {
    
    
    
    
    this.interestYtdAmount = interestYtdAmount.doubleValue();
    return this;
  }

   /**
   * (Checking/Savings/CD/MoneyMarket) Interest accrued year-to-date
   * @return interestYtdAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1056.67", value = "(Checking/Savings/CD/MoneyMarket) Interest accrued year-to-date")

  public Double getInterestYtdAmount() {
    return interestYtdAmount;
  }


  public void setInterestYtdAmount(Double interestYtdAmount) {
    
    
    
    this.interestYtdAmount = interestYtdAmount;
  }


  public CustomerAccountDetail interestPriorYtdAmount(Double interestPriorYtdAmount) {
    
    
    
    
    this.interestPriorYtdAmount = interestPriorYtdAmount;
    return this;
  }

  public CustomerAccountDetail interestPriorYtdAmount(Integer interestPriorYtdAmount) {
    
    
    
    
    this.interestPriorYtdAmount = interestPriorYtdAmount.doubleValue();
    return this;
  }

   /**
   * (Checking/Savings/CD/MoneyMarket) Interest earned in prior year
   * @return interestPriorYtdAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "3056.79", value = "(Checking/Savings/CD/MoneyMarket) Interest earned in prior year")

  public Double getInterestPriorYtdAmount() {
    return interestPriorYtdAmount;
  }


  public void setInterestPriorYtdAmount(Double interestPriorYtdAmount) {
    
    
    
    this.interestPriorYtdAmount = interestPriorYtdAmount;
  }


  public CustomerAccountDetail maturityDate(Long maturityDate) {
    
    
    
    
    this.maturityDate = maturityDate;
    return this;
  }

   /**
   * (Checking/Savings/CD/MoneyMarket) Maturity date of account type. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return maturityDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1607450357", value = "(Checking/Savings/CD/MoneyMarket) Maturity date of account type. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).")

  public Long getMaturityDate() {
    return maturityDate;
  }


  public void setMaturityDate(Long maturityDate) {
    
    
    
    this.maturityDate = maturityDate;
  }


  public CustomerAccountDetail interestRate(String interestRate) {
    
    
    
    
    this.interestRate = interestRate;
    return this;
  }

   /**
   * (Credit Card/Line Of Credit) and (Mortgage/Loan) The account&#39;s current interest rate
   * @return interestRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "15.789", value = "(Credit Card/Line Of Credit) and (Mortgage/Loan) The account's current interest rate")

  public String getInterestRate() {
    return interestRate;
  }


  public void setInterestRate(String interestRate) {
    
    
    
    this.interestRate = interestRate;
  }


  public CustomerAccountDetail creditAvailableAmount(Double creditAvailableAmount) {
    
    
    
    
    this.creditAvailableAmount = creditAvailableAmount;
    return this;
  }

  public CustomerAccountDetail creditAvailableAmount(Integer creditAvailableAmount) {
    
    
    
    
    this.creditAvailableAmount = creditAvailableAmount.doubleValue();
    return this;
  }

   /**
   * (Credit Card/Line Of Credit) The available credit (typically the credit limit minus the current balance)
   * @return creditAvailableAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "3000", value = "(Credit Card/Line Of Credit) The available credit (typically the credit limit minus the current balance)")

  public Double getCreditAvailableAmount() {
    return creditAvailableAmount;
  }


  public void setCreditAvailableAmount(Double creditAvailableAmount) {
    
    
    
    this.creditAvailableAmount = creditAvailableAmount;
  }


  public CustomerAccountDetail creditMaxAmount(Double creditMaxAmount) {
    
    
    
    
    this.creditMaxAmount = creditMaxAmount;
    return this;
  }

  public CustomerAccountDetail creditMaxAmount(Integer creditMaxAmount) {
    
    
    
    
    this.creditMaxAmount = creditMaxAmount.doubleValue();
    return this;
  }

   /**
   * (Credit Card/Line Of Credit) The account&#39;s credit limit
   * @return creditMaxAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "7000", value = "(Credit Card/Line Of Credit) The account's credit limit")

  public Double getCreditMaxAmount() {
    return creditMaxAmount;
  }


  public void setCreditMaxAmount(Double creditMaxAmount) {
    
    
    
    this.creditMaxAmount = creditMaxAmount;
  }


  public CustomerAccountDetail cashAdvanceAvailableAmount(Double cashAdvanceAvailableAmount) {
    
    
    
    
    this.cashAdvanceAvailableAmount = cashAdvanceAvailableAmount;
    return this;
  }

  public CustomerAccountDetail cashAdvanceAvailableAmount(Integer cashAdvanceAvailableAmount) {
    
    
    
    
    this.cashAdvanceAvailableAmount = cashAdvanceAvailableAmount.doubleValue();
    return this;
  }

   /**
   * (Credit Card/Line Of Credit) Currently available cash advance
   * @return cashAdvanceAvailableAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2000", value = "(Credit Card/Line Of Credit) Currently available cash advance")

  public Double getCashAdvanceAvailableAmount() {
    return cashAdvanceAvailableAmount;
  }


  public void setCashAdvanceAvailableAmount(Double cashAdvanceAvailableAmount) {
    
    
    
    this.cashAdvanceAvailableAmount = cashAdvanceAvailableAmount;
  }


  public CustomerAccountDetail cashAdvanceMaxAmount(Double cashAdvanceMaxAmount) {
    
    
    
    
    this.cashAdvanceMaxAmount = cashAdvanceMaxAmount;
    return this;
  }

  public CustomerAccountDetail cashAdvanceMaxAmount(Integer cashAdvanceMaxAmount) {
    
    
    
    
    this.cashAdvanceMaxAmount = cashAdvanceMaxAmount.doubleValue();
    return this;
  }

   /**
   * (Credit Card/Line Of Credit) Maximum cash advance amount
   * @return cashAdvanceMaxAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "3000", value = "(Credit Card/Line Of Credit) Maximum cash advance amount")

  public Double getCashAdvanceMaxAmount() {
    return cashAdvanceMaxAmount;
  }


  public void setCashAdvanceMaxAmount(Double cashAdvanceMaxAmount) {
    
    
    
    this.cashAdvanceMaxAmount = cashAdvanceMaxAmount;
  }


  public CustomerAccountDetail cashAdvanceBalance(Double cashAdvanceBalance) {
    
    
    
    
    this.cashAdvanceBalance = cashAdvanceBalance;
    return this;
  }

  public CustomerAccountDetail cashAdvanceBalance(Integer cashAdvanceBalance) {
    
    
    
    
    this.cashAdvanceBalance = cashAdvanceBalance.doubleValue();
    return this;
  }

   /**
   * (Credit Card/Line Of Credit) Balance of current cash advance
   * @return cashAdvanceBalance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1000", value = "(Credit Card/Line Of Credit) Balance of current cash advance")

  public Double getCashAdvanceBalance() {
    return cashAdvanceBalance;
  }


  public void setCashAdvanceBalance(Double cashAdvanceBalance) {
    
    
    
    this.cashAdvanceBalance = cashAdvanceBalance;
  }


  public CustomerAccountDetail cashAdvanceInterestRate(Double cashAdvanceInterestRate) {
    
    
    
    
    this.cashAdvanceInterestRate = cashAdvanceInterestRate;
    return this;
  }

  public CustomerAccountDetail cashAdvanceInterestRate(Integer cashAdvanceInterestRate) {
    
    
    
    
    this.cashAdvanceInterestRate = cashAdvanceInterestRate.doubleValue();
    return this;
  }

   /**
   * (Credit Card/Line Of Credit) Interest rate for cash advances
   * @return cashAdvanceInterestRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "21.5", value = "(Credit Card/Line Of Credit) Interest rate for cash advances")

  public Double getCashAdvanceInterestRate() {
    return cashAdvanceInterestRate;
  }


  public void setCashAdvanceInterestRate(Double cashAdvanceInterestRate) {
    
    
    
    this.cashAdvanceInterestRate = cashAdvanceInterestRate;
  }


  public CustomerAccountDetail currentBalance(Double currentBalance) {
    
    
    
    
    this.currentBalance = currentBalance;
    return this;
  }

  public CustomerAccountDetail currentBalance(Integer currentBalance) {
    
    
    
    
    this.currentBalance = currentBalance.doubleValue();
    return this;
  }

   /**
   * (Credit Card/Line Of Credit) and (Investment) Current balance
   * @return currentBalance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "5789.34", value = "(Credit Card/Line Of Credit) and (Investment) Current balance")

  public Double getCurrentBalance() {
    return currentBalance;
  }


  public void setCurrentBalance(Double currentBalance) {
    
    
    
    this.currentBalance = currentBalance;
  }


  public CustomerAccountDetail paymentMinAmount(Double paymentMinAmount) {
    
    
    
    
    this.paymentMinAmount = paymentMinAmount;
    return this;
  }

  public CustomerAccountDetail paymentMinAmount(Integer paymentMinAmount) {
    
    
    
    
    this.paymentMinAmount = paymentMinAmount.doubleValue();
    return this;
  }

   /**
   * (Credit Card/Line Of Credit) and (Mortgage/Loan) Minimum payment due
   * @return paymentMinAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "456.78", value = "(Credit Card/Line Of Credit) and (Mortgage/Loan) Minimum payment due")

  public Double getPaymentMinAmount() {
    return paymentMinAmount;
  }


  public void setPaymentMinAmount(Double paymentMinAmount) {
    
    
    
    this.paymentMinAmount = paymentMinAmount;
  }


  public CustomerAccountDetail paymentDueDate(Long paymentDueDate) {
    
    
    
    
    this.paymentDueDate = paymentDueDate;
    return this;
  }

   /**
   * (Credit Card/Line Of Credit) Due date for the next payment. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return paymentDueDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1607450357", value = "(Credit Card/Line Of Credit) Due date for the next payment. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).")

  public Long getPaymentDueDate() {
    return paymentDueDate;
  }


  public void setPaymentDueDate(Long paymentDueDate) {
    
    
    
    this.paymentDueDate = paymentDueDate;
  }


  public CustomerAccountDetail previousBalance(Double previousBalance) {
    
    
    
    
    this.previousBalance = previousBalance;
    return this;
  }

  public CustomerAccountDetail previousBalance(Integer previousBalance) {
    
    
    
    
    this.previousBalance = previousBalance.doubleValue();
    return this;
  }

   /**
   * (Credit Card/Line Of Credit) Prior balance in last statement
   * @return previousBalance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1234.56", value = "(Credit Card/Line Of Credit) Prior balance in last statement")

  public Double getPreviousBalance() {
    return previousBalance;
  }


  public void setPreviousBalance(Double previousBalance) {
    
    
    
    this.previousBalance = previousBalance;
  }


  public CustomerAccountDetail statementStartDate(Long statementStartDate) {
    
    
    
    
    this.statementStartDate = statementStartDate;
    return this;
  }

   /**
   * (Credit Card/Line Of Credit) Start date of statement period. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return statementStartDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1607450357", value = "(Credit Card/Line Of Credit) Start date of statement period. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).")

  public Long getStatementStartDate() {
    return statementStartDate;
  }


  public void setStatementStartDate(Long statementStartDate) {
    
    
    
    this.statementStartDate = statementStartDate;
  }


  public CustomerAccountDetail statementEndDate(Long statementEndDate) {
    
    
    
    
    this.statementEndDate = statementEndDate;
    return this;
  }

   /**
   * (Credit Card/Line Of Credit) End date of statement period. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return statementEndDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1607450357", value = "(Credit Card/Line Of Credit) End date of statement period. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).")

  public Long getStatementEndDate() {
    return statementEndDate;
  }


  public void setStatementEndDate(Long statementEndDate) {
    
    
    
    this.statementEndDate = statementEndDate;
  }


  public CustomerAccountDetail statementPurchaseAmount(Double statementPurchaseAmount) {
    
    
    
    
    this.statementPurchaseAmount = statementPurchaseAmount;
    return this;
  }

  public CustomerAccountDetail statementPurchaseAmount(Integer statementPurchaseAmount) {
    
    
    
    
    this.statementPurchaseAmount = statementPurchaseAmount.doubleValue();
    return this;
  }

   /**
   * (Credit Card/Line Of Credit) Purchase amount of statement period
   * @return statementPurchaseAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2345.9", value = "(Credit Card/Line Of Credit) Purchase amount of statement period")

  public Double getStatementPurchaseAmount() {
    return statementPurchaseAmount;
  }


  public void setStatementPurchaseAmount(Double statementPurchaseAmount) {
    
    
    
    this.statementPurchaseAmount = statementPurchaseAmount;
  }


  public CustomerAccountDetail statementFinanceAmount(Double statementFinanceAmount) {
    
    
    
    
    this.statementFinanceAmount = statementFinanceAmount;
    return this;
  }

  public CustomerAccountDetail statementFinanceAmount(Integer statementFinanceAmount) {
    
    
    
    
    this.statementFinanceAmount = statementFinanceAmount.doubleValue();
    return this;
  }

   /**
   * (Credit Card/Line Of Credit) Finance amount of statement period
   * @return statementFinanceAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "156.78", value = "(Credit Card/Line Of Credit) Finance amount of statement period")

  public Double getStatementFinanceAmount() {
    return statementFinanceAmount;
  }


  public void setStatementFinanceAmount(Double statementFinanceAmount) {
    
    
    
    this.statementFinanceAmount = statementFinanceAmount;
  }


  public CustomerAccountDetail statementCreditAmount(Double statementCreditAmount) {
    
    
    
    
    this.statementCreditAmount = statementCreditAmount;
    return this;
  }

  public CustomerAccountDetail statementCreditAmount(Integer statementCreditAmount) {
    
    
    
    
    this.statementCreditAmount = statementCreditAmount.doubleValue();
    return this;
  }

   /**
   * (Credit Card/Line Of Credit) Credit amount applied in statement period
   * @return statementCreditAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "345", value = "(Credit Card/Line Of Credit) Credit amount applied in statement period")

  public Double getStatementCreditAmount() {
    return statementCreditAmount;
  }


  public void setStatementCreditAmount(Double statementCreditAmount) {
    
    
    
    this.statementCreditAmount = statementCreditAmount;
  }


  public CustomerAccountDetail rewardEarnedBalance(Integer rewardEarnedBalance) {
    
    
    
    
    this.rewardEarnedBalance = rewardEarnedBalance;
    return this;
  }

   /**
   * (Credit Card/Line Of Credit) Earned reward balance
   * @return rewardEarnedBalance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "500", value = "(Credit Card/Line Of Credit) Earned reward balance")

  public Integer getRewardEarnedBalance() {
    return rewardEarnedBalance;
  }


  public void setRewardEarnedBalance(Integer rewardEarnedBalance) {
    
    
    
    this.rewardEarnedBalance = rewardEarnedBalance;
  }


  public CustomerAccountDetail pastDueAmount(Double pastDueAmount) {
    
    
    
    
    this.pastDueAmount = pastDueAmount;
    return this;
  }

  public CustomerAccountDetail pastDueAmount(Integer pastDueAmount) {
    
    
    
    
    this.pastDueAmount = pastDueAmount.doubleValue();
    return this;
  }

   /**
   * (Credit Card/Line Of Credit) Balance past due
   * @return pastDueAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "3688.99", value = "(Credit Card/Line Of Credit) Balance past due")

  public Double getPastDueAmount() {
    return pastDueAmount;
  }


  public void setPastDueAmount(Double pastDueAmount) {
    
    
    
    this.pastDueAmount = pastDueAmount;
  }


  public CustomerAccountDetail lastPaymentAmount(Double lastPaymentAmount) {
    
    
    
    
    this.lastPaymentAmount = lastPaymentAmount;
    return this;
  }

  public CustomerAccountDetail lastPaymentAmount(Integer lastPaymentAmount) {
    
    
    
    
    this.lastPaymentAmount = lastPaymentAmount.doubleValue();
    return this;
  }

   /**
   * (Credit Card/Line Of Credit) and (Mortgage/Loan) The amount received in the last payment
   * @return lastPaymentAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "567.89", value = "(Credit Card/Line Of Credit) and (Mortgage/Loan) The amount received in the last payment")

  public Double getLastPaymentAmount() {
    return lastPaymentAmount;
  }


  public void setLastPaymentAmount(Double lastPaymentAmount) {
    
    
    
    this.lastPaymentAmount = lastPaymentAmount;
  }


  public CustomerAccountDetail lastPaymentDate(Long lastPaymentDate) {
    
    
    
    
    this.lastPaymentDate = lastPaymentDate;
    return this;
  }

   /**
   * (Credit Card/Line Of Credit) The date of the last payment. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return lastPaymentDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1607450357", value = "(Credit Card/Line Of Credit) The date of the last payment. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).")

  public Long getLastPaymentDate() {
    return lastPaymentDate;
  }


  public void setLastPaymentDate(Long lastPaymentDate) {
    
    
    
    this.lastPaymentDate = lastPaymentDate;
  }


  public CustomerAccountDetail statementCloseBalance(Double statementCloseBalance) {
    
    
    
    
    this.statementCloseBalance = statementCloseBalance;
    return this;
  }

  public CustomerAccountDetail statementCloseBalance(Integer statementCloseBalance) {
    
    
    
    
    this.statementCloseBalance = statementCloseBalance.doubleValue();
    return this;
  }

   /**
   * (Credit Card/Line Of Credit) Balance of statement at close
   * @return statementCloseBalance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2456.69", value = "(Credit Card/Line Of Credit) Balance of statement at close")

  public Double getStatementCloseBalance() {
    return statementCloseBalance;
  }


  public void setStatementCloseBalance(Double statementCloseBalance) {
    
    
    
    this.statementCloseBalance = statementCloseBalance;
  }


  public CustomerAccountDetail termOfMl(String termOfMl) {
    
    
    
    
    this.termOfMl = termOfMl;
    return this;
  }

   /**
   * (Mortgage/Loan) Length of loan in months
   * @return termOfMl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "36", value = "(Mortgage/Loan) Length of loan in months")

  public String getTermOfMl() {
    return termOfMl;
  }


  public void setTermOfMl(String termOfMl) {
    
    
    
    this.termOfMl = termOfMl;
  }


  public CustomerAccountDetail mlHolderName(String mlHolderName) {
    
    
    
    
    this.mlHolderName = mlHolderName;
    return this;
  }

   /**
   * (Mortgage/Loan) Holder of the mortgage or loan
   * @return mlHolderName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "John Smith", value = "(Mortgage/Loan) Holder of the mortgage or loan")

  public String getMlHolderName() {
    return mlHolderName;
  }


  public void setMlHolderName(String mlHolderName) {
    
    
    
    this.mlHolderName = mlHolderName;
  }


  public CustomerAccountDetail lateFeeAmount(Double lateFeeAmount) {
    
    
    
    
    this.lateFeeAmount = lateFeeAmount;
    return this;
  }

  public CustomerAccountDetail lateFeeAmount(Integer lateFeeAmount) {
    
    
    
    
    this.lateFeeAmount = lateFeeAmount.doubleValue();
    return this;
  }

   /**
   * (Mortgage/Loan) Late fee charged
   * @return lateFeeAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "35", value = "(Mortgage/Loan) Late fee charged")

  public Double getLateFeeAmount() {
    return lateFeeAmount;
  }


  public void setLateFeeAmount(Double lateFeeAmount) {
    
    
    
    this.lateFeeAmount = lateFeeAmount;
  }


  public CustomerAccountDetail payoffAmount(Double payoffAmount) {
    
    
    
    
    this.payoffAmount = payoffAmount;
    return this;
  }

  public CustomerAccountDetail payoffAmount(Integer payoffAmount) {
    
    
    
    
    this.payoffAmount = payoffAmount.doubleValue();
    return this;
  }

   /**
   * (Mortgage/Loan) The amount required to payoff the loan
   * @return payoffAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "45567.98", value = "(Mortgage/Loan) The amount required to payoff the loan")

  public Double getPayoffAmount() {
    return payoffAmount;
  }


  public void setPayoffAmount(Double payoffAmount) {
    
    
    
    this.payoffAmount = payoffAmount;
  }


  public CustomerAccountDetail payoffAmountDate(Long payoffAmountDate) {
    
    
    
    
    this.payoffAmountDate = payoffAmountDate;
    return this;
  }

   /**
   * (Mortgage/Loan) Date of final payment. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return payoffAmountDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1607450357", value = "(Mortgage/Loan) Date of final payment. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).")

  public Long getPayoffAmountDate() {
    return payoffAmountDate;
  }


  public void setPayoffAmountDate(Long payoffAmountDate) {
    
    
    
    this.payoffAmountDate = payoffAmountDate;
  }


  public CustomerAccountDetail originalMaturityDate(Long originalMaturityDate) {
    
    
    
    
    this.originalMaturityDate = originalMaturityDate;
    return this;
  }

   /**
   * (Mortgage/Loan) Original date of loan maturity. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return originalMaturityDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1607450357", value = "(Mortgage/Loan) Original date of loan maturity. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).")

  public Long getOriginalMaturityDate() {
    return originalMaturityDate;
  }


  public void setOriginalMaturityDate(Long originalMaturityDate) {
    
    
    
    this.originalMaturityDate = originalMaturityDate;
  }


  public CustomerAccountDetail principalBalance(Double principalBalance) {
    
    
    
    
    this.principalBalance = principalBalance;
    return this;
  }

  public CustomerAccountDetail principalBalance(Integer principalBalance) {
    
    
    
    
    this.principalBalance = principalBalance.doubleValue();
    return this;
  }

   /**
   * (Mortgage/Loan) The principal balance
   * @return principalBalance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "45056.7", value = "(Mortgage/Loan) The principal balance")

  public Double getPrincipalBalance() {
    return principalBalance;
  }


  public void setPrincipalBalance(Double principalBalance) {
    
    
    
    this.principalBalance = principalBalance;
  }


  public CustomerAccountDetail escrowBalance(Double escrowBalance) {
    
    
    
    
    this.escrowBalance = escrowBalance;
    return this;
  }

  public CustomerAccountDetail escrowBalance(Integer escrowBalance) {
    
    
    
    
    this.escrowBalance = escrowBalance.doubleValue();
    return this;
  }

   /**
   * (Mortgage/Loan) The escrow balance
   * @return escrowBalance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2345.01", value = "(Mortgage/Loan) The escrow balance")

  public Double getEscrowBalance() {
    return escrowBalance;
  }


  public void setEscrowBalance(Double escrowBalance) {
    
    
    
    this.escrowBalance = escrowBalance;
  }


  public CustomerAccountDetail interestPeriod(String interestPeriod) {
    
    
    
    
    this.interestPeriod = interestPeriod;
    return this;
  }

   /**
   * (Mortgage/Loan) Period of interest
   * @return interestPeriod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "monthly", value = "(Mortgage/Loan) Period of interest")

  public String getInterestPeriod() {
    return interestPeriod;
  }


  public void setInterestPeriod(String interestPeriod) {
    
    
    
    this.interestPeriod = interestPeriod;
  }


  public CustomerAccountDetail initialMlAmount(Double initialMlAmount) {
    
    
    
    
    this.initialMlAmount = initialMlAmount;
    return this;
  }

  public CustomerAccountDetail initialMlAmount(Integer initialMlAmount) {
    
    
    
    
    this.initialMlAmount = initialMlAmount.doubleValue();
    return this;
  }

   /**
   * (Mortgage/Loan) Original loan amount
   * @return initialMlAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "65000", value = "(Mortgage/Loan) Original loan amount")

  public Double getInitialMlAmount() {
    return initialMlAmount;
  }


  public void setInitialMlAmount(Double initialMlAmount) {
    
    
    
    this.initialMlAmount = initialMlAmount;
  }


  public CustomerAccountDetail initialMlDate(Long initialMlDate) {
    
    
    
    
    this.initialMlDate = initialMlDate;
    return this;
  }

   /**
   * (Mortgage/Loan) Original date of loan. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return initialMlDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1607450357", value = "(Mortgage/Loan) Original date of loan. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).")

  public Long getInitialMlDate() {
    return initialMlDate;
  }


  public void setInitialMlDate(Long initialMlDate) {
    
    
    
    this.initialMlDate = initialMlDate;
  }


  public CustomerAccountDetail nextPaymentPrincipalAmount(Double nextPaymentPrincipalAmount) {
    
    
    
    
    this.nextPaymentPrincipalAmount = nextPaymentPrincipalAmount;
    return this;
  }

  public CustomerAccountDetail nextPaymentPrincipalAmount(Integer nextPaymentPrincipalAmount) {
    
    
    
    
    this.nextPaymentPrincipalAmount = nextPaymentPrincipalAmount.doubleValue();
    return this;
  }

   /**
   * (Mortgage/Loan) Amount towards principal in next payment
   * @return nextPaymentPrincipalAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1256.67", value = "(Mortgage/Loan) Amount towards principal in next payment")

  public Double getNextPaymentPrincipalAmount() {
    return nextPaymentPrincipalAmount;
  }


  public void setNextPaymentPrincipalAmount(Double nextPaymentPrincipalAmount) {
    
    
    
    this.nextPaymentPrincipalAmount = nextPaymentPrincipalAmount;
  }


  public CustomerAccountDetail nextPaymentInterestAmount(Double nextPaymentInterestAmount) {
    
    
    
    
    this.nextPaymentInterestAmount = nextPaymentInterestAmount;
    return this;
  }

  public CustomerAccountDetail nextPaymentInterestAmount(Integer nextPaymentInterestAmount) {
    
    
    
    
    this.nextPaymentInterestAmount = nextPaymentInterestAmount.doubleValue();
    return this;
  }

   /**
   * (Mortgage/Loan) Amount of interest in next payment
   * @return nextPaymentInterestAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "234.56", value = "(Mortgage/Loan) Amount of interest in next payment")

  public Double getNextPaymentInterestAmount() {
    return nextPaymentInterestAmount;
  }


  public void setNextPaymentInterestAmount(Double nextPaymentInterestAmount) {
    
    
    
    this.nextPaymentInterestAmount = nextPaymentInterestAmount;
  }


  public CustomerAccountDetail nextPayment(Double nextPayment) {
    
    
    
    
    this.nextPayment = nextPayment;
    return this;
  }

  public CustomerAccountDetail nextPayment(Integer nextPayment) {
    
    
    
    
    this.nextPayment = nextPayment.doubleValue();
    return this;
  }

   /**
   * (Mortgage/Loan) Minimum payment due
   * @return nextPayment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1578", value = "(Mortgage/Loan) Minimum payment due")

  public Double getNextPayment() {
    return nextPayment;
  }


  public void setNextPayment(Double nextPayment) {
    
    
    
    this.nextPayment = nextPayment;
  }


  public CustomerAccountDetail nextPaymentDate(Long nextPaymentDate) {
    
    
    
    
    this.nextPaymentDate = nextPaymentDate;
    return this;
  }

   /**
   * (Mortgage/Loan) Due date for the next payment. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return nextPaymentDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1607450357", value = "(Mortgage/Loan) Due date for the next payment. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).")

  public Long getNextPaymentDate() {
    return nextPaymentDate;
  }


  public void setNextPaymentDate(Long nextPaymentDate) {
    
    
    
    this.nextPaymentDate = nextPaymentDate;
  }


  public CustomerAccountDetail lastPaymentDueDate(Long lastPaymentDueDate) {
    
    
    
    
    this.lastPaymentDueDate = lastPaymentDueDate;
    return this;
  }

   /**
   * (Mortgage/Loan) Due date of last payment. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return lastPaymentDueDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1607450357", value = "(Mortgage/Loan) Due date of last payment. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).")

  public Long getLastPaymentDueDate() {
    return lastPaymentDueDate;
  }


  public void setLastPaymentDueDate(Long lastPaymentDueDate) {
    
    
    
    this.lastPaymentDueDate = lastPaymentDueDate;
  }


  public CustomerAccountDetail lastPaymentReceiveDate(Long lastPaymentReceiveDate) {
    
    
    
    
    this.lastPaymentReceiveDate = lastPaymentReceiveDate;
    return this;
  }

   /**
   * (Mortgage/Loan) The date of the last payment. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return lastPaymentReceiveDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1607450357", value = "(Mortgage/Loan) The date of the last payment. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).")

  public Long getLastPaymentReceiveDate() {
    return lastPaymentReceiveDate;
  }


  public void setLastPaymentReceiveDate(Long lastPaymentReceiveDate) {
    
    
    
    this.lastPaymentReceiveDate = lastPaymentReceiveDate;
  }


  public CustomerAccountDetail lastPaymentPrincipalAmount(Double lastPaymentPrincipalAmount) {
    
    
    
    
    this.lastPaymentPrincipalAmount = lastPaymentPrincipalAmount;
    return this;
  }

  public CustomerAccountDetail lastPaymentPrincipalAmount(Integer lastPaymentPrincipalAmount) {
    
    
    
    
    this.lastPaymentPrincipalAmount = lastPaymentPrincipalAmount.doubleValue();
    return this;
  }

   /**
   * (Mortgage/Loan) Amount towards principal in last payment
   * @return lastPaymentPrincipalAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1256.67", value = "(Mortgage/Loan) Amount towards principal in last payment")

  public Double getLastPaymentPrincipalAmount() {
    return lastPaymentPrincipalAmount;
  }


  public void setLastPaymentPrincipalAmount(Double lastPaymentPrincipalAmount) {
    
    
    
    this.lastPaymentPrincipalAmount = lastPaymentPrincipalAmount;
  }


  public CustomerAccountDetail lastPaymentInterestAmount(Double lastPaymentInterestAmount) {
    
    
    
    
    this.lastPaymentInterestAmount = lastPaymentInterestAmount;
    return this;
  }

  public CustomerAccountDetail lastPaymentInterestAmount(Integer lastPaymentInterestAmount) {
    
    
    
    
    this.lastPaymentInterestAmount = lastPaymentInterestAmount.doubleValue();
    return this;
  }

   /**
   * (Mortgage/Loan) Amount of interest in last payment
   * @return lastPaymentInterestAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "234.56", value = "(Mortgage/Loan) Amount of interest in last payment")

  public Double getLastPaymentInterestAmount() {
    return lastPaymentInterestAmount;
  }


  public void setLastPaymentInterestAmount(Double lastPaymentInterestAmount) {
    
    
    
    this.lastPaymentInterestAmount = lastPaymentInterestAmount;
  }


  public CustomerAccountDetail lastPaymentEscrowAmount(Double lastPaymentEscrowAmount) {
    
    
    
    
    this.lastPaymentEscrowAmount = lastPaymentEscrowAmount;
    return this;
  }

  public CustomerAccountDetail lastPaymentEscrowAmount(Integer lastPaymentEscrowAmount) {
    
    
    
    
    this.lastPaymentEscrowAmount = lastPaymentEscrowAmount.doubleValue();
    return this;
  }

   /**
   * (Mortgage/Loan) Amount towards escrow in last payment
   * @return lastPaymentEscrowAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "456.78", value = "(Mortgage/Loan) Amount towards escrow in last payment")

  public Double getLastPaymentEscrowAmount() {
    return lastPaymentEscrowAmount;
  }


  public void setLastPaymentEscrowAmount(Double lastPaymentEscrowAmount) {
    
    
    
    this.lastPaymentEscrowAmount = lastPaymentEscrowAmount;
  }


  public CustomerAccountDetail lastPaymentLastFeeAmount(Double lastPaymentLastFeeAmount) {
    
    
    
    
    this.lastPaymentLastFeeAmount = lastPaymentLastFeeAmount;
    return this;
  }

  public CustomerAccountDetail lastPaymentLastFeeAmount(Integer lastPaymentLastFeeAmount) {
    
    
    
    
    this.lastPaymentLastFeeAmount = lastPaymentLastFeeAmount.doubleValue();
    return this;
  }

   /**
   * (Mortgage/Loan) Amount of last fee in last payment
   * @return lastPaymentLastFeeAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "150", value = "(Mortgage/Loan) Amount of last fee in last payment")

  public Double getLastPaymentLastFeeAmount() {
    return lastPaymentLastFeeAmount;
  }


  public void setLastPaymentLastFeeAmount(Double lastPaymentLastFeeAmount) {
    
    
    
    this.lastPaymentLastFeeAmount = lastPaymentLastFeeAmount;
  }


  public CustomerAccountDetail lastPaymentLateCharge(Double lastPaymentLateCharge) {
    
    
    
    
    this.lastPaymentLateCharge = lastPaymentLateCharge;
    return this;
  }

  public CustomerAccountDetail lastPaymentLateCharge(Integer lastPaymentLateCharge) {
    
    
    
    
    this.lastPaymentLateCharge = lastPaymentLateCharge.doubleValue();
    return this;
  }

   /**
   * (Mortgage/Loan) Amount of late charge in last payment
   * @return lastPaymentLateCharge
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "50", value = "(Mortgage/Loan) Amount of late charge in last payment")

  public Double getLastPaymentLateCharge() {
    return lastPaymentLateCharge;
  }


  public void setLastPaymentLateCharge(Double lastPaymentLateCharge) {
    
    
    
    this.lastPaymentLateCharge = lastPaymentLateCharge;
  }


  public CustomerAccountDetail ytdPrincipalPaid(Double ytdPrincipalPaid) {
    
    
    
    
    this.ytdPrincipalPaid = ytdPrincipalPaid;
    return this;
  }

  public CustomerAccountDetail ytdPrincipalPaid(Integer ytdPrincipalPaid) {
    
    
    
    
    this.ytdPrincipalPaid = ytdPrincipalPaid.doubleValue();
    return this;
  }

   /**
   * (Mortgage/Loan) Principal paid year-to-date
   * @return ytdPrincipalPaid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "5432.01", value = "(Mortgage/Loan) Principal paid year-to-date")

  public Double getYtdPrincipalPaid() {
    return ytdPrincipalPaid;
  }


  public void setYtdPrincipalPaid(Double ytdPrincipalPaid) {
    
    
    
    this.ytdPrincipalPaid = ytdPrincipalPaid;
  }


  public CustomerAccountDetail ytdInterestPaid(Double ytdInterestPaid) {
    
    
    
    
    this.ytdInterestPaid = ytdInterestPaid;
    return this;
  }

  public CustomerAccountDetail ytdInterestPaid(Integer ytdInterestPaid) {
    
    
    
    
    this.ytdInterestPaid = ytdInterestPaid.doubleValue();
    return this;
  }

   /**
   * (Mortgage/Loan) Interest paid year-to-date
   * @return ytdInterestPaid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "3948.56", value = "(Mortgage/Loan) Interest paid year-to-date")

  public Double getYtdInterestPaid() {
    return ytdInterestPaid;
  }


  public void setYtdInterestPaid(Double ytdInterestPaid) {
    
    
    
    this.ytdInterestPaid = ytdInterestPaid;
  }


  public CustomerAccountDetail ytdInsurancePaid(Double ytdInsurancePaid) {
    
    
    
    
    this.ytdInsurancePaid = ytdInsurancePaid;
    return this;
  }

  public CustomerAccountDetail ytdInsurancePaid(Integer ytdInsurancePaid) {
    
    
    
    
    this.ytdInsurancePaid = ytdInsurancePaid.doubleValue();
    return this;
  }

   /**
   * (Mortgage/Loan) Insurance paid year-to-date
   * @return ytdInsurancePaid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1345.89", value = "(Mortgage/Loan) Insurance paid year-to-date")

  public Double getYtdInsurancePaid() {
    return ytdInsurancePaid;
  }


  public void setYtdInsurancePaid(Double ytdInsurancePaid) {
    
    
    
    this.ytdInsurancePaid = ytdInsurancePaid;
  }


  public CustomerAccountDetail ytdTaxPaid(Double ytdTaxPaid) {
    
    
    
    
    this.ytdTaxPaid = ytdTaxPaid;
    return this;
  }

  public CustomerAccountDetail ytdTaxPaid(Integer ytdTaxPaid) {
    
    
    
    
    this.ytdTaxPaid = ytdTaxPaid.doubleValue();
    return this;
  }

   /**
   * (Mortgage/Loan) Tax paid year-to-date
   * @return ytdTaxPaid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1489", value = "(Mortgage/Loan) Tax paid year-to-date")

  public Double getYtdTaxPaid() {
    return ytdTaxPaid;
  }


  public void setYtdTaxPaid(Double ytdTaxPaid) {
    
    
    
    this.ytdTaxPaid = ytdTaxPaid;
  }


  public CustomerAccountDetail autoPayEnrolled(Boolean autoPayEnrolled) {
    
    
    
    
    this.autoPayEnrolled = autoPayEnrolled;
    return this;
  }

   /**
   * (Mortgage/Loan) Enrolled in autopay (F/Y)
   * @return autoPayEnrolled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "(Mortgage/Loan) Enrolled in autopay (F/Y)")

  public Boolean getAutoPayEnrolled() {
    return autoPayEnrolled;
  }


  public void setAutoPayEnrolled(Boolean autoPayEnrolled) {
    
    
    
    this.autoPayEnrolled = autoPayEnrolled;
  }


  public CustomerAccountDetail marginAllowed(Boolean marginAllowed) {
    
    
    
    
    this.marginAllowed = marginAllowed;
    return this;
  }

   /**
   * Margin trading indicator (true / false)
   * @return marginAllowed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Margin trading indicator (true / false)")

  public Boolean getMarginAllowed() {
    return marginAllowed;
  }


  public void setMarginAllowed(Boolean marginAllowed) {
    
    
    
    this.marginAllowed = marginAllowed;
  }


  public CustomerAccountDetail cashAccountAllowed(Boolean cashAccountAllowed) {
    
    
    
    
    this.cashAccountAllowed = cashAccountAllowed;
    return this;
  }

   /**
   * Cash account allowed indicator (true / false)
   * @return cashAccountAllowed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Cash account allowed indicator (true / false)")

  public Boolean getCashAccountAllowed() {
    return cashAccountAllowed;
  }


  public void setCashAccountAllowed(Boolean cashAccountAllowed) {
    
    
    
    this.cashAccountAllowed = cashAccountAllowed;
  }


  public CustomerAccountDetail collateral(String collateral) {
    
    
    
    
    this.collateral = collateral;
    return this;
  }

   /**
   * (Mortgage/Loan) Collateral on loan
   * @return collateral
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "nissan sentra", value = "(Mortgage/Loan) Collateral on loan")

  public String getCollateral() {
    return collateral;
  }


  public void setCollateral(String collateral) {
    
    
    
    this.collateral = collateral;
  }


  public CustomerAccountDetail currentSchool(String currentSchool) {
    
    
    
    
    this.currentSchool = currentSchool;
    return this;
  }

   /**
   * (Mortgage/Loan) Current school
   * @return currentSchool
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "utah valley university", value = "(Mortgage/Loan) Current school")

  public String getCurrentSchool() {
    return currentSchool;
  }


  public void setCurrentSchool(String currentSchool) {
    
    
    
    this.currentSchool = currentSchool;
  }


  public CustomerAccountDetail firstPaymentDate(Long firstPaymentDate) {
    
    
    
    
    this.firstPaymentDate = firstPaymentDate;
    return this;
  }

   /**
   * (Mortgage/Loan) First payment due date. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return firstPaymentDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1607450357", value = "(Mortgage/Loan) First payment due date. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).")

  public Long getFirstPaymentDate() {
    return firstPaymentDate;
  }


  public void setFirstPaymentDate(Long firstPaymentDate) {
    
    
    
    this.firstPaymentDate = firstPaymentDate;
  }


  public CustomerAccountDetail firstMortgage(Boolean firstMortgage) {
    
    
    
    
    this.firstMortgage = firstMortgage;
    return this;
  }

   /**
   * (Mortgage/Loan) First mortgage (F/Y)
   * @return firstMortgage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "(Mortgage/Loan) First mortgage (F/Y)")

  public Boolean getFirstMortgage() {
    return firstMortgage;
  }


  public void setFirstMortgage(Boolean firstMortgage) {
    
    
    
    this.firstMortgage = firstMortgage;
  }


  public CustomerAccountDetail loanPaymentFreq(String loanPaymentFreq) {
    
    
    
    
    this.loanPaymentFreq = loanPaymentFreq;
    return this;
  }

   /**
   * (Mortgage/Loan) Frequency of payments (monthly, etc.)
   * @return loanPaymentFreq
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "monthly", value = "(Mortgage/Loan) Frequency of payments (monthly, etc.)")

  public String getLoanPaymentFreq() {
    return loanPaymentFreq;
  }


  public void setLoanPaymentFreq(String loanPaymentFreq) {
    
    
    
    this.loanPaymentFreq = loanPaymentFreq;
  }


  public CustomerAccountDetail originalSchool(String originalSchool) {
    
    
    
    
    this.originalSchool = originalSchool;
    return this;
  }

   /**
   * (Mortgage/Loan) Original school
   * @return originalSchool
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Brigham young university", value = "(Mortgage/Loan) Original school")

  public String getOriginalSchool() {
    return originalSchool;
  }


  public void setOriginalSchool(String originalSchool) {
    
    
    
    this.originalSchool = originalSchool;
  }


  public CustomerAccountDetail recurringPaymentAmount(Double recurringPaymentAmount) {
    
    
    
    
    this.recurringPaymentAmount = recurringPaymentAmount;
    return this;
  }

  public CustomerAccountDetail recurringPaymentAmount(Integer recurringPaymentAmount) {
    
    
    
    
    this.recurringPaymentAmount = recurringPaymentAmount.doubleValue();
    return this;
  }

   /**
   * (Mortgage/Loan) Recurring payment amount
   * @return recurringPaymentAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "456.23", value = "(Mortgage/Loan) Recurring payment amount")

  public Double getRecurringPaymentAmount() {
    return recurringPaymentAmount;
  }


  public void setRecurringPaymentAmount(Double recurringPaymentAmount) {
    
    
    
    this.recurringPaymentAmount = recurringPaymentAmount;
  }


  public CustomerAccountDetail lender(String lender) {
    
    
    
    
    this.lender = lender;
    return this;
  }

   /**
   * (Mortgage/Loan) Owner of loan
   * @return lender
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "utah community credit union", value = "(Mortgage/Loan) Owner of loan")

  public String getLender() {
    return lender;
  }


  public void setLender(String lender) {
    
    
    
    this.lender = lender;
  }


  public CustomerAccountDetail endingBalanceAmount(Double endingBalanceAmount) {
    
    
    
    
    this.endingBalanceAmount = endingBalanceAmount;
    return this;
  }

  public CustomerAccountDetail endingBalanceAmount(Integer endingBalanceAmount) {
    
    
    
    
    this.endingBalanceAmount = endingBalanceAmount.doubleValue();
    return this;
  }

   /**
   * (Mortgage/Loan) Ending balance
   * @return endingBalanceAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "234789.45", value = "(Mortgage/Loan) Ending balance")

  public Double getEndingBalanceAmount() {
    return endingBalanceAmount;
  }


  public void setEndingBalanceAmount(Double endingBalanceAmount) {
    
    
    
    this.endingBalanceAmount = endingBalanceAmount;
  }


  public CustomerAccountDetail loanTermType(String loanTermType) {
    
    
    
    
    this.loanTermType = loanTermType;
    return this;
  }

   /**
   * (Mortgage/Loan) Type of loan term
   * @return loanTermType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "fixed", value = "(Mortgage/Loan) Type of loan term")

  public String getLoanTermType() {
    return loanTermType;
  }


  public void setLoanTermType(String loanTermType) {
    
    
    
    this.loanTermType = loanTermType;
  }


  public CustomerAccountDetail paymentsMade(Integer paymentsMade) {
    
    
    
    
    this.paymentsMade = paymentsMade;
    return this;
  }

   /**
   * (Mortgage/Loan) Number of payments made
   * @return paymentsMade
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "14", value = "(Mortgage/Loan) Number of payments made")

  public Integer getPaymentsMade() {
    return paymentsMade;
  }


  public void setPaymentsMade(Integer paymentsMade) {
    
    
    
    this.paymentsMade = paymentsMade;
  }


  public CustomerAccountDetail balloonAmount(Double balloonAmount) {
    
    
    
    
    this.balloonAmount = balloonAmount;
    return this;
  }

  public CustomerAccountDetail balloonAmount(Integer balloonAmount) {
    
    
    
    
    this.balloonAmount = balloonAmount.doubleValue();
    return this;
  }

   /**
   * (Mortgage/Loan) Balloon payment amount
   * @return balloonAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1678.56", value = "(Mortgage/Loan) Balloon payment amount")

  public Double getBalloonAmount() {
    return balloonAmount;
  }


  public void setBalloonAmount(Double balloonAmount) {
    
    
    
    this.balloonAmount = balloonAmount;
  }


  public CustomerAccountDetail projectedInterest(Double projectedInterest) {
    
    
    
    
    this.projectedInterest = projectedInterest;
    return this;
  }

  public CustomerAccountDetail projectedInterest(Integer projectedInterest) {
    
    
    
    
    this.projectedInterest = projectedInterest.doubleValue();
    return this;
  }

   /**
   * (Mortgage/Loan) Projected interest on the loan
   * @return projectedInterest
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "10456.78", value = "(Mortgage/Loan) Projected interest on the loan")

  public Double getProjectedInterest() {
    return projectedInterest;
  }


  public void setProjectedInterest(Double projectedInterest) {
    
    
    
    this.projectedInterest = projectedInterest;
  }


  public CustomerAccountDetail interestPaidLtd(Double interestPaidLtd) {
    
    
    
    
    this.interestPaidLtd = interestPaidLtd;
    return this;
  }

  public CustomerAccountDetail interestPaidLtd(Integer interestPaidLtd) {
    
    
    
    
    this.interestPaidLtd = interestPaidLtd.doubleValue();
    return this;
  }

   /**
   * (Mortgage/Loan) Interest paid since inception of loan (life to date)
   * @return interestPaidLtd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "56789.34", value = "(Mortgage/Loan) Interest paid since inception of loan (life to date)")

  public Double getInterestPaidLtd() {
    return interestPaidLtd;
  }


  public void setInterestPaidLtd(Double interestPaidLtd) {
    
    
    
    this.interestPaidLtd = interestPaidLtd;
  }


  public CustomerAccountDetail interestRateType(String interestRateType) {
    
    
    
    
    this.interestRateType = interestRateType;
    return this;
  }

   /**
   * (Mortgage/Loan) Type of interest rate
   * @return interestRateType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "variable", value = "(Mortgage/Loan) Type of interest rate")

  public String getInterestRateType() {
    return interestRateType;
  }


  public void setInterestRateType(String interestRateType) {
    
    
    
    this.interestRateType = interestRateType;
  }


  public CustomerAccountDetail loanPaymentType(String loanPaymentType) {
    
    
    
    
    this.loanPaymentType = loanPaymentType;
    return this;
  }

   /**
   * (Mortgage/Loan) Type of loan payment
   * @return loanPaymentType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "principle", value = "(Mortgage/Loan) Type of loan payment")

  public String getLoanPaymentType() {
    return loanPaymentType;
  }


  public void setLoanPaymentType(String loanPaymentType) {
    
    
    
    this.loanPaymentType = loanPaymentType;
  }


  public CustomerAccountDetail repaymentPlan(String repaymentPlan) {
    
    
    
    
    this.repaymentPlan = repaymentPlan;
    return this;
  }

   /**
   * (Mortgage/Loan) Type of repayment plan for the student loan
   * @return repaymentPlan
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Standard, Graduated, Extended, Pay As You Earn, and more.", value = "(Mortgage/Loan) Type of repayment plan for the student loan")

  public String getRepaymentPlan() {
    return repaymentPlan;
  }


  public void setRepaymentPlan(String repaymentPlan) {
    
    
    
    this.repaymentPlan = repaymentPlan;
  }


  public CustomerAccountDetail paymentsRemaining(Integer paymentsRemaining) {
    
    
    
    
    this.paymentsRemaining = paymentsRemaining;
    return this;
  }

   /**
   * (Mortgage/Loan) Number of payments remaining before loan is paid off
   * @return paymentsRemaining
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "45", value = "(Mortgage/Loan) Number of payments remaining before loan is paid off")

  public Integer getPaymentsRemaining() {
    return paymentsRemaining;
  }


  public void setPaymentsRemaining(Integer paymentsRemaining) {
    
    
    
    this.paymentsRemaining = paymentsRemaining;
  }


  public CustomerAccountDetail marginBalance(Double marginBalance) {
    
    
    
    
    this.marginBalance = marginBalance;
    return this;
  }

  public CustomerAccountDetail marginBalance(Integer marginBalance) {
    
    
    
    
    this.marginBalance = marginBalance.doubleValue();
    return this;
  }

   /**
   * (Investment) Net interest earned after deducting interest paid out
   * @return marginBalance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "456", value = "(Investment) Net interest earned after deducting interest paid out")

  public Double getMarginBalance() {
    return marginBalance;
  }


  public void setMarginBalance(Double marginBalance) {
    
    
    
    this.marginBalance = marginBalance;
  }


  public CustomerAccountDetail shortBalance(Double shortBalance) {
    
    
    
    
    this.shortBalance = shortBalance;
    return this;
  }

  public CustomerAccountDetail shortBalance(Integer shortBalance) {
    
    
    
    
    this.shortBalance = shortBalance.doubleValue();
    return this;
  }

   /**
   * (Investment) Sum of short balance
   * @return shortBalance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "12456.89", value = "(Investment) Sum of short balance")

  public Double getShortBalance() {
    return shortBalance;
  }


  public void setShortBalance(Double shortBalance) {
    
    
    
    this.shortBalance = shortBalance;
  }


  public CustomerAccountDetail availableCashBalance(Double availableCashBalance) {
    
    
    
    
    this.availableCashBalance = availableCashBalance;
    return this;
  }

  public CustomerAccountDetail availableCashBalance(Integer availableCashBalance) {
    
    
    
    
    this.availableCashBalance = availableCashBalance.doubleValue();
    return this;
  }

   /**
   * (Investment) Amount available for cash withdrawal
   * @return availableCashBalance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "3456.78", value = "(Investment) Amount available for cash withdrawal")

  public Double getAvailableCashBalance() {
    return availableCashBalance;
  }


  public void setAvailableCashBalance(Double availableCashBalance) {
    
    
    
    this.availableCashBalance = availableCashBalance;
  }


  public CustomerAccountDetail maturityValueAmount(Double maturityValueAmount) {
    
    
    
    
    this.maturityValueAmount = maturityValueAmount;
    return this;
  }

  public CustomerAccountDetail maturityValueAmount(Integer maturityValueAmount) {
    
    
    
    
    this.maturityValueAmount = maturityValueAmount.doubleValue();
    return this;
  }

   /**
   * (Investment) amount payable to an investor at maturity
   * @return maturityValueAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "34067.78", value = "(Investment) amount payable to an investor at maturity")

  public Double getMaturityValueAmount() {
    return maturityValueAmount;
  }


  public void setMaturityValueAmount(Double maturityValueAmount) {
    
    
    
    this.maturityValueAmount = maturityValueAmount;
  }


  public CustomerAccountDetail vestedBalance(Double vestedBalance) {
    
    
    
    
    this.vestedBalance = vestedBalance;
    return this;
  }

  public CustomerAccountDetail vestedBalance(Integer vestedBalance) {
    
    
    
    
    this.vestedBalance = vestedBalance.doubleValue();
    return this;
  }

   /**
   * (Investment) Vested amount in account
   * @return vestedBalance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "45000", value = "(Investment) Vested amount in account")

  public Double getVestedBalance() {
    return vestedBalance;
  }


  public void setVestedBalance(Double vestedBalance) {
    
    
    
    this.vestedBalance = vestedBalance;
  }


  public CustomerAccountDetail empMatchAmount(Double empMatchAmount) {
    
    
    
    
    this.empMatchAmount = empMatchAmount;
    return this;
  }

  public CustomerAccountDetail empMatchAmount(Integer empMatchAmount) {
    
    
    
    
    this.empMatchAmount = empMatchAmount.doubleValue();
    return this;
  }

   /**
   * (Investment) Employer matched contributions
   * @return empMatchAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "256.99", value = "(Investment) Employer matched contributions")

  public Double getEmpMatchAmount() {
    return empMatchAmount;
  }


  public void setEmpMatchAmount(Double empMatchAmount) {
    
    
    
    this.empMatchAmount = empMatchAmount;
  }


  public CustomerAccountDetail empPretaxContribAmount(Double empPretaxContribAmount) {
    
    
    
    
    this.empPretaxContribAmount = empPretaxContribAmount;
    return this;
  }

  public CustomerAccountDetail empPretaxContribAmount(Integer empPretaxContribAmount) {
    
    
    
    
    this.empPretaxContribAmount = empPretaxContribAmount.doubleValue();
    return this;
  }

   /**
   * (Investment) Employer pretax contribution amount
   * @return empPretaxContribAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "450", value = "(Investment) Employer pretax contribution amount")

  public Double getEmpPretaxContribAmount() {
    return empPretaxContribAmount;
  }


  public void setEmpPretaxContribAmount(Double empPretaxContribAmount) {
    
    
    
    this.empPretaxContribAmount = empPretaxContribAmount;
  }


  public CustomerAccountDetail empPretaxContribAmountYtd(Double empPretaxContribAmountYtd) {
    
    
    
    
    this.empPretaxContribAmountYtd = empPretaxContribAmountYtd;
    return this;
  }

  public CustomerAccountDetail empPretaxContribAmountYtd(Integer empPretaxContribAmountYtd) {
    
    
    
    
    this.empPretaxContribAmountYtd = empPretaxContribAmountYtd.doubleValue();
    return this;
  }

   /**
   * (Investment) Employer pretax contribution amount year to date
   * @return empPretaxContribAmountYtd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "700", value = "(Investment) Employer pretax contribution amount year to date")

  public Double getEmpPretaxContribAmountYtd() {
    return empPretaxContribAmountYtd;
  }


  public void setEmpPretaxContribAmountYtd(Double empPretaxContribAmountYtd) {
    
    
    
    this.empPretaxContribAmountYtd = empPretaxContribAmountYtd;
  }


  public CustomerAccountDetail contribTotalYtd(Double contribTotalYtd) {
    
    
    
    
    this.contribTotalYtd = contribTotalYtd;
    return this;
  }

  public CustomerAccountDetail contribTotalYtd(Integer contribTotalYtd) {
    
    
    
    
    this.contribTotalYtd = contribTotalYtd.doubleValue();
    return this;
  }

   /**
   * (Investment) Total year to date contributions
   * @return contribTotalYtd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2045", value = "(Investment) Total year to date contributions")

  public Double getContribTotalYtd() {
    return contribTotalYtd;
  }


  public void setContribTotalYtd(Double contribTotalYtd) {
    
    
    
    this.contribTotalYtd = contribTotalYtd;
  }


  public CustomerAccountDetail cashBalanceAmount(Double cashBalanceAmount) {
    
    
    
    
    this.cashBalanceAmount = cashBalanceAmount;
    return this;
  }

  public CustomerAccountDetail cashBalanceAmount(Integer cashBalanceAmount) {
    
    
    
    
    this.cashBalanceAmount = cashBalanceAmount.doubleValue();
    return this;
  }

   /**
   * (Investment) Cash balance of account
   * @return cashBalanceAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2000", value = "(Investment) Cash balance of account")

  public Double getCashBalanceAmount() {
    return cashBalanceAmount;
  }


  public void setCashBalanceAmount(Double cashBalanceAmount) {
    
    
    
    this.cashBalanceAmount = cashBalanceAmount;
  }


  public CustomerAccountDetail preTaxAmount(Double preTaxAmount) {
    
    
    
    
    this.preTaxAmount = preTaxAmount;
    return this;
  }

  public CustomerAccountDetail preTaxAmount(Integer preTaxAmount) {
    
    
    
    
    this.preTaxAmount = preTaxAmount.doubleValue();
    return this;
  }

   /**
   * (Investment) Pre-tax amount of total balance
   * @return preTaxAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "78564.99", value = "(Investment) Pre-tax amount of total balance")

  public Double getPreTaxAmount() {
    return preTaxAmount;
  }


  public void setPreTaxAmount(Double preTaxAmount) {
    
    
    
    this.preTaxAmount = preTaxAmount;
  }


  public CustomerAccountDetail afterTaxAmount(Double afterTaxAmount) {
    
    
    
    
    this.afterTaxAmount = afterTaxAmount;
    return this;
  }

  public CustomerAccountDetail afterTaxAmount(Integer afterTaxAmount) {
    
    
    
    
    this.afterTaxAmount = afterTaxAmount.doubleValue();
    return this;
  }

   /**
   * (Investment) After-tax amount of total balance
   * @return afterTaxAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "68564.99", value = "(Investment) After-tax amount of total balance")

  public Double getAfterTaxAmount() {
    return afterTaxAmount;
  }


  public void setAfterTaxAmount(Double afterTaxAmount) {
    
    
    
    this.afterTaxAmount = afterTaxAmount;
  }


  public CustomerAccountDetail matchAmount(Double matchAmount) {
    
    
    
    
    this.matchAmount = matchAmount;
    return this;
  }

  public CustomerAccountDetail matchAmount(Integer matchAmount) {
    
    
    
    
    this.matchAmount = matchAmount.doubleValue();
    return this;
  }

   /**
   * (Investment) Amount matched
   * @return matchAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "378", value = "(Investment) Amount matched")

  public Double getMatchAmount() {
    return matchAmount;
  }


  public void setMatchAmount(Double matchAmount) {
    
    
    
    this.matchAmount = matchAmount;
  }


  public CustomerAccountDetail profitSharingAmount(Double profitSharingAmount) {
    
    
    
    
    this.profitSharingAmount = profitSharingAmount;
    return this;
  }

  public CustomerAccountDetail profitSharingAmount(Integer profitSharingAmount) {
    
    
    
    
    this.profitSharingAmount = profitSharingAmount.doubleValue();
    return this;
  }

   /**
   * (Investment) Amount of balance for profit sharing
   * @return profitSharingAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "34678.89", value = "(Investment) Amount of balance for profit sharing")

  public Double getProfitSharingAmount() {
    return profitSharingAmount;
  }


  public void setProfitSharingAmount(Double profitSharingAmount) {
    
    
    
    this.profitSharingAmount = profitSharingAmount;
  }


  public CustomerAccountDetail rolloverAmount(Double rolloverAmount) {
    
    
    
    
    this.rolloverAmount = rolloverAmount;
    return this;
  }

  public CustomerAccountDetail rolloverAmount(Integer rolloverAmount) {
    
    
    
    
    this.rolloverAmount = rolloverAmount.doubleValue();
    return this;
  }

   /**
   * (Investment) Amount of balance rolled over from original account (401k, etc.)
   * @return rolloverAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "101234.67", value = "(Investment) Amount of balance rolled over from original account (401k, etc.)")

  public Double getRolloverAmount() {
    return rolloverAmount;
  }


  public void setRolloverAmount(Double rolloverAmount) {
    
    
    
    this.rolloverAmount = rolloverAmount;
  }


  public CustomerAccountDetail otherVestAmount(Double otherVestAmount) {
    
    
    
    
    this.otherVestAmount = otherVestAmount;
    return this;
  }

  public CustomerAccountDetail otherVestAmount(Integer otherVestAmount) {
    
    
    
    
    this.otherVestAmount = otherVestAmount.doubleValue();
    return this;
  }

   /**
   * (Investment) Other vested amount
   * @return otherVestAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "34000", value = "(Investment) Other vested amount")

  public Double getOtherVestAmount() {
    return otherVestAmount;
  }


  public void setOtherVestAmount(Double otherVestAmount) {
    
    
    
    this.otherVestAmount = otherVestAmount;
  }


  public CustomerAccountDetail otherNonvestAmount(Double otherNonvestAmount) {
    
    
    
    
    this.otherNonvestAmount = otherNonvestAmount;
    return this;
  }

  public CustomerAccountDetail otherNonvestAmount(Integer otherNonvestAmount) {
    
    
    
    
    this.otherNonvestAmount = otherNonvestAmount.doubleValue();
    return this;
  }

   /**
   * (Investment) Other nonvested amount
   * @return otherNonvestAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "26000", value = "(Investment) Other nonvested amount")

  public Double getOtherNonvestAmount() {
    return otherNonvestAmount;
  }


  public void setOtherNonvestAmount(Double otherNonvestAmount) {
    
    
    
    this.otherNonvestAmount = otherNonvestAmount;
  }


  public CustomerAccountDetail currentLoanBalance(Double currentLoanBalance) {
    
    
    
    
    this.currentLoanBalance = currentLoanBalance;
    return this;
  }

  public CustomerAccountDetail currentLoanBalance(Integer currentLoanBalance) {
    
    
    
    
    this.currentLoanBalance = currentLoanBalance.doubleValue();
    return this;
  }

   /**
   * (Investment) Current loan balance
   * @return currentLoanBalance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "345789.23", value = "(Investment) Current loan balance")

  public Double getCurrentLoanBalance() {
    return currentLoanBalance;
  }


  public void setCurrentLoanBalance(Double currentLoanBalance) {
    
    
    
    this.currentLoanBalance = currentLoanBalance;
  }


  public CustomerAccountDetail loanRate(Double loanRate) {
    
    
    
    
    this.loanRate = loanRate;
    return this;
  }

  public CustomerAccountDetail loanRate(Integer loanRate) {
    
    
    
    
    this.loanRate = loanRate.doubleValue();
    return this;
  }

   /**
   * (Investment) Interest rate of loan
   * @return loanRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "3.275", value = "(Investment) Interest rate of loan")

  public Double getLoanRate() {
    return loanRate;
  }


  public void setLoanRate(Double loanRate) {
    
    
    
    this.loanRate = loanRate;
  }


  public CustomerAccountDetail buyPower(Double buyPower) {
    
    
    
    
    this.buyPower = buyPower;
    return this;
  }

  public CustomerAccountDetail buyPower(Integer buyPower) {
    
    
    
    
    this.buyPower = buyPower.doubleValue();
    return this;
  }

   /**
   * (Investment) Money available to buy securities
   * @return buyPower
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "34567.89", value = "(Investment) Money available to buy securities")

  public Double getBuyPower() {
    return buyPower;
  }


  public void setBuyPower(Double buyPower) {
    
    
    
    this.buyPower = buyPower;
  }


  public CustomerAccountDetail rolloverLtd(Double rolloverLtd) {
    
    
    
    
    this.rolloverLtd = rolloverLtd;
    return this;
  }

  public CustomerAccountDetail rolloverLtd(Integer rolloverLtd) {
    
    
    
    
    this.rolloverLtd = rolloverLtd.doubleValue();
    return this;
  }

   /**
   * (Investment) Life to date of money rolled over
   * @return rolloverLtd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "23456.78", value = "(Investment) Life to date of money rolled over")

  public Double getRolloverLtd() {
    return rolloverLtd;
  }


  public void setRolloverLtd(Double rolloverLtd) {
    
    
    
    this.rolloverLtd = rolloverLtd;
  }


  public CustomerAccountDetail loanAwardId(String loanAwardId) {
    
    
    
    
    this.loanAwardId = loanAwardId;
    return this;
  }

   /**
   * (Student Loan) The federal unique loan identifying number
   * @return loanAwardId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1234568", value = "(Student Loan) The federal unique loan identifying number")

  public String getLoanAwardId() {
    return loanAwardId;
  }


  public void setLoanAwardId(String loanAwardId) {
    
    
    
    this.loanAwardId = loanAwardId;
  }


  public CustomerAccountDetail originalInterestRate(Double originalInterestRate) {
    
    
    
    
    this.originalInterestRate = originalInterestRate;
    return this;
  }

  public CustomerAccountDetail originalInterestRate(Integer originalInterestRate) {
    
    
    
    
    this.originalInterestRate = originalInterestRate.doubleValue();
    return this;
  }

   /**
   * (Student Loan) The original interest rate to which the loan was disbursed, in APY
   * @return originalInterestRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "12", value = "(Student Loan) The original interest rate to which the loan was disbursed, in APY")

  public Double getOriginalInterestRate() {
    return originalInterestRate;
  }


  public void setOriginalInterestRate(Double originalInterestRate) {
    
    
    
    this.originalInterestRate = originalInterestRate;
  }


  public CustomerAccountDetail guarantor(String guarantor) {
    
    
    
    
    this.guarantor = guarantor;
    return this;
  }

   /**
   * (Student Loan) The financial institution guarantor of the loan (who will pay the loan amount to the owner if the borrower defaults)
   * @return guarantor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "FinBank", value = "(Student Loan) The financial institution guarantor of the loan (who will pay the loan amount to the owner if the borrower defaults)")

  public String getGuarantor() {
    return guarantor;
  }


  public void setGuarantor(String guarantor) {
    
    
    
    this.guarantor = guarantor;
  }


  public CustomerAccountDetail owner(String owner) {
    
    
    
    
    this.owner = owner;
    return this;
  }

   /**
   * (Student Loan) Owner of the loan
   * @return owner
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "FinBank", value = "(Student Loan) Owner of the loan")

  public String getOwner() {
    return owner;
  }


  public void setOwner(String owner) {
    
    
    
    this.owner = owner;
  }


  public CustomerAccountDetail interestSubsidyType(String interestSubsidyType) {
    
    
    
    
    this.interestSubsidyType = interestSubsidyType;
    return this;
  }

   /**
   * (Student Loan) The indication of the presence of an interest subsidy (i.e. subsidized)
   * @return interestSubsidyType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Subsidy type", value = "(Student Loan) The indication of the presence of an interest subsidy (i.e. subsidized)")

  public String getInterestSubsidyType() {
    return interestSubsidyType;
  }


  public void setInterestSubsidyType(String interestSubsidyType) {
    
    
    
    this.interestSubsidyType = interestSubsidyType;
  }


  public CustomerAccountDetail interestBalance(Double interestBalance) {
    
    
    
    
    this.interestBalance = interestBalance;
    return this;
  }

  public CustomerAccountDetail interestBalance(Integer interestBalance) {
    
    
    
    
    this.interestBalance = interestBalance.doubleValue();
    return this;
  }

   /**
   * (Student Loan) The total outstanding interest balance
   * @return interestBalance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2000", value = "(Student Loan) The total outstanding interest balance")

  public Double getInterestBalance() {
    return interestBalance;
  }


  public void setInterestBalance(Double interestBalance) {
    
    
    
    this.interestBalance = interestBalance;
  }


  public CustomerAccountDetail remainingTermOfMl(Double remainingTermOfMl) {
    
    
    
    
    this.remainingTermOfMl = remainingTermOfMl;
    return this;
  }

  public CustomerAccountDetail remainingTermOfMl(Integer remainingTermOfMl) {
    
    
    
    
    this.remainingTermOfMl = remainingTermOfMl.doubleValue();
    return this;
  }

   /**
   * (Student Loan) The number of months still outstanding on a loan
   * @return remainingTermOfMl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2", value = "(Student Loan) The number of months still outstanding on a loan")

  public Double getRemainingTermOfMl() {
    return remainingTermOfMl;
  }


  public void setRemainingTermOfMl(Double remainingTermOfMl) {
    
    
    
    this.remainingTermOfMl = remainingTermOfMl;
  }


  public CustomerAccountDetail initialInterestRate(Double initialInterestRate) {
    
    
    
    
    this.initialInterestRate = initialInterestRate;
    return this;
  }

  public CustomerAccountDetail initialInterestRate(Integer initialInterestRate) {
    
    
    
    
    this.initialInterestRate = initialInterestRate.doubleValue();
    return this;
  }

   /**
   * (Student Loan) Initial interest rate of loan
   * @return initialInterestRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "34567.89", value = "(Student Loan) Initial interest rate of loan")

  public Double getInitialInterestRate() {
    return initialInterestRate;
  }


  public void setInitialInterestRate(Double initialInterestRate) {
    
    
    
    this.initialInterestRate = initialInterestRate;
  }


  public CustomerAccountDetail feesBalance(Double feesBalance) {
    
    
    
    
    this.feesBalance = feesBalance;
    return this;
  }

  public CustomerAccountDetail feesBalance(Integer feesBalance) {
    
    
    
    
    this.feesBalance = feesBalance.doubleValue();
    return this;
  }

   /**
   * (Student Loan) The total outstanding fees balance
   * @return feesBalance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "150", value = "(Student Loan) The total outstanding fees balance")

  public Double getFeesBalance() {
    return feesBalance;
  }


  public void setFeesBalance(Double feesBalance) {
    
    
    
    this.feesBalance = feesBalance;
  }


  public CustomerAccountDetail loanYtdInterestPaid(Double loanYtdInterestPaid) {
    
    
    
    
    this.loanYtdInterestPaid = loanYtdInterestPaid;
    return this;
  }

  public CustomerAccountDetail loanYtdInterestPaid(Integer loanYtdInterestPaid) {
    
    
    
    
    this.loanYtdInterestPaid = loanYtdInterestPaid.doubleValue();
    return this;
  }

   /**
   * (Student Loan) Loan interest paid year-to-date
   * @return loanYtdInterestPaid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "5623.23", value = "(Student Loan) Loan interest paid year-to-date")

  public Double getLoanYtdInterestPaid() {
    return loanYtdInterestPaid;
  }


  public void setLoanYtdInterestPaid(Double loanYtdInterestPaid) {
    
    
    
    this.loanYtdInterestPaid = loanYtdInterestPaid;
  }


  public CustomerAccountDetail loanYtdFeesPaid(Double loanYtdFeesPaid) {
    
    
    
    
    this.loanYtdFeesPaid = loanYtdFeesPaid;
    return this;
  }

  public CustomerAccountDetail loanYtdFeesPaid(Integer loanYtdFeesPaid) {
    
    
    
    
    this.loanYtdFeesPaid = loanYtdFeesPaid.doubleValue();
    return this;
  }

   /**
   * (Student Loan) Loan fees paid year-to-date
   * @return loanYtdFeesPaid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "5621.23", value = "(Student Loan) Loan fees paid year-to-date")

  public Double getLoanYtdFeesPaid() {
    return loanYtdFeesPaid;
  }


  public void setLoanYtdFeesPaid(Double loanYtdFeesPaid) {
    
    
    
    this.loanYtdFeesPaid = loanYtdFeesPaid;
  }


  public CustomerAccountDetail loanYtdPrincipalPaid(Double loanYtdPrincipalPaid) {
    
    
    
    
    this.loanYtdPrincipalPaid = loanYtdPrincipalPaid;
    return this;
  }

  public CustomerAccountDetail loanYtdPrincipalPaid(Integer loanYtdPrincipalPaid) {
    
    
    
    
    this.loanYtdPrincipalPaid = loanYtdPrincipalPaid.doubleValue();
    return this;
  }

   /**
   * (Student Loan) Loan principal paid year-to-date
   * @return loanYtdPrincipalPaid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "5621.23", value = "(Student Loan) Loan principal paid year-to-date")

  public Double getLoanYtdPrincipalPaid() {
    return loanYtdPrincipalPaid;
  }


  public void setLoanYtdPrincipalPaid(Double loanYtdPrincipalPaid) {
    
    
    
    this.loanYtdPrincipalPaid = loanYtdPrincipalPaid;
  }


  public CustomerAccountDetail loanStatus(String loanStatus) {
    
    
    
    
    this.loanStatus = loanStatus;
    return this;
  }

   /**
   * (Student Loan) The repayment status phase (i.e. In School, Grace, Repayment, Deferment, Forbearance)
   * @return loanStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Deferment", value = "(Student Loan) The repayment status phase (i.e. In School, Grace, Repayment, Deferment, Forbearance)")

  public String getLoanStatus() {
    return loanStatus;
  }


  public void setLoanStatus(String loanStatus) {
    
    
    
    this.loanStatus = loanStatus;
  }


  public CustomerAccountDetail loanStatusStartDate(Long loanStatusStartDate) {
    
    
    
    
    this.loanStatusStartDate = loanStatusStartDate;
    return this;
  }

   /**
   * (Student Loan) The start date of the current status. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return loanStatusStartDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1607450357", value = "(Student Loan) The start date of the current status. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).")

  public Long getLoanStatusStartDate() {
    return loanStatusStartDate;
  }


  public void setLoanStatusStartDate(Long loanStatusStartDate) {
    
    
    
    this.loanStatusStartDate = loanStatusStartDate;
  }


  public CustomerAccountDetail loanStatusEndDate(Long loanStatusEndDate) {
    
    
    
    
    this.loanStatusEndDate = loanStatusEndDate;
    return this;
  }

   /**
   * (Student Loan) The end date of the current status. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return loanStatusEndDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1607450357", value = "(Student Loan) The end date of the current status. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).")

  public Long getLoanStatusEndDate() {
    return loanStatusEndDate;
  }


  public void setLoanStatusEndDate(Long loanStatusEndDate) {
    
    
    
    this.loanStatusEndDate = loanStatusEndDate;
  }


  public CustomerAccountDetail weightedInterestRate(Double weightedInterestRate) {
    
    
    
    
    this.weightedInterestRate = weightedInterestRate;
    return this;
  }

  public CustomerAccountDetail weightedInterestRate(Integer weightedInterestRate) {
    
    
    
    
    this.weightedInterestRate = weightedInterestRate.doubleValue();
    return this;
  }

   /**
   * (Student Loan) The interest rate of multiple interest rates and balances at the group level, in APY
   * @return weightedInterestRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "12", value = "(Student Loan) The interest rate of multiple interest rates and balances at the group level, in APY")

  public Double getWeightedInterestRate() {
    return weightedInterestRate;
  }


  public void setWeightedInterestRate(Double weightedInterestRate) {
    
    
    
    this.weightedInterestRate = weightedInterestRate;
  }


  public CustomerAccountDetail repaymentPlanStartDate(Long repaymentPlanStartDate) {
    
    
    
    
    this.repaymentPlanStartDate = repaymentPlanStartDate;
    return this;
  }

   /**
   * (Student Loan) The start date of the current repayment plan. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return repaymentPlanStartDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1607450357", value = "(Student Loan) The start date of the current repayment plan. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).")

  public Long getRepaymentPlanStartDate() {
    return repaymentPlanStartDate;
  }


  public void setRepaymentPlanStartDate(Long repaymentPlanStartDate) {
    
    
    
    this.repaymentPlanStartDate = repaymentPlanStartDate;
  }


  public CustomerAccountDetail repaymentPlanEndDate(Long repaymentPlanEndDate) {
    
    
    
    
    this.repaymentPlanEndDate = repaymentPlanEndDate;
    return this;
  }

   /**
   * (Student Loan) The end date of the current repayment plan. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return repaymentPlanEndDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1607450357", value = "(Student Loan) The end date of the current repayment plan. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).")

  public Long getRepaymentPlanEndDate() {
    return repaymentPlanEndDate;
  }


  public void setRepaymentPlanEndDate(Long repaymentPlanEndDate) {
    
    
    
    this.repaymentPlanEndDate = repaymentPlanEndDate;
  }


  public CustomerAccountDetail expectedPayoffDate(Long expectedPayoffDate) {
    
    
    
    
    this.expectedPayoffDate = expectedPayoffDate;
    return this;
  }

   /**
   * (Student Loan) The expected date of the payoff date. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return expectedPayoffDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1607450357", value = "(Student Loan) The expected date of the payoff date. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).")

  public Long getExpectedPayoffDate() {
    return expectedPayoffDate;
  }


  public void setExpectedPayoffDate(Long expectedPayoffDate) {
    
    
    
    this.expectedPayoffDate = expectedPayoffDate;
  }


  public CustomerAccountDetail outOfSchoolDate(Long outOfSchoolDate) {
    
    
    
    
    this.outOfSchoolDate = outOfSchoolDate;
    return this;
  }

   /**
   * (Student Loan) The date the borrower graduated or dropped below half-time enrollment in school. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return outOfSchoolDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1607450357", value = "(Student Loan) The date the borrower graduated or dropped below half-time enrollment in school. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).")

  public Long getOutOfSchoolDate() {
    return outOfSchoolDate;
  }


  public void setOutOfSchoolDate(Long outOfSchoolDate) {
    
    
    
    this.outOfSchoolDate = outOfSchoolDate;
  }


  public CustomerAccountDetail convertToRepayment(Long convertToRepayment) {
    
    
    
    
    this.convertToRepayment = convertToRepayment;
    return this;
  }

   /**
   * (Student Loan) The date the loan enters into repayment. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
   * @return convertToRepayment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1607450357", value = "(Student Loan) The date the loan enters into repayment. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).")

  public Long getConvertToRepayment() {
    return convertToRepayment;
  }


  public void setConvertToRepayment(Long convertToRepayment) {
    
    
    
    this.convertToRepayment = convertToRepayment;
  }


  public CustomerAccountDetail daysDelinquent(Integer daysDelinquent) {
    
    
    
    
    this.daysDelinquent = daysDelinquent;
    return this;
  }

   /**
   * (Student Loan) The number of days past a due date that a payment should have been made
   * @return daysDelinquent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "5", value = "(Student Loan) The number of days past a due date that a payment should have been made")

  public Integer getDaysDelinquent() {
    return daysDelinquent;
  }


  public void setDaysDelinquent(Integer daysDelinquent) {
    
    
    
    this.daysDelinquent = daysDelinquent;
  }


  public CustomerAccountDetail totalPrincipalPaid(Double totalPrincipalPaid) {
    
    
    
    
    this.totalPrincipalPaid = totalPrincipalPaid;
    return this;
  }

  public CustomerAccountDetail totalPrincipalPaid(Integer totalPrincipalPaid) {
    
    
    
    
    this.totalPrincipalPaid = totalPrincipalPaid.doubleValue();
    return this;
  }

   /**
   * (Student Loan) The total amount paid towards the principal balance
   * @return totalPrincipalPaid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "15000", value = "(Student Loan) The total amount paid towards the principal balance")

  public Double getTotalPrincipalPaid() {
    return totalPrincipalPaid;
  }


  public void setTotalPrincipalPaid(Double totalPrincipalPaid) {
    
    
    
    this.totalPrincipalPaid = totalPrincipalPaid;
  }


  public CustomerAccountDetail totalInterestPaid(Double totalInterestPaid) {
    
    
    
    
    this.totalInterestPaid = totalInterestPaid;
    return this;
  }

  public CustomerAccountDetail totalInterestPaid(Integer totalInterestPaid) {
    
    
    
    
    this.totalInterestPaid = totalInterestPaid.doubleValue();
    return this;
  }

   /**
   * (Student Loan) The total amount paid towards interest
   * @return totalInterestPaid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1125", value = "(Student Loan) The total amount paid towards interest")

  public Double getTotalInterestPaid() {
    return totalInterestPaid;
  }


  public void setTotalInterestPaid(Double totalInterestPaid) {
    
    
    
    this.totalInterestPaid = totalInterestPaid;
  }


  public CustomerAccountDetail totalAmountPaid(Double totalAmountPaid) {
    
    
    
    
    this.totalAmountPaid = totalAmountPaid;
    return this;
  }

  public CustomerAccountDetail totalAmountPaid(Integer totalAmountPaid) {
    
    
    
    
    this.totalAmountPaid = totalAmountPaid.doubleValue();
    return this;
  }

   /**
   * (Student Loan) The total amount paid
   * @return totalAmountPaid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "16125", value = "(Student Loan) The total amount paid")

  public Double getTotalAmountPaid() {
    return totalAmountPaid;
  }


  public void setTotalAmountPaid(Double totalAmountPaid) {
    
    
    
    this.totalAmountPaid = totalAmountPaid;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the CustomerAccountDetail instance itself
   */
  public CustomerAccountDetail putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerAccountDetail customerAccountDetail = (CustomerAccountDetail) o;
    return Objects.equals(this.description, customerAccountDetail.description) &&
        Objects.equals(this.dateAsOf, customerAccountDetail.dateAsOf) &&
        Objects.equals(this.availableBalanceAmount, customerAccountDetail.availableBalanceAmount) &&
        Objects.equals(this.openDate, customerAccountDetail.openDate) &&
        Objects.equals(this.periodStartDate, customerAccountDetail.periodStartDate) &&
        Objects.equals(this.periodEndDate, customerAccountDetail.periodEndDate) &&
        Objects.equals(this.periodInterestRate, customerAccountDetail.periodInterestRate) &&
        Objects.equals(this.periodDepositAmount, customerAccountDetail.periodDepositAmount) &&
        Objects.equals(this.periodInterestAmount, customerAccountDetail.periodInterestAmount) &&
        Objects.equals(this.interestYtdAmount, customerAccountDetail.interestYtdAmount) &&
        Objects.equals(this.interestPriorYtdAmount, customerAccountDetail.interestPriorYtdAmount) &&
        Objects.equals(this.maturityDate, customerAccountDetail.maturityDate) &&
        Objects.equals(this.interestRate, customerAccountDetail.interestRate) &&
        Objects.equals(this.creditAvailableAmount, customerAccountDetail.creditAvailableAmount) &&
        Objects.equals(this.creditMaxAmount, customerAccountDetail.creditMaxAmount) &&
        Objects.equals(this.cashAdvanceAvailableAmount, customerAccountDetail.cashAdvanceAvailableAmount) &&
        Objects.equals(this.cashAdvanceMaxAmount, customerAccountDetail.cashAdvanceMaxAmount) &&
        Objects.equals(this.cashAdvanceBalance, customerAccountDetail.cashAdvanceBalance) &&
        Objects.equals(this.cashAdvanceInterestRate, customerAccountDetail.cashAdvanceInterestRate) &&
        Objects.equals(this.currentBalance, customerAccountDetail.currentBalance) &&
        Objects.equals(this.paymentMinAmount, customerAccountDetail.paymentMinAmount) &&
        Objects.equals(this.paymentDueDate, customerAccountDetail.paymentDueDate) &&
        Objects.equals(this.previousBalance, customerAccountDetail.previousBalance) &&
        Objects.equals(this.statementStartDate, customerAccountDetail.statementStartDate) &&
        Objects.equals(this.statementEndDate, customerAccountDetail.statementEndDate) &&
        Objects.equals(this.statementPurchaseAmount, customerAccountDetail.statementPurchaseAmount) &&
        Objects.equals(this.statementFinanceAmount, customerAccountDetail.statementFinanceAmount) &&
        Objects.equals(this.statementCreditAmount, customerAccountDetail.statementCreditAmount) &&
        Objects.equals(this.rewardEarnedBalance, customerAccountDetail.rewardEarnedBalance) &&
        Objects.equals(this.pastDueAmount, customerAccountDetail.pastDueAmount) &&
        Objects.equals(this.lastPaymentAmount, customerAccountDetail.lastPaymentAmount) &&
        Objects.equals(this.lastPaymentDate, customerAccountDetail.lastPaymentDate) &&
        Objects.equals(this.statementCloseBalance, customerAccountDetail.statementCloseBalance) &&
        Objects.equals(this.termOfMl, customerAccountDetail.termOfMl) &&
        Objects.equals(this.mlHolderName, customerAccountDetail.mlHolderName) &&
        Objects.equals(this.lateFeeAmount, customerAccountDetail.lateFeeAmount) &&
        Objects.equals(this.payoffAmount, customerAccountDetail.payoffAmount) &&
        Objects.equals(this.payoffAmountDate, customerAccountDetail.payoffAmountDate) &&
        Objects.equals(this.originalMaturityDate, customerAccountDetail.originalMaturityDate) &&
        Objects.equals(this.principalBalance, customerAccountDetail.principalBalance) &&
        Objects.equals(this.escrowBalance, customerAccountDetail.escrowBalance) &&
        Objects.equals(this.interestPeriod, customerAccountDetail.interestPeriod) &&
        Objects.equals(this.initialMlAmount, customerAccountDetail.initialMlAmount) &&
        Objects.equals(this.initialMlDate, customerAccountDetail.initialMlDate) &&
        Objects.equals(this.nextPaymentPrincipalAmount, customerAccountDetail.nextPaymentPrincipalAmount) &&
        Objects.equals(this.nextPaymentInterestAmount, customerAccountDetail.nextPaymentInterestAmount) &&
        Objects.equals(this.nextPayment, customerAccountDetail.nextPayment) &&
        Objects.equals(this.nextPaymentDate, customerAccountDetail.nextPaymentDate) &&
        Objects.equals(this.lastPaymentDueDate, customerAccountDetail.lastPaymentDueDate) &&
        Objects.equals(this.lastPaymentReceiveDate, customerAccountDetail.lastPaymentReceiveDate) &&
        Objects.equals(this.lastPaymentPrincipalAmount, customerAccountDetail.lastPaymentPrincipalAmount) &&
        Objects.equals(this.lastPaymentInterestAmount, customerAccountDetail.lastPaymentInterestAmount) &&
        Objects.equals(this.lastPaymentEscrowAmount, customerAccountDetail.lastPaymentEscrowAmount) &&
        Objects.equals(this.lastPaymentLastFeeAmount, customerAccountDetail.lastPaymentLastFeeAmount) &&
        Objects.equals(this.lastPaymentLateCharge, customerAccountDetail.lastPaymentLateCharge) &&
        Objects.equals(this.ytdPrincipalPaid, customerAccountDetail.ytdPrincipalPaid) &&
        Objects.equals(this.ytdInterestPaid, customerAccountDetail.ytdInterestPaid) &&
        Objects.equals(this.ytdInsurancePaid, customerAccountDetail.ytdInsurancePaid) &&
        Objects.equals(this.ytdTaxPaid, customerAccountDetail.ytdTaxPaid) &&
        Objects.equals(this.autoPayEnrolled, customerAccountDetail.autoPayEnrolled) &&
        Objects.equals(this.marginAllowed, customerAccountDetail.marginAllowed) &&
        Objects.equals(this.cashAccountAllowed, customerAccountDetail.cashAccountAllowed) &&
        Objects.equals(this.collateral, customerAccountDetail.collateral) &&
        Objects.equals(this.currentSchool, customerAccountDetail.currentSchool) &&
        Objects.equals(this.firstPaymentDate, customerAccountDetail.firstPaymentDate) &&
        Objects.equals(this.firstMortgage, customerAccountDetail.firstMortgage) &&
        Objects.equals(this.loanPaymentFreq, customerAccountDetail.loanPaymentFreq) &&
        Objects.equals(this.originalSchool, customerAccountDetail.originalSchool) &&
        Objects.equals(this.recurringPaymentAmount, customerAccountDetail.recurringPaymentAmount) &&
        Objects.equals(this.lender, customerAccountDetail.lender) &&
        Objects.equals(this.endingBalanceAmount, customerAccountDetail.endingBalanceAmount) &&
        Objects.equals(this.loanTermType, customerAccountDetail.loanTermType) &&
        Objects.equals(this.paymentsMade, customerAccountDetail.paymentsMade) &&
        Objects.equals(this.balloonAmount, customerAccountDetail.balloonAmount) &&
        Objects.equals(this.projectedInterest, customerAccountDetail.projectedInterest) &&
        Objects.equals(this.interestPaidLtd, customerAccountDetail.interestPaidLtd) &&
        Objects.equals(this.interestRateType, customerAccountDetail.interestRateType) &&
        Objects.equals(this.loanPaymentType, customerAccountDetail.loanPaymentType) &&
        Objects.equals(this.repaymentPlan, customerAccountDetail.repaymentPlan) &&
        Objects.equals(this.paymentsRemaining, customerAccountDetail.paymentsRemaining) &&
        Objects.equals(this.marginBalance, customerAccountDetail.marginBalance) &&
        Objects.equals(this.shortBalance, customerAccountDetail.shortBalance) &&
        Objects.equals(this.availableCashBalance, customerAccountDetail.availableCashBalance) &&
        Objects.equals(this.maturityValueAmount, customerAccountDetail.maturityValueAmount) &&
        Objects.equals(this.vestedBalance, customerAccountDetail.vestedBalance) &&
        Objects.equals(this.empMatchAmount, customerAccountDetail.empMatchAmount) &&
        Objects.equals(this.empPretaxContribAmount, customerAccountDetail.empPretaxContribAmount) &&
        Objects.equals(this.empPretaxContribAmountYtd, customerAccountDetail.empPretaxContribAmountYtd) &&
        Objects.equals(this.contribTotalYtd, customerAccountDetail.contribTotalYtd) &&
        Objects.equals(this.cashBalanceAmount, customerAccountDetail.cashBalanceAmount) &&
        Objects.equals(this.preTaxAmount, customerAccountDetail.preTaxAmount) &&
        Objects.equals(this.afterTaxAmount, customerAccountDetail.afterTaxAmount) &&
        Objects.equals(this.matchAmount, customerAccountDetail.matchAmount) &&
        Objects.equals(this.profitSharingAmount, customerAccountDetail.profitSharingAmount) &&
        Objects.equals(this.rolloverAmount, customerAccountDetail.rolloverAmount) &&
        Objects.equals(this.otherVestAmount, customerAccountDetail.otherVestAmount) &&
        Objects.equals(this.otherNonvestAmount, customerAccountDetail.otherNonvestAmount) &&
        Objects.equals(this.currentLoanBalance, customerAccountDetail.currentLoanBalance) &&
        Objects.equals(this.loanRate, customerAccountDetail.loanRate) &&
        Objects.equals(this.buyPower, customerAccountDetail.buyPower) &&
        Objects.equals(this.rolloverLtd, customerAccountDetail.rolloverLtd) &&
        Objects.equals(this.loanAwardId, customerAccountDetail.loanAwardId) &&
        Objects.equals(this.originalInterestRate, customerAccountDetail.originalInterestRate) &&
        Objects.equals(this.guarantor, customerAccountDetail.guarantor) &&
        Objects.equals(this.owner, customerAccountDetail.owner) &&
        Objects.equals(this.interestSubsidyType, customerAccountDetail.interestSubsidyType) &&
        Objects.equals(this.interestBalance, customerAccountDetail.interestBalance) &&
        Objects.equals(this.remainingTermOfMl, customerAccountDetail.remainingTermOfMl) &&
        Objects.equals(this.initialInterestRate, customerAccountDetail.initialInterestRate) &&
        Objects.equals(this.feesBalance, customerAccountDetail.feesBalance) &&
        Objects.equals(this.loanYtdInterestPaid, customerAccountDetail.loanYtdInterestPaid) &&
        Objects.equals(this.loanYtdFeesPaid, customerAccountDetail.loanYtdFeesPaid) &&
        Objects.equals(this.loanYtdPrincipalPaid, customerAccountDetail.loanYtdPrincipalPaid) &&
        Objects.equals(this.loanStatus, customerAccountDetail.loanStatus) &&
        Objects.equals(this.loanStatusStartDate, customerAccountDetail.loanStatusStartDate) &&
        Objects.equals(this.loanStatusEndDate, customerAccountDetail.loanStatusEndDate) &&
        Objects.equals(this.weightedInterestRate, customerAccountDetail.weightedInterestRate) &&
        Objects.equals(this.repaymentPlanStartDate, customerAccountDetail.repaymentPlanStartDate) &&
        Objects.equals(this.repaymentPlanEndDate, customerAccountDetail.repaymentPlanEndDate) &&
        Objects.equals(this.expectedPayoffDate, customerAccountDetail.expectedPayoffDate) &&
        Objects.equals(this.outOfSchoolDate, customerAccountDetail.outOfSchoolDate) &&
        Objects.equals(this.convertToRepayment, customerAccountDetail.convertToRepayment) &&
        Objects.equals(this.daysDelinquent, customerAccountDetail.daysDelinquent) &&
        Objects.equals(this.totalPrincipalPaid, customerAccountDetail.totalPrincipalPaid) &&
        Objects.equals(this.totalInterestPaid, customerAccountDetail.totalInterestPaid) &&
        Objects.equals(this.totalAmountPaid, customerAccountDetail.totalAmountPaid)&&
        Objects.equals(this.additionalProperties, customerAccountDetail.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, dateAsOf, availableBalanceAmount, openDate, periodStartDate, periodEndDate, periodInterestRate, periodDepositAmount, periodInterestAmount, interestYtdAmount, interestPriorYtdAmount, maturityDate, interestRate, creditAvailableAmount, creditMaxAmount, cashAdvanceAvailableAmount, cashAdvanceMaxAmount, cashAdvanceBalance, cashAdvanceInterestRate, currentBalance, paymentMinAmount, paymentDueDate, previousBalance, statementStartDate, statementEndDate, statementPurchaseAmount, statementFinanceAmount, statementCreditAmount, rewardEarnedBalance, pastDueAmount, lastPaymentAmount, lastPaymentDate, statementCloseBalance, termOfMl, mlHolderName, lateFeeAmount, payoffAmount, payoffAmountDate, originalMaturityDate, principalBalance, escrowBalance, interestPeriod, initialMlAmount, initialMlDate, nextPaymentPrincipalAmount, nextPaymentInterestAmount, nextPayment, nextPaymentDate, lastPaymentDueDate, lastPaymentReceiveDate, lastPaymentPrincipalAmount, lastPaymentInterestAmount, lastPaymentEscrowAmount, lastPaymentLastFeeAmount, lastPaymentLateCharge, ytdPrincipalPaid, ytdInterestPaid, ytdInsurancePaid, ytdTaxPaid, autoPayEnrolled, marginAllowed, cashAccountAllowed, collateral, currentSchool, firstPaymentDate, firstMortgage, loanPaymentFreq, originalSchool, recurringPaymentAmount, lender, endingBalanceAmount, loanTermType, paymentsMade, balloonAmount, projectedInterest, interestPaidLtd, interestRateType, loanPaymentType, repaymentPlan, paymentsRemaining, marginBalance, shortBalance, availableCashBalance, maturityValueAmount, vestedBalance, empMatchAmount, empPretaxContribAmount, empPretaxContribAmountYtd, contribTotalYtd, cashBalanceAmount, preTaxAmount, afterTaxAmount, matchAmount, profitSharingAmount, rolloverAmount, otherVestAmount, otherNonvestAmount, currentLoanBalance, loanRate, buyPower, rolloverLtd, loanAwardId, originalInterestRate, guarantor, owner, interestSubsidyType, interestBalance, remainingTermOfMl, initialInterestRate, feesBalance, loanYtdInterestPaid, loanYtdFeesPaid, loanYtdPrincipalPaid, loanStatus, loanStatusStartDate, loanStatusEndDate, weightedInterestRate, repaymentPlanStartDate, repaymentPlanEndDate, expectedPayoffDate, outOfSchoolDate, convertToRepayment, daysDelinquent, totalPrincipalPaid, totalInterestPaid, totalAmountPaid, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerAccountDetail {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    dateAsOf: ").append(toIndentedString(dateAsOf)).append("\n");
    sb.append("    availableBalanceAmount: ").append(toIndentedString(availableBalanceAmount)).append("\n");
    sb.append("    openDate: ").append(toIndentedString(openDate)).append("\n");
    sb.append("    periodStartDate: ").append(toIndentedString(periodStartDate)).append("\n");
    sb.append("    periodEndDate: ").append(toIndentedString(periodEndDate)).append("\n");
    sb.append("    periodInterestRate: ").append(toIndentedString(periodInterestRate)).append("\n");
    sb.append("    periodDepositAmount: ").append(toIndentedString(periodDepositAmount)).append("\n");
    sb.append("    periodInterestAmount: ").append(toIndentedString(periodInterestAmount)).append("\n");
    sb.append("    interestYtdAmount: ").append(toIndentedString(interestYtdAmount)).append("\n");
    sb.append("    interestPriorYtdAmount: ").append(toIndentedString(interestPriorYtdAmount)).append("\n");
    sb.append("    maturityDate: ").append(toIndentedString(maturityDate)).append("\n");
    sb.append("    interestRate: ").append(toIndentedString(interestRate)).append("\n");
    sb.append("    creditAvailableAmount: ").append(toIndentedString(creditAvailableAmount)).append("\n");
    sb.append("    creditMaxAmount: ").append(toIndentedString(creditMaxAmount)).append("\n");
    sb.append("    cashAdvanceAvailableAmount: ").append(toIndentedString(cashAdvanceAvailableAmount)).append("\n");
    sb.append("    cashAdvanceMaxAmount: ").append(toIndentedString(cashAdvanceMaxAmount)).append("\n");
    sb.append("    cashAdvanceBalance: ").append(toIndentedString(cashAdvanceBalance)).append("\n");
    sb.append("    cashAdvanceInterestRate: ").append(toIndentedString(cashAdvanceInterestRate)).append("\n");
    sb.append("    currentBalance: ").append(toIndentedString(currentBalance)).append("\n");
    sb.append("    paymentMinAmount: ").append(toIndentedString(paymentMinAmount)).append("\n");
    sb.append("    paymentDueDate: ").append(toIndentedString(paymentDueDate)).append("\n");
    sb.append("    previousBalance: ").append(toIndentedString(previousBalance)).append("\n");
    sb.append("    statementStartDate: ").append(toIndentedString(statementStartDate)).append("\n");
    sb.append("    statementEndDate: ").append(toIndentedString(statementEndDate)).append("\n");
    sb.append("    statementPurchaseAmount: ").append(toIndentedString(statementPurchaseAmount)).append("\n");
    sb.append("    statementFinanceAmount: ").append(toIndentedString(statementFinanceAmount)).append("\n");
    sb.append("    statementCreditAmount: ").append(toIndentedString(statementCreditAmount)).append("\n");
    sb.append("    rewardEarnedBalance: ").append(toIndentedString(rewardEarnedBalance)).append("\n");
    sb.append("    pastDueAmount: ").append(toIndentedString(pastDueAmount)).append("\n");
    sb.append("    lastPaymentAmount: ").append(toIndentedString(lastPaymentAmount)).append("\n");
    sb.append("    lastPaymentDate: ").append(toIndentedString(lastPaymentDate)).append("\n");
    sb.append("    statementCloseBalance: ").append(toIndentedString(statementCloseBalance)).append("\n");
    sb.append("    termOfMl: ").append(toIndentedString(termOfMl)).append("\n");
    sb.append("    mlHolderName: ").append(toIndentedString(mlHolderName)).append("\n");
    sb.append("    lateFeeAmount: ").append(toIndentedString(lateFeeAmount)).append("\n");
    sb.append("    payoffAmount: ").append(toIndentedString(payoffAmount)).append("\n");
    sb.append("    payoffAmountDate: ").append(toIndentedString(payoffAmountDate)).append("\n");
    sb.append("    originalMaturityDate: ").append(toIndentedString(originalMaturityDate)).append("\n");
    sb.append("    principalBalance: ").append(toIndentedString(principalBalance)).append("\n");
    sb.append("    escrowBalance: ").append(toIndentedString(escrowBalance)).append("\n");
    sb.append("    interestPeriod: ").append(toIndentedString(interestPeriod)).append("\n");
    sb.append("    initialMlAmount: ").append(toIndentedString(initialMlAmount)).append("\n");
    sb.append("    initialMlDate: ").append(toIndentedString(initialMlDate)).append("\n");
    sb.append("    nextPaymentPrincipalAmount: ").append(toIndentedString(nextPaymentPrincipalAmount)).append("\n");
    sb.append("    nextPaymentInterestAmount: ").append(toIndentedString(nextPaymentInterestAmount)).append("\n");
    sb.append("    nextPayment: ").append(toIndentedString(nextPayment)).append("\n");
    sb.append("    nextPaymentDate: ").append(toIndentedString(nextPaymentDate)).append("\n");
    sb.append("    lastPaymentDueDate: ").append(toIndentedString(lastPaymentDueDate)).append("\n");
    sb.append("    lastPaymentReceiveDate: ").append(toIndentedString(lastPaymentReceiveDate)).append("\n");
    sb.append("    lastPaymentPrincipalAmount: ").append(toIndentedString(lastPaymentPrincipalAmount)).append("\n");
    sb.append("    lastPaymentInterestAmount: ").append(toIndentedString(lastPaymentInterestAmount)).append("\n");
    sb.append("    lastPaymentEscrowAmount: ").append(toIndentedString(lastPaymentEscrowAmount)).append("\n");
    sb.append("    lastPaymentLastFeeAmount: ").append(toIndentedString(lastPaymentLastFeeAmount)).append("\n");
    sb.append("    lastPaymentLateCharge: ").append(toIndentedString(lastPaymentLateCharge)).append("\n");
    sb.append("    ytdPrincipalPaid: ").append(toIndentedString(ytdPrincipalPaid)).append("\n");
    sb.append("    ytdInterestPaid: ").append(toIndentedString(ytdInterestPaid)).append("\n");
    sb.append("    ytdInsurancePaid: ").append(toIndentedString(ytdInsurancePaid)).append("\n");
    sb.append("    ytdTaxPaid: ").append(toIndentedString(ytdTaxPaid)).append("\n");
    sb.append("    autoPayEnrolled: ").append(toIndentedString(autoPayEnrolled)).append("\n");
    sb.append("    marginAllowed: ").append(toIndentedString(marginAllowed)).append("\n");
    sb.append("    cashAccountAllowed: ").append(toIndentedString(cashAccountAllowed)).append("\n");
    sb.append("    collateral: ").append(toIndentedString(collateral)).append("\n");
    sb.append("    currentSchool: ").append(toIndentedString(currentSchool)).append("\n");
    sb.append("    firstPaymentDate: ").append(toIndentedString(firstPaymentDate)).append("\n");
    sb.append("    firstMortgage: ").append(toIndentedString(firstMortgage)).append("\n");
    sb.append("    loanPaymentFreq: ").append(toIndentedString(loanPaymentFreq)).append("\n");
    sb.append("    originalSchool: ").append(toIndentedString(originalSchool)).append("\n");
    sb.append("    recurringPaymentAmount: ").append(toIndentedString(recurringPaymentAmount)).append("\n");
    sb.append("    lender: ").append(toIndentedString(lender)).append("\n");
    sb.append("    endingBalanceAmount: ").append(toIndentedString(endingBalanceAmount)).append("\n");
    sb.append("    loanTermType: ").append(toIndentedString(loanTermType)).append("\n");
    sb.append("    paymentsMade: ").append(toIndentedString(paymentsMade)).append("\n");
    sb.append("    balloonAmount: ").append(toIndentedString(balloonAmount)).append("\n");
    sb.append("    projectedInterest: ").append(toIndentedString(projectedInterest)).append("\n");
    sb.append("    interestPaidLtd: ").append(toIndentedString(interestPaidLtd)).append("\n");
    sb.append("    interestRateType: ").append(toIndentedString(interestRateType)).append("\n");
    sb.append("    loanPaymentType: ").append(toIndentedString(loanPaymentType)).append("\n");
    sb.append("    repaymentPlan: ").append(toIndentedString(repaymentPlan)).append("\n");
    sb.append("    paymentsRemaining: ").append(toIndentedString(paymentsRemaining)).append("\n");
    sb.append("    marginBalance: ").append(toIndentedString(marginBalance)).append("\n");
    sb.append("    shortBalance: ").append(toIndentedString(shortBalance)).append("\n");
    sb.append("    availableCashBalance: ").append(toIndentedString(availableCashBalance)).append("\n");
    sb.append("    maturityValueAmount: ").append(toIndentedString(maturityValueAmount)).append("\n");
    sb.append("    vestedBalance: ").append(toIndentedString(vestedBalance)).append("\n");
    sb.append("    empMatchAmount: ").append(toIndentedString(empMatchAmount)).append("\n");
    sb.append("    empPretaxContribAmount: ").append(toIndentedString(empPretaxContribAmount)).append("\n");
    sb.append("    empPretaxContribAmountYtd: ").append(toIndentedString(empPretaxContribAmountYtd)).append("\n");
    sb.append("    contribTotalYtd: ").append(toIndentedString(contribTotalYtd)).append("\n");
    sb.append("    cashBalanceAmount: ").append(toIndentedString(cashBalanceAmount)).append("\n");
    sb.append("    preTaxAmount: ").append(toIndentedString(preTaxAmount)).append("\n");
    sb.append("    afterTaxAmount: ").append(toIndentedString(afterTaxAmount)).append("\n");
    sb.append("    matchAmount: ").append(toIndentedString(matchAmount)).append("\n");
    sb.append("    profitSharingAmount: ").append(toIndentedString(profitSharingAmount)).append("\n");
    sb.append("    rolloverAmount: ").append(toIndentedString(rolloverAmount)).append("\n");
    sb.append("    otherVestAmount: ").append(toIndentedString(otherVestAmount)).append("\n");
    sb.append("    otherNonvestAmount: ").append(toIndentedString(otherNonvestAmount)).append("\n");
    sb.append("    currentLoanBalance: ").append(toIndentedString(currentLoanBalance)).append("\n");
    sb.append("    loanRate: ").append(toIndentedString(loanRate)).append("\n");
    sb.append("    buyPower: ").append(toIndentedString(buyPower)).append("\n");
    sb.append("    rolloverLtd: ").append(toIndentedString(rolloverLtd)).append("\n");
    sb.append("    loanAwardId: ").append(toIndentedString(loanAwardId)).append("\n");
    sb.append("    originalInterestRate: ").append(toIndentedString(originalInterestRate)).append("\n");
    sb.append("    guarantor: ").append(toIndentedString(guarantor)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    interestSubsidyType: ").append(toIndentedString(interestSubsidyType)).append("\n");
    sb.append("    interestBalance: ").append(toIndentedString(interestBalance)).append("\n");
    sb.append("    remainingTermOfMl: ").append(toIndentedString(remainingTermOfMl)).append("\n");
    sb.append("    initialInterestRate: ").append(toIndentedString(initialInterestRate)).append("\n");
    sb.append("    feesBalance: ").append(toIndentedString(feesBalance)).append("\n");
    sb.append("    loanYtdInterestPaid: ").append(toIndentedString(loanYtdInterestPaid)).append("\n");
    sb.append("    loanYtdFeesPaid: ").append(toIndentedString(loanYtdFeesPaid)).append("\n");
    sb.append("    loanYtdPrincipalPaid: ").append(toIndentedString(loanYtdPrincipalPaid)).append("\n");
    sb.append("    loanStatus: ").append(toIndentedString(loanStatus)).append("\n");
    sb.append("    loanStatusStartDate: ").append(toIndentedString(loanStatusStartDate)).append("\n");
    sb.append("    loanStatusEndDate: ").append(toIndentedString(loanStatusEndDate)).append("\n");
    sb.append("    weightedInterestRate: ").append(toIndentedString(weightedInterestRate)).append("\n");
    sb.append("    repaymentPlanStartDate: ").append(toIndentedString(repaymentPlanStartDate)).append("\n");
    sb.append("    repaymentPlanEndDate: ").append(toIndentedString(repaymentPlanEndDate)).append("\n");
    sb.append("    expectedPayoffDate: ").append(toIndentedString(expectedPayoffDate)).append("\n");
    sb.append("    outOfSchoolDate: ").append(toIndentedString(outOfSchoolDate)).append("\n");
    sb.append("    convertToRepayment: ").append(toIndentedString(convertToRepayment)).append("\n");
    sb.append("    daysDelinquent: ").append(toIndentedString(daysDelinquent)).append("\n");
    sb.append("    totalPrincipalPaid: ").append(toIndentedString(totalPrincipalPaid)).append("\n");
    sb.append("    totalInterestPaid: ").append(toIndentedString(totalInterestPaid)).append("\n");
    sb.append("    totalAmountPaid: ").append(toIndentedString(totalAmountPaid)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("description");
    openapiFields.add("dateAsOf");
    openapiFields.add("availableBalanceAmount");
    openapiFields.add("openDate");
    openapiFields.add("periodStartDate");
    openapiFields.add("periodEndDate");
    openapiFields.add("periodInterestRate");
    openapiFields.add("periodDepositAmount");
    openapiFields.add("periodInterestAmount");
    openapiFields.add("interestYtdAmount");
    openapiFields.add("interestPriorYtdAmount");
    openapiFields.add("maturityDate");
    openapiFields.add("interestRate");
    openapiFields.add("creditAvailableAmount");
    openapiFields.add("creditMaxAmount");
    openapiFields.add("cashAdvanceAvailableAmount");
    openapiFields.add("cashAdvanceMaxAmount");
    openapiFields.add("cashAdvanceBalance");
    openapiFields.add("cashAdvanceInterestRate");
    openapiFields.add("currentBalance");
    openapiFields.add("paymentMinAmount");
    openapiFields.add("paymentDueDate");
    openapiFields.add("previousBalance");
    openapiFields.add("statementStartDate");
    openapiFields.add("statementEndDate");
    openapiFields.add("statementPurchaseAmount");
    openapiFields.add("statementFinanceAmount");
    openapiFields.add("statementCreditAmount");
    openapiFields.add("rewardEarnedBalance");
    openapiFields.add("pastDueAmount");
    openapiFields.add("lastPaymentAmount");
    openapiFields.add("lastPaymentDate");
    openapiFields.add("statementCloseBalance");
    openapiFields.add("termOfMl");
    openapiFields.add("mlHolderName");
    openapiFields.add("lateFeeAmount");
    openapiFields.add("payoffAmount");
    openapiFields.add("payoffAmountDate");
    openapiFields.add("originalMaturityDate");
    openapiFields.add("principalBalance");
    openapiFields.add("escrowBalance");
    openapiFields.add("interestPeriod");
    openapiFields.add("initialMlAmount");
    openapiFields.add("initialMlDate");
    openapiFields.add("nextPaymentPrincipalAmount");
    openapiFields.add("nextPaymentInterestAmount");
    openapiFields.add("nextPayment");
    openapiFields.add("nextPaymentDate");
    openapiFields.add("lastPaymentDueDate");
    openapiFields.add("lastPaymentReceiveDate");
    openapiFields.add("lastPaymentPrincipalAmount");
    openapiFields.add("lastPaymentInterestAmount");
    openapiFields.add("lastPaymentEscrowAmount");
    openapiFields.add("lastPaymentLastFeeAmount");
    openapiFields.add("lastPaymentLateCharge");
    openapiFields.add("ytdPrincipalPaid");
    openapiFields.add("ytdInterestPaid");
    openapiFields.add("ytdInsurancePaid");
    openapiFields.add("ytdTaxPaid");
    openapiFields.add("autoPayEnrolled");
    openapiFields.add("marginAllowed");
    openapiFields.add("cashAccountAllowed");
    openapiFields.add("collateral");
    openapiFields.add("currentSchool");
    openapiFields.add("firstPaymentDate");
    openapiFields.add("firstMortgage");
    openapiFields.add("loanPaymentFreq");
    openapiFields.add("originalSchool");
    openapiFields.add("recurringPaymentAmount");
    openapiFields.add("lender");
    openapiFields.add("endingBalanceAmount");
    openapiFields.add("loanTermType");
    openapiFields.add("paymentsMade");
    openapiFields.add("balloonAmount");
    openapiFields.add("projectedInterest");
    openapiFields.add("interestPaidLtd");
    openapiFields.add("interestRateType");
    openapiFields.add("loanPaymentType");
    openapiFields.add("repaymentPlan");
    openapiFields.add("paymentsRemaining");
    openapiFields.add("marginBalance");
    openapiFields.add("shortBalance");
    openapiFields.add("availableCashBalance");
    openapiFields.add("maturityValueAmount");
    openapiFields.add("vestedBalance");
    openapiFields.add("empMatchAmount");
    openapiFields.add("empPretaxContribAmount");
    openapiFields.add("empPretaxContribAmountYtd");
    openapiFields.add("contribTotalYtd");
    openapiFields.add("cashBalanceAmount");
    openapiFields.add("preTaxAmount");
    openapiFields.add("afterTaxAmount");
    openapiFields.add("matchAmount");
    openapiFields.add("profitSharingAmount");
    openapiFields.add("rolloverAmount");
    openapiFields.add("otherVestAmount");
    openapiFields.add("otherNonvestAmount");
    openapiFields.add("currentLoanBalance");
    openapiFields.add("loanRate");
    openapiFields.add("buyPower");
    openapiFields.add("rolloverLtd");
    openapiFields.add("loanAwardId");
    openapiFields.add("originalInterestRate");
    openapiFields.add("guarantor");
    openapiFields.add("owner");
    openapiFields.add("interestSubsidyType");
    openapiFields.add("interestBalance");
    openapiFields.add("remainingTermOfMl");
    openapiFields.add("initialInterestRate");
    openapiFields.add("feesBalance");
    openapiFields.add("loanYtdInterestPaid");
    openapiFields.add("loanYtdFeesPaid");
    openapiFields.add("loanYtdPrincipalPaid");
    openapiFields.add("loanStatus");
    openapiFields.add("loanStatusStartDate");
    openapiFields.add("loanStatusEndDate");
    openapiFields.add("weightedInterestRate");
    openapiFields.add("repaymentPlanStartDate");
    openapiFields.add("repaymentPlanEndDate");
    openapiFields.add("expectedPayoffDate");
    openapiFields.add("outOfSchoolDate");
    openapiFields.add("convertToRepayment");
    openapiFields.add("daysDelinquent");
    openapiFields.add("totalPrincipalPaid");
    openapiFields.add("totalInterestPaid");
    openapiFields.add("totalAmountPaid");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CustomerAccountDetail
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CustomerAccountDetail.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CustomerAccountDetail is not found in the empty JSON string", CustomerAccountDetail.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("interestRate") != null && !jsonObj.get("interestRate").isJsonNull()) && !jsonObj.get("interestRate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interestRate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interestRate").toString()));
      }
      if ((jsonObj.get("termOfMl") != null && !jsonObj.get("termOfMl").isJsonNull()) && !jsonObj.get("termOfMl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `termOfMl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("termOfMl").toString()));
      }
      if ((jsonObj.get("mlHolderName") != null && !jsonObj.get("mlHolderName").isJsonNull()) && !jsonObj.get("mlHolderName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mlHolderName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mlHolderName").toString()));
      }
      if ((jsonObj.get("interestPeriod") != null && !jsonObj.get("interestPeriod").isJsonNull()) && !jsonObj.get("interestPeriod").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interestPeriod` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interestPeriod").toString()));
      }
      if ((jsonObj.get("collateral") != null && !jsonObj.get("collateral").isJsonNull()) && !jsonObj.get("collateral").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `collateral` to be a primitive type in the JSON string but got `%s`", jsonObj.get("collateral").toString()));
      }
      if ((jsonObj.get("currentSchool") != null && !jsonObj.get("currentSchool").isJsonNull()) && !jsonObj.get("currentSchool").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currentSchool` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currentSchool").toString()));
      }
      if ((jsonObj.get("loanPaymentFreq") != null && !jsonObj.get("loanPaymentFreq").isJsonNull()) && !jsonObj.get("loanPaymentFreq").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `loanPaymentFreq` to be a primitive type in the JSON string but got `%s`", jsonObj.get("loanPaymentFreq").toString()));
      }
      if ((jsonObj.get("originalSchool") != null && !jsonObj.get("originalSchool").isJsonNull()) && !jsonObj.get("originalSchool").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `originalSchool` to be a primitive type in the JSON string but got `%s`", jsonObj.get("originalSchool").toString()));
      }
      if ((jsonObj.get("lender") != null && !jsonObj.get("lender").isJsonNull()) && !jsonObj.get("lender").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lender` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lender").toString()));
      }
      if ((jsonObj.get("loanTermType") != null && !jsonObj.get("loanTermType").isJsonNull()) && !jsonObj.get("loanTermType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `loanTermType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("loanTermType").toString()));
      }
      if ((jsonObj.get("interestRateType") != null && !jsonObj.get("interestRateType").isJsonNull()) && !jsonObj.get("interestRateType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interestRateType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interestRateType").toString()));
      }
      if ((jsonObj.get("loanPaymentType") != null && !jsonObj.get("loanPaymentType").isJsonNull()) && !jsonObj.get("loanPaymentType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `loanPaymentType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("loanPaymentType").toString()));
      }
      if ((jsonObj.get("repaymentPlan") != null && !jsonObj.get("repaymentPlan").isJsonNull()) && !jsonObj.get("repaymentPlan").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `repaymentPlan` to be a primitive type in the JSON string but got `%s`", jsonObj.get("repaymentPlan").toString()));
      }
      if ((jsonObj.get("loanAwardId") != null && !jsonObj.get("loanAwardId").isJsonNull()) && !jsonObj.get("loanAwardId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `loanAwardId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("loanAwardId").toString()));
      }
      if ((jsonObj.get("guarantor") != null && !jsonObj.get("guarantor").isJsonNull()) && !jsonObj.get("guarantor").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `guarantor` to be a primitive type in the JSON string but got `%s`", jsonObj.get("guarantor").toString()));
      }
      if ((jsonObj.get("owner") != null && !jsonObj.get("owner").isJsonNull()) && !jsonObj.get("owner").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `owner` to be a primitive type in the JSON string but got `%s`", jsonObj.get("owner").toString()));
      }
      if ((jsonObj.get("interestSubsidyType") != null && !jsonObj.get("interestSubsidyType").isJsonNull()) && !jsonObj.get("interestSubsidyType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interestSubsidyType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interestSubsidyType").toString()));
      }
      if ((jsonObj.get("loanStatus") != null && !jsonObj.get("loanStatus").isJsonNull()) && !jsonObj.get("loanStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `loanStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("loanStatus").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomerAccountDetail.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomerAccountDetail' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomerAccountDetail> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomerAccountDetail.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomerAccountDetail>() {
           @Override
           public void write(JsonWriter out, CustomerAccountDetail value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public CustomerAccountDetail read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             CustomerAccountDetail instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CustomerAccountDetail given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CustomerAccountDetail
  * @throws IOException if the JSON string is invalid with respect to CustomerAccountDetail
  */
  public static CustomerAccountDetail fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomerAccountDetail.class);
  }

 /**
  * Convert an instance of CustomerAccountDetail to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

