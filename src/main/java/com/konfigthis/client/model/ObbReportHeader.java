/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.16.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * Details about the business the report is generated for and metadata about the report
 */
@ApiModel(description = "Details about the business the report is generated for and metadata about the report")@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class ObbReportHeader {
  public static final String SERIALIZED_NAME_BUSINESS_ADDRESS = "businessAddress";
  @SerializedName(SERIALIZED_NAME_BUSINESS_ADDRESS)
  private String businessAddress;

  public static final String SERIALIZED_NAME_BUSINESS_CITY = "businessCity";
  @SerializedName(SERIALIZED_NAME_BUSINESS_CITY)
  private String businessCity;

  public static final String SERIALIZED_NAME_BUSINESS_NAME = "businessName";
  @SerializedName(SERIALIZED_NAME_BUSINESS_NAME)
  private String businessName;

  public static final String SERIALIZED_NAME_BUSINESS_STATE = "businessState";
  @SerializedName(SERIALIZED_NAME_BUSINESS_STATE)
  private String businessState;

  public static final String SERIALIZED_NAME_BUSINESS_ZIP = "businessZip";
  @SerializedName(SERIALIZED_NAME_BUSINESS_ZIP)
  private String businessZip;

  public static final String SERIALIZED_NAME_REFERENCE_NUMBER = "referenceNumber";
  @SerializedName(SERIALIZED_NAME_REFERENCE_NUMBER)
  private String referenceNumber;

  public static final String SERIALIZED_NAME_REPORT_DATE = "reportDate";
  @SerializedName(SERIALIZED_NAME_REPORT_DATE)
  private String reportDate;

  public static final String SERIALIZED_NAME_REPORT_ID = "reportId";
  @SerializedName(SERIALIZED_NAME_REPORT_ID)
  private String reportId;

  public ObbReportHeader() {
  }

  public ObbReportHeader businessAddress(String businessAddress) {
    
    
    if (businessAddress != null && businessAddress.length() < 0) {
      throw new IllegalArgumentException("Invalid value for businessAddress. Length must be greater than or equal to 0.");
    }
    
    this.businessAddress = businessAddress;
    return this;
  }

   /**
   * Business address line 1
   * @return businessAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "123 Main St", value = "Business address line 1")

  public String getBusinessAddress() {
    return businessAddress;
  }


  public void setBusinessAddress(String businessAddress) {
    
    
    if (businessAddress != null && businessAddress.length() < 0) {
      throw new IllegalArgumentException("Invalid value for businessAddress. Length must be greater than or equal to 0.");
    }
    this.businessAddress = businessAddress;
  }


  public ObbReportHeader businessCity(String businessCity) {
    
    
    if (businessCity != null && businessCity.length() < 0) {
      throw new IllegalArgumentException("Invalid value for businessCity. Length must be greater than or equal to 0.");
    }
    
    this.businessCity = businessCity;
    return this;
  }

   /**
   * Business address city
   * @return businessCity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Portland", value = "Business address city")

  public String getBusinessCity() {
    return businessCity;
  }


  public void setBusinessCity(String businessCity) {
    
    
    if (businessCity != null && businessCity.length() < 0) {
      throw new IllegalArgumentException("Invalid value for businessCity. Length must be greater than or equal to 0.");
    }
    this.businessCity = businessCity;
  }


  public ObbReportHeader businessName(String businessName) {
    
    
    if (businessName != null && businessName.length() < 0) {
      throw new IllegalArgumentException("Invalid value for businessName. Length must be greater than or equal to 0.");
    }
    
    this.businessName = businessName;
    return this;
  }

   /**
   * Name of the business
   * @return businessName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "B&G Construction", value = "Name of the business")

  public String getBusinessName() {
    return businessName;
  }


  public void setBusinessName(String businessName) {
    
    
    if (businessName != null && businessName.length() < 0) {
      throw new IllegalArgumentException("Invalid value for businessName. Length must be greater than or equal to 0.");
    }
    this.businessName = businessName;
  }


  public ObbReportHeader businessState(String businessState) {
    
    
    if (businessState != null && businessState.length() < 0) {
      throw new IllegalArgumentException("Invalid value for businessState. Length must be greater than or equal to 0.");
    }
    
    this.businessState = businessState;
    return this;
  }

   /**
   * Business address state
   * @return businessState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "OR", value = "Business address state")

  public String getBusinessState() {
    return businessState;
  }


  public void setBusinessState(String businessState) {
    
    
    if (businessState != null && businessState.length() < 0) {
      throw new IllegalArgumentException("Invalid value for businessState. Length must be greater than or equal to 0.");
    }
    this.businessState = businessState;
  }


  public ObbReportHeader businessZip(String businessZip) {
    
    
    if (businessZip != null && businessZip.length() < 0) {
      throw new IllegalArgumentException("Invalid value for businessZip. Length must be greater than or equal to 0.");
    }
    
    this.businessZip = businessZip;
    return this;
  }

   /**
   * Business address zip
   * @return businessZip
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "12345", value = "Business address zip")

  public String getBusinessZip() {
    return businessZip;
  }


  public void setBusinessZip(String businessZip) {
    
    
    if (businessZip != null && businessZip.length() < 0) {
      throw new IllegalArgumentException("Invalid value for businessZip. Length must be greater than or equal to 0.");
    }
    this.businessZip = businessZip;
  }


  public ObbReportHeader referenceNumber(String referenceNumber) {
    
    
    if (referenceNumber != null && referenceNumber.length() < 0) {
      throw new IllegalArgumentException("Invalid value for referenceNumber. Length must be greater than or equal to 0.");
    }
    
    this.referenceNumber = referenceNumber;
    return this;
  }

   /**
   * Partner-provided reference number
   * @return referenceNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "32asdfaasd0823", value = "Partner-provided reference number")

  public String getReferenceNumber() {
    return referenceNumber;
  }


  public void setReferenceNumber(String referenceNumber) {
    
    
    if (referenceNumber != null && referenceNumber.length() < 0) {
      throw new IllegalArgumentException("Invalid value for referenceNumber. Length must be greater than or equal to 0.");
    }
    this.referenceNumber = referenceNumber;
  }


  public ObbReportHeader reportDate(String reportDate) {
    
    
    if (reportDate != null && reportDate.length() < 25) {
      throw new IllegalArgumentException("Invalid value for reportDate. Length must be greater than or equal to 25.");
    }
    
    this.reportDate = reportDate;
    return this;
  }

   /**
   * Date the report was requested
   * @return reportDate
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "2022-03-16T21:28:38-07:00", required = true, value = "Date the report was requested")

  public String getReportDate() {
    return reportDate;
  }


  public void setReportDate(String reportDate) {
    
    
    if (reportDate != null && reportDate.length() < 25) {
      throw new IllegalArgumentException("Invalid value for reportDate. Length must be greater than or equal to 25.");
    }
    this.reportDate = reportDate;
  }


  public ObbReportHeader reportId(String reportId) {
    
    
    if (reportId != null && reportId.length() < 0) {
      throw new IllegalArgumentException("Invalid value for reportId. Length must be greater than or equal to 0.");
    }
    
    this.reportId = reportId;
    return this;
  }

   /**
   * Generated unique report ID
   * @return reportId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "8ff8b4b2-706f-45c3-8d66-857bdb516214", required = true, value = "Generated unique report ID")

  public String getReportId() {
    return reportId;
  }


  public void setReportId(String reportId) {
    
    
    if (reportId != null && reportId.length() < 0) {
      throw new IllegalArgumentException("Invalid value for reportId. Length must be greater than or equal to 0.");
    }
    this.reportId = reportId;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the ObbReportHeader instance itself
   */
  public ObbReportHeader putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ObbReportHeader obbReportHeader = (ObbReportHeader) o;
    return Objects.equals(this.businessAddress, obbReportHeader.businessAddress) &&
        Objects.equals(this.businessCity, obbReportHeader.businessCity) &&
        Objects.equals(this.businessName, obbReportHeader.businessName) &&
        Objects.equals(this.businessState, obbReportHeader.businessState) &&
        Objects.equals(this.businessZip, obbReportHeader.businessZip) &&
        Objects.equals(this.referenceNumber, obbReportHeader.referenceNumber) &&
        Objects.equals(this.reportDate, obbReportHeader.reportDate) &&
        Objects.equals(this.reportId, obbReportHeader.reportId)&&
        Objects.equals(this.additionalProperties, obbReportHeader.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(businessAddress, businessCity, businessName, businessState, businessZip, referenceNumber, reportDate, reportId, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ObbReportHeader {\n");
    sb.append("    businessAddress: ").append(toIndentedString(businessAddress)).append("\n");
    sb.append("    businessCity: ").append(toIndentedString(businessCity)).append("\n");
    sb.append("    businessName: ").append(toIndentedString(businessName)).append("\n");
    sb.append("    businessState: ").append(toIndentedString(businessState)).append("\n");
    sb.append("    businessZip: ").append(toIndentedString(businessZip)).append("\n");
    sb.append("    referenceNumber: ").append(toIndentedString(referenceNumber)).append("\n");
    sb.append("    reportDate: ").append(toIndentedString(reportDate)).append("\n");
    sb.append("    reportId: ").append(toIndentedString(reportId)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("businessAddress");
    openapiFields.add("businessCity");
    openapiFields.add("businessName");
    openapiFields.add("businessState");
    openapiFields.add("businessZip");
    openapiFields.add("referenceNumber");
    openapiFields.add("reportDate");
    openapiFields.add("reportId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("reportDate");
    openapiRequiredFields.add("reportId");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ObbReportHeader
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ObbReportHeader.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ObbReportHeader is not found in the empty JSON string", ObbReportHeader.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ObbReportHeader.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if ((jsonObj.get("businessAddress") != null && !jsonObj.get("businessAddress").isJsonNull()) && !jsonObj.get("businessAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `businessAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("businessAddress").toString()));
      }
      if ((jsonObj.get("businessCity") != null && !jsonObj.get("businessCity").isJsonNull()) && !jsonObj.get("businessCity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `businessCity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("businessCity").toString()));
      }
      if ((jsonObj.get("businessName") != null && !jsonObj.get("businessName").isJsonNull()) && !jsonObj.get("businessName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `businessName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("businessName").toString()));
      }
      if ((jsonObj.get("businessState") != null && !jsonObj.get("businessState").isJsonNull()) && !jsonObj.get("businessState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `businessState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("businessState").toString()));
      }
      if ((jsonObj.get("businessZip") != null && !jsonObj.get("businessZip").isJsonNull()) && !jsonObj.get("businessZip").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `businessZip` to be a primitive type in the JSON string but got `%s`", jsonObj.get("businessZip").toString()));
      }
      if ((jsonObj.get("referenceNumber") != null && !jsonObj.get("referenceNumber").isJsonNull()) && !jsonObj.get("referenceNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `referenceNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("referenceNumber").toString()));
      }
      if (!jsonObj.get("reportDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reportDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reportDate").toString()));
      }
      if (!jsonObj.get("reportId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reportId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reportId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ObbReportHeader.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ObbReportHeader' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ObbReportHeader> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ObbReportHeader.class));

       return (TypeAdapter<T>) new TypeAdapter<ObbReportHeader>() {
           @Override
           public void write(JsonWriter out, ObbReportHeader value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public ObbReportHeader read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             ObbReportHeader instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ObbReportHeader given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ObbReportHeader
  * @throws IOException if the JSON string is invalid with respect to ObbReportHeader
  */
  public static ObbReportHeader fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ObbReportHeader.class);
  }

 /**
  * Convert an instance of ObbReportHeader to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

