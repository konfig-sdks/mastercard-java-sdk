/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.16.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.Birthday;
import com.konfigthis.client.model.Consumer;
import com.konfigthis.client.model.ConsumerUpdate;
import com.konfigthis.client.model.CreatedConsumer;
import com.konfigthis.client.model.NewConsumer;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ConsumersApi
 */
@Disabled
public class ConsumersApiTest {

    private static ConsumersApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new ConsumersApi(apiClient);
    }

    /**
     * Create Consumer
     *
     * Create a consumer record associated with the given customer. A consumer persists as the owner of any reports that are generated, even after the original customer is deleted from the system.  A consumer must be created for the given customer before calling any of the Generate Report services.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createConsumerRecordTest() throws ApiException {
        String firstName = null;
        String lastName = null;
        String address = null;
        String city = null;
        String state = null;
        String zip = null;
        String phone = null;
        String ssn = null;
        Birthday birthday = null;
        String customerId = null;
        String email = null;
        String suffix = null;
        CreatedConsumer response = api.createConsumerRecord(firstName, lastName, address, city, state, zip, phone, ssn, birthday, customerId)
                .email(email)
                .suffix(suffix)
                .execute();
        // TODO: test validations
    }

    /**
     * Get Consumer For Customer
     *
     * Get the details of a consumer record by customer ID.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByCustomerIdTest() throws ApiException {
        String customerId = null;
        Consumer response = api.getByCustomerId(customerId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get Consumer by ID
     *
     * Get the details of a consumer record by consumer ID.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByIdTest() throws ApiException {
        String consumerId = null;
        Consumer response = api.getById(consumerId)
                .execute();
        // TODO: test validations
    }

    /**
     * Modify Consumer by ID
     *
     * Modify an existing consumer. All fields are required for a consumer record, but individual fields for this call are optional because fields that are not specified will be left unchanged.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void modifyByIdTest() throws ApiException {
        String consumerId = null;
        String firstName = null;
        String lastName = null;
        String address = null;
        String city = null;
        String state = null;
        String zip = null;
        String phone = null;
        String ssn = null;
        Birthday birthday = null;
        String email = null;
        String suffix = null;
        api.modifyById(consumerId)
                .firstName(firstName)
                .lastName(lastName)
                .address(address)
                .city(city)
                .state(state)
                .zip(zip)
                .phone(phone)
                .ssn(ssn)
                .birthday(birthday)
                .email(email)
                .suffix(suffix)
                .execute();
        // TODO: test validations
    }

}
