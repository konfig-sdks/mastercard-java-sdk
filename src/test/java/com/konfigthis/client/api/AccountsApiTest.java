/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.16.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.CustomerAccount;
import com.konfigthis.client.model.CustomerAccounts;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AccountsApi
 */
@Disabled
public class AccountsApiTest {

    private static AccountsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new AccountsApi(apiClient);
    }

    /**
     * Get Customer Account by ID
     *
     * Get a customer account by ID.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByIdTest() throws ApiException {
        String customerId = null;
        String accountId = null;
        CustomerAccount response = api.getById(customerId, accountId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get Customer Accounts by Institution Login ID
     *
     * Get all accounts associated with the given institution login. All accounts returned are accessible by a single set of credentials on a single institution.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByInstitutionLoginTest() throws ApiException {
        String customerId = null;
        String institutionLoginId = null;
        CustomerAccounts response = api.getByInstitutionLogin(customerId, institutionLoginId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get Customer Accounts
     *
     * Get all accounts owned by the given customer.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCustomerAccountsTest() throws ApiException {
        String customerId = null;
        String status = null;
        String accountType = null;
        CustomerAccounts response = api.getCustomerAccounts(customerId)
                .status(status)
                .accountType(accountType)
                .execute();
        // TODO: test validations
    }

    /**
     * Get Customer Accounts by Institution ID
     *
     * Get all active accounts owned by the given customer at the given institution.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCustomerInstitutionAccountsTest() throws ApiException {
        String customerId = null;
        Long institutionId = null;
        CustomerAccounts response = api.getCustomerInstitutionAccounts(customerId, institutionId)
                .execute();
        // TODO: test validations
    }

    /**
     * Refresh Customer Account by Institution Login ID for Data Access Tiers
     *
     * Refresh account and transaction data for all accounts associated with a given &#39;institutionLoginId&#x60; with a connection to the institution. Client apps are not permitted to automate calls to the Refresh services. Active accounts are automatically refreshed by Finicity once per day.  Apps may call Refresh services for a specific customer when there is a specific business case for the need of data that is up to date as of the moment. Please discuss with your account manager and systems engineer for further clarification.  Note: This service will be used for dynamic billing tiers ASD, AFD and ATD.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void refreshCustomerAccountByInstitutionLoginTest() throws ApiException {
        String customerId = null;
        String institutionLoginId = null;
        api.refreshCustomerAccountByInstitutionLogin(customerId, institutionLoginId)
                .execute();
        // TODO: test validations
    }

    /**
     * Refresh Customer Accounts
     *
     * Refresh account and transaction data for all accounts associated with the  given &#x60;customerId&#x60; with a connection to the institution.  Client apps are not permitted to automate calls to the Refresh services. Active accounts are automatically refreshed by Finicity once per day. Because many financial institutions only post transactions once per day, calling Refresh services repeatedly is usually a waste of resources and is not recommended.  Apps may call Refresh services for a specific customer when there is a specific business case for the need of data that is up to date as of the moment. Please discuss with your account manager and systems engineer for further clarification.  The recommended timeout setting for this request is 120 seconds in order to receive a response. However, you can terminate the connection after making the call the operation will still complete. You will have to pull the account records to check for an updated aggregation attempt date to know when the refresh is complete.  Note: This service is not available for all tiers of dynamic billing.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void refreshCustomerAggregationTest() throws ApiException {
        String customerId = null;
        CustomerAccounts response = api.refreshCustomerAggregation(customerId)
                .execute();
        // TODO: test validations
    }

    /**
     * Refresh Customer Accounts by Institution Login ID
     *
     * Refresh account and transaction data for all accounts associated with a given &#x60;institutionLoginId&#x60; with a connection to the institution.  Client apps are not permitted to automate calls to the Refresh services. Active accounts are automatically refreshed by Finicity once per day. Because many financial institutions only post transactions once per day, calling Refresh repeatedly is usually a waste of resources and is not recommended.  Apps may call Refresh services for a specific customer when there is a specific business case for the need of data that is up to date as of the moment. Please discuss with your account manager and systems engineer for further clarification.  The recommended timeout setting for this request is 120 seconds in order to receive a response. However, you can terminate the connection after making the call the operation will still complete. You will have to pull the account records to check for an updated aggregation attempt date to know when the refresh is complete.  Note: This service is not available for all tiers of dynamic billing.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void refreshCustomerByInstitutionLoginTest() throws ApiException {
        String customerId = null;
        String institutionLoginId = null;
        CustomerAccounts response = api.refreshCustomerByInstitutionLogin(customerId, institutionLoginId)
                .execute();
        // TODO: test validations
    }

    /**
     * Refresh Customer Accounts for Data Access Tiers
     *
     * Refresh account and transaction data for all accounts associated with the  given &#x60;customerId&#x60; with a connection to the institution.  Client apps are not permitted to automate calls to the Refresh services. Active accounts are automatically refreshed by Finicity once per day. Apps may call Refresh services for a specific customer when there is a specific business case for the need of data that is up to date as of the moment. Please discuss with your account manager and systems engineer for further clarification.  Note: This service will be used for dynamic billing tiers ASD, AFD and ATD.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void refreshCustomerDataTest() throws ApiException {
        String customerId = null;
        api.refreshCustomerData(customerId)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete Customer Account by ID
     *
     * Remove the given account from Finicity aggregation.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeByCustomerIdAndAccountIdTest() throws ApiException {
        String customerId = null;
        String accountId = null;
        api.removeByCustomerIdAndAccountId(customerId, accountId)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete Customer Accounts by Institution Login ID
     *
     * Remove from Finicity aggregation the set of accounts matching the institution login ID.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeByInstitutionLoginTest() throws ApiException {
        String customerId = null;
        String institutionLoginId = null;
        api.removeByInstitutionLogin(customerId, institutionLoginId)
                .execute();
        // TODO: test validations
    }

}
