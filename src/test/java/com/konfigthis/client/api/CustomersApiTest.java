/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.16.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.CreatedCustomer;
import com.konfigthis.client.model.Customer;
import com.konfigthis.client.model.CustomerUpdate;
import com.konfigthis.client.model.CustomerWithAppData;
import com.konfigthis.client.model.Customers;
import com.konfigthis.client.model.NewCustomer;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CustomersApi
 */
@Disabled
public class CustomersApiTest {

    private static CustomersApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new CustomersApi(apiClient);
    }

    /**
     * Add Customer
     *
     * Enroll an active customer, which is the actual owner of one or more real-world accounts. This is a billable customer.  Active customers must use the \&quot;FinBank Billable\&quot; profiles for testing purposes.  _Supported regions_: ![üá∫üá∏](https://flagcdn.com/20x15/us.png)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void enrollActiveCustomerTest() throws ApiException {
        String username = null;
        String firstName = null;
        String lastName = null;
        String applicationId = null;
        String phone = null;
        String email = null;
        CreatedCustomer response = api.enrollActiveCustomer(username)
                .firstName(firstName)
                .lastName(lastName)
                .applicationId(applicationId)
                .phone(phone)
                .email(email)
                .execute();
        // TODO: test validations
    }

    /**
     * Add Testing Customer
     *
     * Enroll a testing customer (Test Drive accounts).  For using testing customers with FinBank OAuth, you must register a test application with your systems engineer or account manager. Then, use that testing &#x60;applicationId&#x60; when creating testing customers.  Testing Customers can access FinBank profiles (except \&quot;FinBank Billable\&quot; profiles), and cannot access live financial institutions.  _Supported regions_: ![üá∫üá∏](https://flagcdn.com/20x15/us.png)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void enrollTestingCustomerTest() throws ApiException {
        String username = null;
        String firstName = null;
        String lastName = null;
        String applicationId = null;
        String phone = null;
        String email = null;
        CreatedCustomer response = api.enrollTestingCustomer(username)
                .firstName(firstName)
                .lastName(lastName)
                .applicationId(applicationId)
                .phone(phone)
                .email(email)
                .execute();
        // TODO: test validations
    }

    /**
     * Get Customers
     *
     * Find all customers enrolled by the current partner, where the search text is found in the customer&#39;s username or any combination of &#x60;firstName&#x60; and &#x60;lastName&#x60; fields. If no search text is provided, all customers will be returned.  _Supported regions_: ![üá∫üá∏](https://flagcdn.com/20x15/us.png)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findEnrolledUsersTest() throws ApiException {
        String username = null;
        String type = null;
        String search = null;
        Integer start = null;
        Integer limit = null;
        Customers response = api.findEnrolledUsers()
                .username(username)
                .type(type)
                .search(search)
                .start(start)
                .limit(limit)
                .execute();
        // TODO: test validations
    }

    /**
     * Get Customer by ID
     *
     * Retrieve a customer by ID.  _Supported regions_: ![üá∫üá∏](https://flagcdn.com/20x15/us.png)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByIdTest() throws ApiException {
        String customerId = null;
        Customer response = api.getById(customerId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get Customer With App Data by ID
     *
     * Retrieve a customer along with additional details about the OAuth application.  _Supported regions_: ![üá∫üá∏](https://flagcdn.com/20x15/us.png)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getWithAppDataByIdTest() throws ApiException {
        String customerId = null;
        CustomerWithAppData response = api.getWithAppDataById(customerId)
                .execute();
        // TODO: test validations
    }

    /**
     * Modify Customer by ID
     *
     * Modify an enrolled customer by ID.  You must specify either &#x60;firstName&#x60;, &#x60;lastName&#x60;, or both in the request.  _Supported regions_: ![üá∫üá∏](https://flagcdn.com/20x15/us.png)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void modifyByIdTest() throws ApiException {
        String customerId = null;
        String firstName = null;
        String lastName = null;
        api.modifyById(customerId)
                .firstName(firstName)
                .lastName(lastName)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete Customer by ID
     *
     * Completely remove a customer from the system. This will remove the customer and all associated accounts and transactions.  ‚ö†Ô∏è Use this service carefully! It will not pause for confirmation before performing the operation!  _Supported regions_: ![üá∫üá∏](https://flagcdn.com/20x15/us.png)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeByIdTest() throws ApiException {
        String customerId = null;
        api.removeById(customerId)
                .execute();
        // TODO: test validations
    }

}
