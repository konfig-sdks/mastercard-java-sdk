/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.16.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.CustomerAccountMultipleStatements;
import java.io.File;
import com.konfigthis.client.model.ReportCustomField;
import com.konfigthis.client.model.StatementData;
import com.konfigthis.client.model.StatementReportAck;
import com.konfigthis.client.model.StatementReportConstraints;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BankStatementsApi
 */
@Disabled
public class BankStatementsApiTest {

    private static BankStatementsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new BankStatementsApi(apiClient);
    }

    /**
     * Generate Statement Report
     *
     * Generate a Statement Report for the given accounts under the given customer.  This is a premium service. A billable event will be created upon the successful generation of the Statement Report.  Before calling this API, a consumer must be created for the given customer ID (see Consumers APIs).  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void generateReportTest() throws ApiException {
        StatementData statementReportData = null;
        String customerId = null;
        List<ReportCustomField> reportCustomFields = null;
        String callbackUrl = null;
        StatementReportAck response = api.generateReport(statementReportData, customerId)
                .reportCustomFields(reportCustomFields)
                .callbackUrl(callbackUrl)
                .execute();
        // TODO: test validations
    }

    /**
     * Get Customer Account Statement
     *
     * Retrieve the customer&#39;s bank statements in PDF format. Up to 24 months of history is available depending on the financial institution. Since this is a premium service, charges incur per each successful statement retrieved.  For certified financial institutions, statements are available for the following account types: * Checking * Savings * Money market * CDs * Investments * Mortgage * Credit cards * Loans * Line of credit * Student Loans  Note: setting the timeout to 180 seconds is recommended to allow enough time for a response.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCustomerStatementInPdfTest() throws ApiException {
        String customerId = null;
        String accountId = null;
        Integer index = null;
        String type = null;
        File response = api.getCustomerStatementInPdf(customerId, accountId)
                .index(index)
                .type(type)
                .execute();
        // TODO: test validations
    }

    /**
     * Get Customer Account Multiple Statements
     *
     * This endpoint is retrieving the account statement for a given customer. The maximum number of indexes it will fetch for a single login is 24.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMultipleStatementsTest() throws ApiException {
        String customerId = null;
        String accountId = null;
        String index = null;
        CustomerAccountMultipleStatements response = api.getMultipleStatements(customerId, accountId)
                .index(index)
                .execute();
        // TODO: test validations
    }

}
