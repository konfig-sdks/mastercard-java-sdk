/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.16.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.Business;
import com.konfigthis.client.model.NewAddress;
import com.konfigthis.client.model.NewBusiness;
import com.konfigthis.client.model.PhoneNumberFormat;
import java.net.URI;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BusinessesApiApi
 */
@Disabled
public class BusinessesApiApiTest {

    private static BusinessesApiApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new BusinessesApiApi(apiClient);
    }

    /**
     * Create a New Business for a Customer
     *
     * Create a new business record for the associated customer. A customer can have one business record associated.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createNewBusinessTest() throws ApiException {
        String name = null;
        Boolean personallyLiable = null;
        NewAddress address = null;
        PhoneNumberFormat phoneNumber = null;
        String customerId = null;
        URI url = null;
        String email = null;
        String type = null;
        String taxId = null;
        Business response = api.createNewBusiness(name, personallyLiable, address, phoneNumber, customerId)
                .url(url)
                .email(email)
                .type(type)
                .taxId(taxId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get Business for Customer
     *
     * Retrieve business details associated with a specific customer. By providing the unique customer identifier, details about the associated business can be accessed.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDetailsByCustomerIdTest() throws ApiException {
        String customerId = null;
        List<Business> response = api.getDetailsByCustomerId(customerId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get Business by ID
     *
     * Retrieve business details.  _Supported regions_: ![\\U0001F1FA\\U0001F1F8](https://flagcdn.com/20x15/us.png)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDetailsByIdTest() throws ApiException {
        String customerId = null;
        List<Business> response = api.getDetailsById(customerId)
                .execute();
        // TODO: test validations
    }

    /**
     * Update Business by ID
     *
     * Update the details of a business based on its unique identifier. By providing the specific business ID and the updated information in the request, modifications can be made to the business&#39;s profile.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateByIdTest() throws ApiException {
        String name = null;
        Boolean personallyLiable = null;
        NewAddress address = null;
        PhoneNumberFormat phoneNumber = null;
        String customerId = null;
        URI url = null;
        String email = null;
        String type = null;
        String taxId = null;
        Business response = api.updateById(name, personallyLiable, address, phoneNumber, customerId)
                .url(url)
                .email(email)
                .type(type)
                .taxId(taxId)
                .execute();
        // TODO: test validations
    }

}
