/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.16.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.ThirdPartyAccessKeyData;
import com.konfigthis.client.model.ThirdPartyAccessKeyReceiptData;
import com.konfigthis.client.model.ThirdPartyAccessProduct;
import com.konfigthis.client.model.ThirdPartyAccessProvenance;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ThirdPartyAccessApi
 */
@Disabled
public class ThirdPartyAccessApiTest {

    private static ThirdPartyAccessApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new ThirdPartyAccessApi(apiClient);
    }

    /**
     * Generate Third Party Access Key
     *
     * Generate access key for third party partners. A partner can provide access to third party partners with this access key.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void generateKeyTest() throws ApiException {
        String customerId = null;
        String partnerId = null;
        String thirdPartyPartnerId = null;
        List<ThirdPartyAccessProduct> products = null;
        ThirdPartyAccessProvenance provenance = null;
        ThirdPartyAccessKeyReceiptData response = api.generateKey(customerId, partnerId, thirdPartyPartnerId, products)
                .provenance(provenance)
                .execute();
        // TODO: test validations
    }

    /**
     * Revoke Third Party Access
     *
     * Revoke access of third party partners
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void revokePartnersAccessTest() throws ApiException {
        String consentReceiptId = null;
        api.revokePartnersAccess(consentReceiptId)
                .execute();
        // TODO: test validations
    }

    /**
     * Update Third Party Access
     *
     * Update access for third party partners
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateAccessTest() throws ApiException {
        String customerId = null;
        String partnerId = null;
        String thirdPartyPartnerId = null;
        List<ThirdPartyAccessProduct> products = null;
        String consentReceiptId = null;
        ThirdPartyAccessProvenance provenance = null;
        ThirdPartyAccessKeyReceiptData response = api.updateAccess(customerId, partnerId, thirdPartyPartnerId, products, consentReceiptId)
                .provenance(provenance)
                .execute();
        // TODO: test validations
    }

}
