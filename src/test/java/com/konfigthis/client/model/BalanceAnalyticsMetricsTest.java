/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.16.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.ObbDailyBalance;
import com.konfigthis.client.model.ObbDateRangeAndAmount;
import com.konfigthis.client.model.ObbDateRangeAndCount;
import com.konfigthis.client.model.ObbNumWeeksAverageBalanceIncreasing;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for BalanceAnalyticsMetrics
 */
public class BalanceAnalyticsMetricsTest {
    private final BalanceAnalyticsMetrics model = new BalanceAnalyticsMetrics();

    /**
     * Model tests for BalanceAnalyticsMetrics
     */
    @Test
    public void testBalanceAnalyticsMetrics() {
        // TODO: test BalanceAnalyticsMetrics
    }

    /**
     * Test the property 'availableBalance'
     */
    @Test
    public void availableBalanceTest() {
        // TODO: test availableBalance
    }

    /**
     * Test the property 'availableBalanceDate'
     */
    @Test
    public void availableBalanceDateTest() {
        // TODO: test availableBalanceDate
    }

    /**
     * Test the property 'averageDailyBalanceByMonthForTheReportTimePeriod'
     */
    @Test
    public void averageDailyBalanceByMonthForTheReportTimePeriodTest() {
        // TODO: test averageDailyBalanceByMonthForTheReportTimePeriod
    }

    /**
     * Test the property 'averageDailyBalanceForTheReportTimePeriod'
     */
    @Test
    public void averageDailyBalanceForTheReportTimePeriodTest() {
        // TODO: test averageDailyBalanceForTheReportTimePeriod
    }

    /**
     * Test the property 'averageWeekdayBalanceForTheReportTimePeriod'
     */
    @Test
    public void averageWeekdayBalanceForTheReportTimePeriodTest() {
        // TODO: test averageWeekdayBalanceForTheReportTimePeriod
    }

    /**
     * Test the property 'countDailyNegativeBalancesByMonthForTheReportTimePeriod'
     */
    @Test
    public void countDailyNegativeBalancesByMonthForTheReportTimePeriodTest() {
        // TODO: test countDailyNegativeBalancesByMonthForTheReportTimePeriod
    }

    /**
     * Test the property 'currentRunningBalance'
     */
    @Test
    public void currentRunningBalanceTest() {
        // TODO: test currentRunningBalance
    }

    /**
     * Test the property 'currentRunningBalanceDate'
     */
    @Test
    public void currentRunningBalanceDateTest() {
        // TODO: test currentRunningBalanceDate
    }

    /**
     * Test the property 'dailyBalancesByWeekdayForTheReportTimePeriod'
     */
    @Test
    public void dailyBalancesByWeekdayForTheReportTimePeriodTest() {
        // TODO: test dailyBalancesByWeekdayForTheReportTimePeriod
    }

    /**
     * Test the property 'dailyBalancesForTheReportTimePeriod'
     */
    @Test
    public void dailyBalancesForTheReportTimePeriodTest() {
        // TODO: test dailyBalancesForTheReportTimePeriod
    }

    /**
     * Test the property 'historicNumberOfWeeksAverageBalanceIncreasing'
     */
    @Test
    public void historicNumberOfWeeksAverageBalanceIncreasingTest() {
        // TODO: test historicNumberOfWeeksAverageBalanceIncreasing
    }

    /**
     * Test the property 'maximumDailyBalanceByMonthForTheReportTimePeriod'
     */
    @Test
    public void maximumDailyBalanceByMonthForTheReportTimePeriodTest() {
        // TODO: test maximumDailyBalanceByMonthForTheReportTimePeriod
    }

    /**
     * Test the property 'maximumRunningBalanceForTheReportTimePeriod'
     */
    @Test
    public void maximumRunningBalanceForTheReportTimePeriodTest() {
        // TODO: test maximumRunningBalanceForTheReportTimePeriod
    }

    /**
     * Test the property 'minimumDailyBalanceByMonthForTheReportTimePeriod'
     */
    @Test
    public void minimumDailyBalanceByMonthForTheReportTimePeriodTest() {
        // TODO: test minimumDailyBalanceByMonthForTheReportTimePeriod
    }

    /**
     * Test the property 'minimumRunningBalanceForTheReportTimePeriod'
     */
    @Test
    public void minimumRunningBalanceForTheReportTimePeriodTest() {
        // TODO: test minimumRunningBalanceForTheReportTimePeriod
    }

}
